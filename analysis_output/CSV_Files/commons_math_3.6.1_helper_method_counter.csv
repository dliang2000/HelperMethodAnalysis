Class	Helper Method Name	Total Number of Calls	Total Number of Distinct Test-Case Callers	Total Number of Multi-called Test Cases
org.apache.commons.math3.filter.KalmanFilter	int getStateDimension()	2	2	null
org.apache.commons.math3.filter.KalmanFilter	int getMeasurementDimension()	2	2	null
org.apache.commons.math3.filter.KalmanFilter	double[] getStateEstimation()	5	3	2
org.apache.commons.math3.filter.KalmanFilter	double[][] getErrorCovariance()	6	3	3
org.apache.commons.math3.filter.KalmanFilter	void predict(org.apache.commons.math3.linear.RealVector)	2	2	null
org.apache.commons.math3.filter.KalmanFilter	void correct(org.apache.commons.math3.linear.RealVector)	2	2	null
org.apache.commons.math3.fitting.GaussianFitter$ParameterGuesser$1	int compare(java.lang.Object,java.lang.Object)	10	6	2
org.apache.commons.math3.fitting.GaussianFitter$1	double value(double,double[])	6	4	1
org.apache.commons.math3.fitting.GaussianFitter$1	double[] gradient(double,double[])	4	4	null
org.apache.commons.math3.fitting.PolynomialFitter	double[] fit(double[])	4	4	null
org.apache.commons.math3.fitting.CurveFitter	void addObservedPoint(double,double)	22	6	4
org.apache.commons.math3.fitting.CurveFitter	void addObservedPoint(double,double,double)	8	8	null
org.apache.commons.math3.fitting.CurveFitter	double[] fit(org.apache.commons.math3.analysis.ParametricUnivariateFunction,double[])	5	3	2
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1	double[] value(double[])	2	1	1
org.apache.commons.math3.fitting.GaussianCurveFitter$1	double value(double,double[])	6	4	1
org.apache.commons.math3.fitting.GaussianCurveFitter$1	double[] gradient(double,double[])	4	4	null
org.apache.commons.math3.fitting.GaussianCurveFitter	org.apache.commons.math3.fitting.GaussianCurveFitter create()	12	12	null
org.apache.commons.math3.fitting.GaussianCurveFitter	org.apache.commons.math3.fitting.GaussianCurveFitter withStartPoint(double[])	3	3	null
org.apache.commons.math3.fitting.GaussianCurveFitter	org.apache.commons.math3.fitting.GaussianCurveFitter withMaxIterations(int)	2	2	null
org.apache.commons.math3.fitting.GaussianCurveFitter$ParameterGuesser$1	int compare(java.lang.Object,java.lang.Object)	10	6	2
org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem$UnweightedEvaluation	org.apache.commons.math3.linear.RealMatrix getJacobian()	2	2	null
org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem$UnweightedEvaluation	org.apache.commons.math3.linear.RealVector getPoint()	3	2	1
org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem$UnweightedEvaluation	org.apache.commons.math3.linear.RealVector getResiduals()	3	3	null
org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory	org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem create(org.apache.commons.math3.fitting.leastsquares.MultivariateJacobianFunction,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.optim.ConvergenceChecker,int,int,boolean,org.apache.commons.math3.fitting.leastsquares.ParameterValidator)	4	3	1
org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory	org.apache.commons.math3.fitting.leastsquares.MultivariateJacobianFunction model(org.apache.commons.math3.analysis.MultivariateVectorFunction,org.apache.commons.math3.analysis.MultivariateMatrixFunction)	2	2	null
org.apache.commons.math3.fitting.leastsquares.DenseWeightedEvaluation	org.apache.commons.math3.linear.RealMatrix getJacobian()	2	2	null
org.apache.commons.math3.fitting.leastsquares.DenseWeightedEvaluation	org.apache.commons.math3.linear.RealVector getResiduals()	3	3	null
org.apache.commons.math3.fitting.leastsquares.DenseWeightedEvaluation	org.apache.commons.math3.linear.RealVector getPoint()	3	2	1
org.apache.commons.math3.fitting.leastsquares.EvaluationRmsChecker	boolean converged(int,java.lang.Object,java.lang.Object)	4	1	1
org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$2	org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem$Evaluation evaluate(org.apache.commons.math3.linear.RealVector)	11	11	null
org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer	org.apache.commons.math3.fitting.leastsquares.LeastSquaresOptimizer$Optimum optimize(org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem)	15	14	1
org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$1	org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem$Evaluation evaluate(org.apache.commons.math3.linear.RealVector)	11	11	null
org.apache.commons.math3.fitting.leastsquares.LeastSquaresAdapter	org.apache.commons.math3.linear.RealVector getStart()	3	3	null
org.apache.commons.math3.fitting.leastsquares.LeastSquaresAdapter	int getParameterSize()	2	2	null
org.apache.commons.math3.fitting.leastsquares.LeastSquaresAdapter	org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem$Evaluation evaluate(org.apache.commons.math3.linear.RealVector)	11	11	null
org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder	org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem build()	24	23	1
org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder	org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder maxIterations(int)	9	8	1
org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder	org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder checkerPair(org.apache.commons.math3.optim.ConvergenceChecker)	4	4	null
org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder	org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder model(org.apache.commons.math3.fitting.leastsquares.MultivariateJacobianFunction)	4	4	null
org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder	org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder target(org.apache.commons.math3.linear.RealVector)	2	2	null
org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder	org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder target(double[])	3	3	null
org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder	org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder start(double[])	12	11	1
org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder	org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder weight(org.apache.commons.math3.linear.RealMatrix)	6	6	null
org.apache.commons.math3.fitting.leastsquares.OptimumImpl	int getEvaluations()	4	3	1
org.apache.commons.math3.fitting.leastsquares.OptimumImpl	int getIterations()	2	2	null
org.apache.commons.math3.fitting.leastsquares.OptimumImpl	org.apache.commons.math3.linear.RealMatrix getCovariances(double)	4	3	1
org.apache.commons.math3.fitting.leastsquares.OptimumImpl	org.apache.commons.math3.linear.RealVector getSigma(double)	4	4	null
org.apache.commons.math3.fitting.leastsquares.OptimumImpl	double getRMS()	5	5	null
org.apache.commons.math3.fitting.leastsquares.OptimumImpl	org.apache.commons.math3.linear.RealMatrix getJacobian()	2	2	null
org.apache.commons.math3.fitting.leastsquares.OptimumImpl	double getCost()	2	2	null
org.apache.commons.math3.fitting.leastsquares.OptimumImpl	org.apache.commons.math3.linear.RealVector getResiduals()	4	4	null
org.apache.commons.math3.fitting.leastsquares.OptimumImpl	org.apache.commons.math3.linear.RealVector getPoint()	8	6	2
org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem$LazyUnweightedEvaluation	org.apache.commons.math3.linear.RealMatrix getJacobian()	2	2	null
org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem$LazyUnweightedEvaluation	org.apache.commons.math3.linear.RealVector getPoint()	3	2	1
org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem$LazyUnweightedEvaluation	org.apache.commons.math3.linear.RealVector getResiduals()	3	3	null
org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem	int getParameterSize()	2	2	null
org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem	org.apache.commons.math3.linear.RealVector getStart()	3	3	null
org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem	org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem$Evaluation evaluate(org.apache.commons.math3.linear.RealVector)	11	11	null
org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer	org.apache.commons.math3.fitting.leastsquares.LeastSquaresOptimizer$Optimum optimize(org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem)	15	14	1
org.apache.commons.math3.fitting.GaussianFitter	double[] fit()	9	9	null
org.apache.commons.math3.fitting.WeightedObservedPoints	void add(double,double)	10	5	1
org.apache.commons.math3.fitting.WeightedObservedPoints	void add(double,double,double)	9	9	null
org.apache.commons.math3.fitting.WeightedObservedPoints	void add(org.apache.commons.math3.fitting.WeightedObservedPoint)	5	3	2
org.apache.commons.math3.fitting.WeightedObservedPoints	java.util.List toList()	27	25	2
org.apache.commons.math3.fitting.WeightedObservedPoints	void clear()	2	2	null
org.apache.commons.math3.fitting.AbstractCurveFitter$TheoreticalValuesFunction$1	double[] value(double[])	2	1	1
org.apache.commons.math3.fitting.PolynomialCurveFitter	org.apache.commons.math3.fitting.PolynomialCurveFitter create(int)	4	4	null
org.apache.commons.math3.fitting.HarmonicFitter	double[] fit()	5	5	null
org.apache.commons.math3.fitting.HarmonicCurveFitter	org.apache.commons.math3.fitting.HarmonicCurveFitter create()	6	6	null
org.apache.commons.math3.ode.AbstractIntegrator$1	int compare(java.lang.Object,java.lang.Object)	10	6	2
org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator	void setStabilityCheck(boolean,int,int,double)	2	1	1
org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator	void setControlFactors(double,double,double,double)	2	1	1
org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator	void setOrderControl(int,double,double)	2	1	1
org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator	void addStepHandler(org.apache.commons.math3.ode.sampling.StepHandler)	13	13	null
org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator	void setInterpolationControl(boolean,int)	2	1	1
org.apache.commons.math3.ode.AbstractFieldIntegrator$1	int compare(java.lang.Object,java.lang.Object)	10	6	2
org.apache.commons.math3.ode.ExpandableStatefulODE	void setTime(double)	5	5	null
org.apache.commons.math3.ode.ExpandableStatefulODE	void setPrimaryState(double[])	5	5	null
org.apache.commons.math3.ode.ExpandableStatefulODE	double[] getPrimaryState()	3	3	null
org.apache.commons.math3.ode.events.EventState$1	double value(double)	90	36	30
org.apache.commons.math3.ode.events.EventState	boolean evaluateStep(org.apache.commons.math3.ode.sampling.StepInterpolator)	3	1	1
org.apache.commons.math3.ode.events.EventState	double getEventTime()	3	1	1
org.apache.commons.math3.ode.ContinuousOutputModel	void append(org.apache.commons.math3.ode.ContinuousOutputModel)	3	1	1
org.apache.commons.math3.ode.ContinuousOutputModel	double getFinalTime()	2	1	1
org.apache.commons.math3.ode.ContinuousOutputModel	void setInterpolatedTime(double)	16	14	1
org.apache.commons.math3.ode.ContinuousOutputModel	double[] getInterpolatedState()	13	13	null
org.apache.commons.math3.ode.JacobianMatrices	void registerVariationalEquations(org.apache.commons.math3.ode.ExpandableStatefulODE)	4	4	null
org.apache.commons.math3.ode.JacobianMatrices	void addParameterJacobianProvider(org.apache.commons.math3.ode.ParameterJacobianProvider)	2	2	null
org.apache.commons.math3.ode.JacobianMatrices	void setParameterizedODE(org.apache.commons.math3.ode.ParameterizedODE)	2	2	null
org.apache.commons.math3.ode.JacobianMatrices	void setParameterStep(java.lang.String,double)	4	2	1
org.apache.commons.math3.ode.JacobianMatrices	void setInitialMainStateJacobian(double[][])	2	2	null
org.apache.commons.math3.ode.JacobianMatrices	void setInitialParameterJacobian(java.lang.String,double[])	8	4	2
org.apache.commons.math3.ode.JacobianMatrices	void getCurrentMainSetJacobian(double[][])	4	4	null
org.apache.commons.math3.ode.JacobianMatrices	void getCurrentParameterJacobian(java.lang.String,double[])	7	4	2
org.apache.commons.math3.util.Combinations$LexicographicIterator	boolean hasNext()	100	75	17
org.apache.commons.math3.util.Combinations$LexicographicIterator	void remove()	2	2	null
org.apache.commons.math3.util.Combinations$LexicographicIterator	java.lang.Object next()	104	77	16
org.apache.commons.math3.util.ResizableDoubleArray	void addElement(double)	74	12	11
org.apache.commons.math3.util.ResizableDoubleArray	void addElements(double[])	5	1	1
org.apache.commons.math3.util.ResizableDoubleArray	double addElementRolling(double)	9	3	3
org.apache.commons.math3.util.ResizableDoubleArray	double substituteMostRecentElement(double)	2	1	1
org.apache.commons.math3.util.ResizableDoubleArray	void discardFrontElements(int)	5	2	2
org.apache.commons.math3.util.ResizableDoubleArray	void discardMostRecentElements(int)	6	3	2
org.apache.commons.math3.util.ResizableDoubleArray	double getContractionCriterion()	6	2	1
org.apache.commons.math3.util.ResizableDoubleArray	double getElement(int)	31	7	3
org.apache.commons.math3.util.ResizableDoubleArray	double[] getElements()	3	2	1
org.apache.commons.math3.util.ResizableDoubleArray	float getExpansionFactor()	7	3	1
org.apache.commons.math3.util.ResizableDoubleArray	int getExpansionMode()	5	2	1
org.apache.commons.math3.util.ResizableDoubleArray	int getCapacity()	18	5	4
org.apache.commons.math3.util.ResizableDoubleArray	int getNumElements()	37	12	10
org.apache.commons.math3.util.ResizableDoubleArray	void setElement(int,double)	8	4	2
org.apache.commons.math3.util.ResizableDoubleArray	void setExpansionFactor(float)	2	1	1
org.apache.commons.math3.util.ResizableDoubleArray	void setExpansionMode(int)	2	1	1
org.apache.commons.math3.util.ResizableDoubleArray	void setNumElements(int)	3	1	1
org.apache.commons.math3.util.OpenIntToFieldHashMap$Iterator	boolean hasNext()	2	1	1
org.apache.commons.math3.util.OpenIntToFieldHashMap$Iterator	void advance()	3	2	1
org.apache.commons.math3.util.MathUtils	int hash(double)	8	1	1
org.apache.commons.math3.util.MathUtils	boolean equals(double,double)	6	1	1
org.apache.commons.math3.util.MathUtils	int hash(double[])	9	2	2
org.apache.commons.math3.util.MathUtils	double normalizeAngle(double,double)	14	14	null
org.apache.commons.math3.util.MathUtils	double reduce(double,double,double)	17	2	1
org.apache.commons.math3.util.MathUtils	byte copySign(byte,byte)	13	4	3
org.apache.commons.math3.util.MathUtils	short copySign(short,short)	5	2	2
org.apache.commons.math3.util.MathUtils	int copySign(int,int)	5	2	2
org.apache.commons.math3.util.MathUtils	long copySign(long,long)	5	2	2
org.apache.commons.math3.util.MathUtils	void checkFinite(double)	3	1	1
org.apache.commons.math3.util.MathUtils	void checkFinite(double[])	3	1	1
org.apache.commons.math3.util.MathArrays	double[] scale(double,double[])	2	2	null
org.apache.commons.math3.util.MathArrays	double[] ebeAdd(double[],double[])	2	2	null
org.apache.commons.math3.util.MathArrays	double[] ebeSubtract(double[],double[])	2	2	null
org.apache.commons.math3.util.MathArrays	double[] ebeMultiply(double[],double[])	2	2	null
org.apache.commons.math3.util.MathArrays	double[] ebeDivide(double[],double[])	2	2	null
org.apache.commons.math3.util.MathArrays	double cosAngle(double[],double[])	10	3	3
org.apache.commons.math3.util.MathArrays	boolean isMonotonic(java.lang.Comparable[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)	8	1	1
org.apache.commons.math3.util.MathArrays	boolean isMonotonic(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)	8	1	1
org.apache.commons.math3.util.MathArrays	void checkOrder(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)	9	1	1
org.apache.commons.math3.util.MathArrays	void checkRectangular(long[][])	4	1	1
org.apache.commons.math3.util.MathArrays	void checkPositive(double[])	4	1	1
org.apache.commons.math3.util.MathArrays	void checkNotNaN(double[])	4	1	1
org.apache.commons.math3.util.MathArrays	void checkNonNegative(long[])	4	1	1
org.apache.commons.math3.util.MathArrays	void checkNonNegative(long[][])	4	1	1
org.apache.commons.math3.util.MathArrays	void sortInPlace(double[],double[][])	5	3	1
org.apache.commons.math3.util.MathArrays	double[] copyOf(double[])	9	5	2
org.apache.commons.math3.util.MathArrays	int[] copyOf(int[],int)	2	2	null
org.apache.commons.math3.util.MathArrays	double[] copyOf(double[],int)	2	2	null
org.apache.commons.math3.util.MathArrays	double linearCombination(double[],double[])	12	5	1
org.apache.commons.math3.util.MathArrays	double linearCombination(double,double,double,double)	8	1	1
org.apache.commons.math3.util.MathArrays	double linearCombination(double,double,double,double,double,double)	11	4	1
org.apache.commons.math3.util.MathArrays	double linearCombination(double,double,double,double,double,double,double,double)	8	1	1
org.apache.commons.math3.util.MathArrays	boolean equals(double[],double[])	9	1	1
org.apache.commons.math3.util.MathArrays	boolean equalsIncludingNaN(double[],double[])	8	1	1
org.apache.commons.math3.util.MathArrays	double[] normalizeArray(double[],double)	8	2	1
org.apache.commons.math3.util.MathArrays	double[] convolve(double[],double[])	7	1	1
org.apache.commons.math3.util.MathArrays	void shuffle(int[],int,org.apache.commons.math3.util.MathArrays$Position,org.apache.commons.math3.random.RandomGenerator)	2	2	null
org.apache.commons.math3.util.MathArrays	int[] natural(int)	2	2	null
org.apache.commons.math3.util.MathArrays	int[] sequence(int,int,int)	2	2	null
org.apache.commons.math3.util.MathArrays	boolean verifyValues(double[],int,int)	9	2	2
org.apache.commons.math3.util.MathArrays	boolean verifyValues(double[],double[],int,int)	3	1	1
org.apache.commons.math3.util.MathArrays	double[] concatenate(double[][])	7	4	1
org.apache.commons.math3.util.MathArrays	double[] unique(double[])	4	4	null
org.apache.commons.math3.util.TransformerMap	boolean containsClass(java.lang.Class)	5	3	2
org.apache.commons.math3.util.TransformerMap	boolean containsTransformer(org.apache.commons.math3.util.NumberTransformer)	3	2	1
org.apache.commons.math3.util.TransformerMap	org.apache.commons.math3.util.NumberTransformer putTransformer(java.lang.Class,org.apache.commons.math3.util.NumberTransformer)	8	8	null
org.apache.commons.math3.util.Combinations	java.util.Iterator iterator()	4	3	1
org.apache.commons.math3.util.Combinations	java.util.Comparator comparator()	6	6	null
org.apache.commons.math3.util.MultidimensionalCounter	org.apache.commons.math3.util.MultidimensionalCounter$Iterator iterator()	4	4	null
org.apache.commons.math3.util.MultidimensionalCounter	int getDimension()	2	2	null
org.apache.commons.math3.util.MultidimensionalCounter	int[] getCounts(int)	3	2	1
org.apache.commons.math3.util.MultidimensionalCounter	int getCount(int[])	5	3	1
org.apache.commons.math3.util.MathArrays$1	int compare(java.lang.Object,java.lang.Object)	10	6	2
org.apache.commons.math3.util.IntegerSequence$Range	int size()	7	7	null
org.apache.commons.math3.util.IntegerSequence$Range	java.util.Iterator iterator()	8	8	null
org.apache.commons.math3.util.Precision	int compareTo(double,double,double)	26	12	8
org.apache.commons.math3.util.Precision	int compareTo(double,double,int)	23	2	2
org.apache.commons.math3.util.Precision	boolean equals(float,float)	2	1	1
org.apache.commons.math3.util.Precision	boolean equals(float,float,int)	15	2	2
org.apache.commons.math3.util.Precision	boolean equalsIncludingNaN(double,double)	5	2	1
org.apache.commons.math3.util.Precision	boolean equals(double,double,double)	14	3	3
org.apache.commons.math3.util.Precision	boolean equalsWithRelativeTolerance(double,double,double)	16	1	1
org.apache.commons.math3.util.Precision	boolean equalsIncludingNaN(double,double,double)	9	1	1
org.apache.commons.math3.util.Precision	boolean equals(double,double,int)	52	16	6
org.apache.commons.math3.util.Precision	boolean equalsIncludingNaN(double,double,int)	23	1	1
org.apache.commons.math3.util.Precision	double round(double,int)	20	1	1
org.apache.commons.math3.util.Precision	double round(double,int,int)	56	1	1
org.apache.commons.math3.util.Precision	float round(float,int)	16	1	1
org.apache.commons.math3.util.Precision	float round(float,int,int)	59	1	1
org.apache.commons.math3.util.IterationManager	void addIterationListener(org.apache.commons.math3.util.IterationListener)	8	8	null
org.apache.commons.math3.util.IterationManager	int getIterations()	4	2	2
org.apache.commons.math3.util.IntegerSequence$Incrementor	org.apache.commons.math3.util.IntegerSequence$Incrementor create()	6	6	null
org.apache.commons.math3.util.IntegerSequence$Incrementor	org.apache.commons.math3.util.IntegerSequence$Incrementor withStart(int)	5	5	null
org.apache.commons.math3.util.IntegerSequence$Incrementor	org.apache.commons.math3.util.IntegerSequence$Incrementor withMaximalCount(int)	5	5	null
org.apache.commons.math3.util.IntegerSequence$Incrementor	org.apache.commons.math3.util.IntegerSequence$Incrementor withIncrement(int)	6	6	null
org.apache.commons.math3.util.IntegerSequence$Incrementor	boolean canIncrement(int)	3	2	1
org.apache.commons.math3.util.IntegerSequence$Incrementor	void increment()	4	3	1
org.apache.commons.math3.util.IntegerSequence$Incrementor	boolean hasNext()	101	76	17
org.apache.commons.math3.util.IntegerSequence$Incrementor	void remove()	2	2	null
org.apache.commons.math3.util.IntegerSequence$Incrementor	java.lang.Object next()	104	77	16
org.apache.commons.math3.util.MathArrays$2	int compare(java.lang.Object,java.lang.Object)	10	6	2
org.apache.commons.math3.util.Combinations$LexicographicComparator	int compare(java.lang.Object,java.lang.Object)	10	6	2
org.apache.commons.math3.util.OpenIntToDoubleHashMap	double get(int)	15	11	3
org.apache.commons.math3.util.OpenIntToDoubleHashMap	boolean containsKey(int)	5	2	1
org.apache.commons.math3.util.OpenIntToDoubleHashMap	org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator iterator()	2	2	null
org.apache.commons.math3.util.OpenIntToDoubleHashMap	int size()	13	9	4
org.apache.commons.math3.util.OpenIntToDoubleHashMap	double remove(int)	7	7	null
org.apache.commons.math3.util.OpenIntToDoubleHashMap	double put(int,double)	10	5	2
org.apache.commons.math3.util.IntegerSequence	org.apache.commons.math3.util.IntegerSequence$Range range(int,int)	2	2	null
org.apache.commons.math3.util.IntegerSequence	org.apache.commons.math3.util.IntegerSequence$Range range(int,int,int)	6	6	null
org.apache.commons.math3.util.DefaultTransformer	double transform(java.lang.Object)	6	6	null
org.apache.commons.math3.util.Decimal64Field	org.apache.commons.math3.util.Decimal64Field getInstance()	159	159	null
org.apache.commons.math3.util.Decimal64Field	java.lang.Class getRuntimeClass()	2	2	null
org.apache.commons.math3.util.Decimal64Field	java.lang.Object getOne()	13	11	2
org.apache.commons.math3.util.Decimal64Field	java.lang.Object getZero()	8	6	1
org.apache.commons.math3.util.ArithmeticUtils	int addAndCheck(int,int)	3	1	1
org.apache.commons.math3.util.ArithmeticUtils	long addAndCheck(long,long)	9	1	1
org.apache.commons.math3.util.ArithmeticUtils	int gcd(int,int)	21	2	1
org.apache.commons.math3.util.ArithmeticUtils	long gcd(long,long)	22	2	1
org.apache.commons.math3.util.ArithmeticUtils	int lcm(int,int)	14	1	1
org.apache.commons.math3.util.ArithmeticUtils	long lcm(long,long)	16	1	1
org.apache.commons.math3.util.ArithmeticUtils	int mulAndCheck(int,int)	3	1	1
org.apache.commons.math3.util.ArithmeticUtils	long mulAndCheck(long,long)	10	1	1
org.apache.commons.math3.util.ArithmeticUtils	int subAndCheck(int,int)	6	2	1
org.apache.commons.math3.util.ArithmeticUtils	long subAndCheck(long,long)	6	1	1
org.apache.commons.math3.util.ArithmeticUtils	int pow(int,int)	16	9	3
org.apache.commons.math3.util.ArithmeticUtils	long pow(long,int)	10	6	3
org.apache.commons.math3.util.ArithmeticUtils	long pow(long,long)	3	1	1
org.apache.commons.math3.util.ArithmeticUtils	java.math.BigInteger pow(java.math.BigInteger,int)	4	1	1
org.apache.commons.math3.util.ArithmeticUtils	java.math.BigInteger pow(java.math.BigInteger,long)	4	1	1
org.apache.commons.math3.util.ArithmeticUtils	java.math.BigInteger pow(java.math.BigInteger,java.math.BigInteger)	5	2	1
org.apache.commons.math3.util.BigReal	org.apache.commons.math3.util.BigReal add(org.apache.commons.math3.util.BigReal)	3	2	1
org.apache.commons.math3.util.BigReal	org.apache.commons.math3.util.BigReal subtract(org.apache.commons.math3.util.BigReal)	3	2	1
org.apache.commons.math3.util.BigReal	org.apache.commons.math3.util.BigReal negate()	3	1	1
org.apache.commons.math3.util.BigReal	org.apache.commons.math3.util.BigReal divide(org.apache.commons.math3.util.BigReal)	2	2	null
org.apache.commons.math3.util.BigReal	org.apache.commons.math3.util.BigReal reciprocal()	2	2	null
org.apache.commons.math3.util.BigReal	org.apache.commons.math3.util.BigReal multiply(org.apache.commons.math3.util.BigReal)	3	2	1
org.apache.commons.math3.util.BigReal	int compareTo(org.apache.commons.math3.util.BigReal)	4	1	1
org.apache.commons.math3.util.BigReal	double doubleValue()	25	7	3
org.apache.commons.math3.util.BigReal	java.math.BigDecimal bigDecimalValue()	2	1	1
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator	boolean hasNext()	2	1	1
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator	void advance()	3	2	1
org.apache.commons.math3.util.Decimal64	org.apache.commons.math3.util.Decimal64 add(org.apache.commons.math3.util.Decimal64)	27	1	1
org.apache.commons.math3.util.Decimal64	org.apache.commons.math3.util.Decimal64 subtract(org.apache.commons.math3.util.Decimal64)	21	1	1
org.apache.commons.math3.util.Decimal64	org.apache.commons.math3.util.Decimal64 negate()	7	1	1
org.apache.commons.math3.util.Decimal64	org.apache.commons.math3.util.Decimal64 multiply(org.apache.commons.math3.util.Decimal64)	27	1	1
org.apache.commons.math3.util.Decimal64	org.apache.commons.math3.util.Decimal64 divide(org.apache.commons.math3.util.Decimal64)	33	1	1
org.apache.commons.math3.util.Decimal64	org.apache.commons.math3.util.Decimal64 reciprocal()	4	1	1
org.apache.commons.math3.util.Decimal64	boolean isInfinite()	7	1	1
org.apache.commons.math3.util.Decimal64	boolean isNaN()	7	1	1
org.apache.commons.math3.util.OpenIntToFieldHashMap	org.apache.commons.math3.FieldElement get(int)	15	11	3
org.apache.commons.math3.util.OpenIntToFieldHashMap	boolean containsKey(int)	5	2	1
org.apache.commons.math3.util.OpenIntToFieldHashMap	org.apache.commons.math3.util.OpenIntToFieldHashMap$Iterator iterator()	2	2	null
org.apache.commons.math3.util.OpenIntToFieldHashMap	int size()	13	9	4
org.apache.commons.math3.util.OpenIntToFieldHashMap	org.apache.commons.math3.FieldElement remove(int)	7	7	null
org.apache.commons.math3.util.OpenIntToFieldHashMap	org.apache.commons.math3.FieldElement put(int,org.apache.commons.math3.FieldElement)	10	5	2
org.apache.commons.math3.util.CombinatoricsUtils	long binomialCoefficient(int,int)	18	8	3
org.apache.commons.math3.util.CombinatoricsUtils	double binomialCoefficientDouble(int,int)	8	4	3
org.apache.commons.math3.util.CombinatoricsUtils	double binomialCoefficientLog(int,int)	7	4	3
org.apache.commons.math3.util.CombinatoricsUtils	long factorial(int)	6	4	2
org.apache.commons.math3.util.CombinatoricsUtils	double factorialDouble(int)	4	2	2
org.apache.commons.math3.util.CombinatoricsUtils	double factorialLog(int)	3	2	1
org.apache.commons.math3.util.CombinatoricsUtils	long stirlingS2(int,int)	32	4	1
org.apache.commons.math3.util.CombinatoricsUtils	void checkBinomial(int,int)	3	3	null
org.apache.commons.math3.util.Incrementor$2	void setMaximalCount(int)	5	5	null
org.apache.commons.math3.util.Incrementor$2	void incrementCount()	16	6	5
org.apache.commons.math3.util.Incrementor	void setMaximalCount(int)	5	5	null
org.apache.commons.math3.util.Incrementor	int getMaximalCount()	3	3	null
org.apache.commons.math3.util.Incrementor	int getCount()	8	6	2
org.apache.commons.math3.util.Incrementor	boolean canIncrement()	5	2	1
org.apache.commons.math3.util.Incrementor	void incrementCount(int)	2	1	1
org.apache.commons.math3.util.Incrementor	void incrementCount()	16	6	5
org.apache.commons.math3.util.Combinations$SingletonIterator	boolean hasNext()	100	75	17
org.apache.commons.math3.util.Combinations$SingletonIterator	void remove()	2	2	null
org.apache.commons.math3.util.Combinations$SingletonIterator	java.lang.Object next()	104	77	16
org.apache.commons.math3.util.BigRealField	org.apache.commons.math3.util.BigRealField getInstance()	3	3	null
org.apache.commons.math3.util.BigRealField	java.lang.Class getRuntimeClass()	2	2	null
org.apache.commons.math3.util.BigRealField	java.lang.Object getOne()	13	11	2
org.apache.commons.math3.util.BigRealField	java.lang.Object getZero()	8	6	1
org.apache.commons.math3.util.FastMath	double sqrt(double)	163	100	32
org.apache.commons.math3.util.FastMath	double cosh(double)	7	7	null
org.apache.commons.math3.util.FastMath	double sinh(double)	7	7	null
org.apache.commons.math3.util.FastMath	double tanh(double)	3	3	null
org.apache.commons.math3.util.FastMath	double signum(double)	6	2	2
org.apache.commons.math3.util.FastMath	float signum(float)	4	1	1
org.apache.commons.math3.util.FastMath	double nextUp(double)	11	6	3
org.apache.commons.math3.util.FastMath	double nextDown(double)	3	2	1
org.apache.commons.math3.util.FastMath	double random()	4	4	null
org.apache.commons.math3.util.FastMath	double exp(double)	29	16	7
org.apache.commons.math3.util.FastMath	double expm1(double)	2	2	null
org.apache.commons.math3.util.FastMath	double log(double)	55	22	14
org.apache.commons.math3.util.FastMath	double log1p(double)	3	3	null
org.apache.commons.math3.util.FastMath	double log(double,double)	7	1	1
org.apache.commons.math3.util.FastMath	double pow(double,double)	109	12	6
org.apache.commons.math3.util.FastMath	double pow(double,int)	31	27	4
org.apache.commons.math3.util.FastMath	double pow(double,long)	28	2	1
org.apache.commons.math3.util.FastMath	double sin(double)	67	39	9
org.apache.commons.math3.util.FastMath	double cos(double)	58	27	7
org.apache.commons.math3.util.FastMath	double tan(double)	3	3	null
org.apache.commons.math3.util.FastMath	double atan2(double,double)	30	6	2
org.apache.commons.math3.util.FastMath	double asin(double)	8	3	1
org.apache.commons.math3.util.FastMath	double acos(double)	10	5	1
org.apache.commons.math3.util.FastMath	double toRadians(double)	4	4	null
org.apache.commons.math3.util.FastMath	double toDegrees(double)	11	6	3
org.apache.commons.math3.util.FastMath	double abs(double)	394	144	78
org.apache.commons.math3.util.FastMath	double ulp(double)	71	28	11
org.apache.commons.math3.util.FastMath	double scalb(double,int)	38	7	3
org.apache.commons.math3.util.FastMath	float scalb(float,int)	14	1	1
org.apache.commons.math3.util.FastMath	double nextAfter(double,double)	41	11	7
org.apache.commons.math3.util.FastMath	float nextAfter(float,double)	7	1	1
org.apache.commons.math3.util.FastMath	double ceil(double)	3	1	1
org.apache.commons.math3.util.FastMath	double rint(double)	3	3	null
org.apache.commons.math3.util.FastMath	long round(double)	2	2	null
org.apache.commons.math3.util.FastMath	float min(float,float)	2	1	1
org.apache.commons.math3.util.FastMath	double min(double,double)	3	2	1
org.apache.commons.math3.util.FastMath	int max(int,int)	5	5	null
org.apache.commons.math3.util.FastMath	float max(float,float)	2	1	1
org.apache.commons.math3.util.FastMath	double max(double,double)	65	36	20
org.apache.commons.math3.util.FastMath	double IEEEremainder(double,double)	4	4	null
org.apache.commons.math3.util.FastMath	int toIntExact(long)	7	4	2
org.apache.commons.math3.util.FastMath	int incrementExact(int)	2	1	1
org.apache.commons.math3.util.FastMath	int decrementExact(int)	2	1	1
org.apache.commons.math3.util.FastMath	int addExact(int,int)	2	1	1
org.apache.commons.math3.util.FastMath	long addExact(long,long)	2	1	1
org.apache.commons.math3.util.FastMath	int subtractExact(int,int)	2	1	1
org.apache.commons.math3.util.FastMath	long subtractExact(long,long)	2	1	1
org.apache.commons.math3.util.FastMath	int multiplyExact(int,int)	2	1	1
org.apache.commons.math3.util.FastMath	long multiplyExact(long,long)	2	1	1
org.apache.commons.math3.util.FastMath	int floorDiv(int,int)	8	2	2
org.apache.commons.math3.util.FastMath	long floorDiv(long,long)	8	2	2
org.apache.commons.math3.util.FastMath	int floorMod(int,int)	7	2	1
org.apache.commons.math3.util.FastMath	long floorMod(long,long)	7	2	1
org.apache.commons.math3.util.FastMath	double copySign(double,double)	20	5	5
org.apache.commons.math3.util.FastMath	int getExponent(double)	2	1	1
org.apache.commons.math3.util.Pair	java.lang.Object getKey()	22	6	4
org.apache.commons.math3.util.Pair	java.lang.Object getValue()	103	98	5
org.apache.commons.math3.util.Pair	java.lang.Object getFirst()	5	4	1
org.apache.commons.math3.util.Pair	java.lang.Object getSecond()	2	2	null
org.apache.commons.math3.util.MultidimensionalCounter$Iterator	boolean hasNext()	105	78	19
org.apache.commons.math3.util.MultidimensionalCounter$Iterator	java.lang.Integer next()	4	3	1
org.apache.commons.math3.util.MultidimensionalCounter$Iterator	int getCount(int)	3	2	1
org.apache.commons.math3.util.MultidimensionalCounter$Iterator	void remove()	2	2	null
org.apache.commons.math3.util.MultidimensionalCounter$Iterator	java.lang.Object next()	104	77	16
org.apache.commons.math3.optim.linear.LinearObjectiveFunction	double value(double[])	16	4	4
org.apache.commons.math3.optim.linear.SimplexSolver	org.apache.commons.math3.optim.PointValuePair optimize(org.apache.commons.math3.optim.OptimizationData[])	30	29	1
org.apache.commons.math3.optim.linear.SolutionCallback	org.apache.commons.math3.optim.PointValuePair getSolution()	2	1	1
org.apache.commons.math3.optim.linear.SolutionCallback	boolean isSolutionOptimal()	2	1	1
org.apache.commons.math3.optim.linear.SimplexTableau	double[][] getData()	3	3	null
org.apache.commons.math3.optim.SimpleValueChecker	boolean converged(int,org.apache.commons.math3.optim.PointValuePair,org.apache.commons.math3.optim.PointValuePair)	7	2	2
org.apache.commons.math3.optim.PointVectorValuePair	double[] getPoint()	7	6	1
org.apache.commons.math3.optim.PointVectorValuePair	double[] getPointRef()	6	2	2
org.apache.commons.math3.optim.PointVectorValuePair	double[] getValue()	7	2	2
org.apache.commons.math3.optim.PointVectorValuePair	java.lang.Object getValue()	4	3	1
org.apache.commons.math3.optim.SimplePointChecker	boolean converged(int,org.apache.commons.math3.util.Pair,org.apache.commons.math3.util.Pair)	7	2	2
org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer	org.apache.commons.math3.optim.PointVectorValuePair[] getOptima()	3	3	null
org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer$1	int compare(java.lang.Object,java.lang.Object)	10	6	2
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer	org.apache.commons.math3.optim.PointValuePair optimize(org.apache.commons.math3.optim.OptimizationData[])	28	28	null
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer$1	double value(double[])	16	4	4
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer	org.apache.commons.math3.optim.PointValuePair optimize(org.apache.commons.math3.optim.OptimizationData[])	4	2	1
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer$2	int compare(java.lang.Object,java.lang.Object)	10	6	2
org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizer	org.apache.commons.math3.optim.PointValuePair[] getOptima()	2	2	null
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapter	double value(double[])	16	4	4
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter	double[] unboundedToBounded(double[])	4	4	null
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter	double[] boundedToUnbounded(double[])	16	4	4
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter	double value(double[])	16	4	4
org.apache.commons.math3.optim.nonlinear.scalar.LeastSquaresConverter	double value(double[])	16	4	4
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer	org.apache.commons.math3.optim.PointValuePair optimize(org.apache.commons.math3.optim.OptimizationData[])	14	13	1
org.apache.commons.math3.optim.nonlinear.scalar.LineSearch$1	double value(double)	90	36	30
org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizer$1	int compare(java.lang.Object,java.lang.Object)	10	6	2
org.apache.commons.math3.optim.SimpleVectorValueChecker	boolean converged(int,org.apache.commons.math3.optim.PointVectorValuePair,org.apache.commons.math3.optim.PointVectorValuePair)	7	2	2
org.apache.commons.math3.optim.PointValuePair	double[] getPoint()	107	44	33
org.apache.commons.math3.optim.PointValuePair	double[] getPointRef()	10	5	5
org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizer$1	int compare(java.lang.Object,java.lang.Object)	10	6	2
org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizer	int getEvaluations()	4	2	2
org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizer	org.apache.commons.math3.optim.univariate.UnivariatePointValuePair[] getOptima()	3	3	null
org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizer	org.apache.commons.math3.optim.univariate.UnivariatePointValuePair optimize(org.apache.commons.math3.optim.OptimizationData[])	5	5	null
org.apache.commons.math3.optim.univariate.SimpleUnivariateValueChecker	boolean converged(int,org.apache.commons.math3.optim.univariate.UnivariatePointValuePair,org.apache.commons.math3.optim.univariate.UnivariatePointValuePair)	7	2	2
org.apache.commons.math3.optim.univariate.UnivariatePointValuePair	double getPoint()	21	12	6
org.apache.commons.math3.optim.univariate.UnivariatePointValuePair	double getValue()	3	2	1
org.apache.commons.math3.optim.univariate.BracketFinder	void search(org.apache.commons.math3.analysis.UnivariateFunction,org.apache.commons.math3.optim.nonlinear.scalar.GoalType,double,double)	8	4	2
org.apache.commons.math3.optim.univariate.BracketFinder	double getLo()	8	4	2
org.apache.commons.math3.optim.univariate.BracketFinder	double getHi()	8	4	2
org.apache.commons.math3.optim.univariate.BracketFinder	double getMid()	2	2	null
org.apache.commons.math3.distribution.UniformIntegerDistribution	double getNumericalMean()	2	1	1
org.apache.commons.math3.distribution.UniformIntegerDistribution	double getNumericalVariance()	2	1	1
org.apache.commons.math3.distribution.UniformIntegerDistribution	int sample()	3	3	null
org.apache.commons.math3.distribution.CauchyDistribution	double getNumericalMean()	2	1	1
org.apache.commons.math3.distribution.CauchyDistribution	double getNumericalVariance()	2	1	1
org.apache.commons.math3.distribution.NormalDistribution	double cumulativeProbability(double)	7	2	1
org.apache.commons.math3.distribution.NormalDistribution	double inverseCumulativeProbability(double)	5	2	1
org.apache.commons.math3.distribution.NormalDistribution	double cumulativeProbability(double,double)	2	2	null
org.apache.commons.math3.distribution.NormalDistribution	double getNumericalMean()	3	1	1
org.apache.commons.math3.distribution.NormalDistribution	double getNumericalVariance()	3	1	1
org.apache.commons.math3.distribution.NormalDistribution	double sample()	6	5	1
org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximization	void fit(org.apache.commons.math3.distribution.MixtureMultivariateNormalDistribution,int,double)	3	3	null
org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximization	void fit(org.apache.commons.math3.distribution.MixtureMultivariateNormalDistribution)	2	2	null
org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximization	org.apache.commons.math3.distribution.MixtureMultivariateNormalDistribution estimate(double[][],int)	5	5	null
org.apache.commons.math3.distribution.EnumeratedIntegerDistribution	double probability(int)	2	2	null
org.apache.commons.math3.distribution.EnumeratedIntegerDistribution	double cumulativeProbability(int)	2	2	null
org.apache.commons.math3.distribution.EnumeratedIntegerDistribution	double getNumericalMean()	2	2	null
org.apache.commons.math3.distribution.EnumeratedIntegerDistribution	double getNumericalVariance()	2	2	null
org.apache.commons.math3.distribution.AbstractRealDistribution$1	double value(double)	90	36	30
org.apache.commons.math3.distribution.GeometricDistribution	double getNumericalMean()	2	1	1
org.apache.commons.math3.distribution.GeometricDistribution	double getNumericalVariance()	2	1	1
org.apache.commons.math3.distribution.PoissonDistribution	double cumulativeProbability(int)	3	2	1
org.apache.commons.math3.distribution.PoissonDistribution	double normalApproximateProbability(int)	4	1	1
org.apache.commons.math3.distribution.PoissonDistribution	double getNumericalMean()	2	1	1
org.apache.commons.math3.distribution.PoissonDistribution	double getNumericalVariance()	2	1	1
org.apache.commons.math3.distribution.PoissonDistribution	int sample()	2	1	1
org.apache.commons.math3.distribution.BinomialDistribution	double getNumericalMean()	2	1	1
org.apache.commons.math3.distribution.BinomialDistribution	double getNumericalVariance()	2	1	1
org.apache.commons.math3.distribution.BinomialDistribution	int getSupportLowerBound()	3	3	null
org.apache.commons.math3.distribution.BinomialDistribution	int getSupportUpperBound()	3	3	null
org.apache.commons.math3.distribution.GammaDistribution	double getNumericalMean()	2	1	1
org.apache.commons.math3.distribution.GammaDistribution	double getNumericalVariance()	2	1	1
org.apache.commons.math3.distribution.MultivariateNormalDistribution	double[] getMeans()	3	3	null
org.apache.commons.math3.distribution.MultivariateNormalDistribution	org.apache.commons.math3.linear.RealMatrix getCovariances()	3	3	null
org.apache.commons.math3.distribution.MultivariateNormalDistribution	double density(double[])	2	2	null
org.apache.commons.math3.distribution.LevyDistribution	double getLocation()	2	2	null
org.apache.commons.math3.distribution.UniformRealDistribution	double inverseCumulativeProbability(double)	2	2	null
org.apache.commons.math3.distribution.UniformRealDistribution	double getNumericalMean()	3	1	1
org.apache.commons.math3.distribution.UniformRealDistribution	double getNumericalVariance()	3	1	1
org.apache.commons.math3.distribution.UniformRealDistribution	double sample()	17	11	6
org.apache.commons.math3.distribution.ParetoDistribution	double cumulativeProbability(double)	5	1	1
org.apache.commons.math3.distribution.ParetoDistribution	double cumulativeProbability(double,double)	2	2	null
org.apache.commons.math3.distribution.ParetoDistribution	double getNumericalMean()	2	1	1
org.apache.commons.math3.distribution.ParetoDistribution	double getNumericalVariance()	2	1	1
org.apache.commons.math3.distribution.KolmogorovSmirnovDistribution	double cdf(double,boolean)	12	1	1
org.apache.commons.math3.distribution.ChiSquaredDistribution	double getNumericalMean()	2	1	1
org.apache.commons.math3.distribution.ChiSquaredDistribution	double getNumericalVariance()	2	1	1
org.apache.commons.math3.distribution.BetaDistribution	double getNumericalMean()	3	2	1
org.apache.commons.math3.distribution.BetaDistribution	double getNumericalVariance()	3	2	1
org.apache.commons.math3.distribution.FDistribution	double cumulativeProbability(double)	3	2	1
org.apache.commons.math3.distribution.FDistribution	double getNumericalMean()	3	1	1
org.apache.commons.math3.distribution.FDistribution	double getNumericalVariance()	3	1	1
org.apache.commons.math3.distribution.MixtureMultivariateRealDistribution	java.util.List getComponents()	3	3	null
org.apache.commons.math3.distribution.ZipfDistribution$ZipfRejectionInversionSampler	double helper1(double)	2	2	null
org.apache.commons.math3.distribution.WeibullDistribution	double inverseCumulativeProbability(double)	2	2	null
org.apache.commons.math3.distribution.WeibullDistribution	double getNumericalMean()	6	1	1
org.apache.commons.math3.distribution.WeibullDistribution	double getNumericalVariance()	2	1	1
org.apache.commons.math3.distribution.TDistribution	double cumulativeProbability(double)	5	3	2
org.apache.commons.math3.distribution.TDistribution	double getNumericalMean()	3	1	1
org.apache.commons.math3.distribution.TDistribution	double getNumericalVariance()	3	1	1
org.apache.commons.math3.distribution.LogNormalDistribution	double cumulativeProbability(double)	5	1	1
org.apache.commons.math3.distribution.LogNormalDistribution	double cumulativeProbability(double,double)	2	2	null
org.apache.commons.math3.distribution.LogNormalDistribution	double getNumericalMean()	3	1	1
org.apache.commons.math3.distribution.LogNormalDistribution	double getNumericalVariance()	4	2	1
org.apache.commons.math3.distribution.EnumeratedRealDistribution	double probability(double)	2	2	null
org.apache.commons.math3.distribution.EnumeratedRealDistribution	double cumulativeProbability(double)	2	2	null
org.apache.commons.math3.distribution.EnumeratedRealDistribution	double inverseCumulativeProbability(double)	10	2	1
org.apache.commons.math3.distribution.EnumeratedRealDistribution	double getNumericalMean()	2	2	null
org.apache.commons.math3.distribution.EnumeratedRealDistribution	double getNumericalVariance()	2	2	null
org.apache.commons.math3.distribution.ExponentialDistribution	double density(double)	8	1	1
org.apache.commons.math3.distribution.ExponentialDistribution	double getNumericalMean()	2	1	1
org.apache.commons.math3.distribution.ExponentialDistribution	double getNumericalVariance()	2	1	1
org.apache.commons.math3.distribution.PascalDistribution	double getNumericalMean()	2	1	1
org.apache.commons.math3.distribution.PascalDistribution	double getNumericalVariance()	2	1	1
org.apache.commons.math3.distribution.TriangularDistribution	double getNumericalMean()	3	1	1
org.apache.commons.math3.distribution.TriangularDistribution	double getNumericalVariance()	3	1	1
org.apache.commons.math3.distribution.HypergeometricDistribution	double cumulativeProbability(int)	2	1	1
org.apache.commons.math3.distribution.HypergeometricDistribution	int getNumberOfSuccesses()	2	2	null
org.apache.commons.math3.distribution.HypergeometricDistribution	int getPopulationSize()	2	2	null
org.apache.commons.math3.distribution.HypergeometricDistribution	int getSampleSize()	2	2	null
org.apache.commons.math3.distribution.HypergeometricDistribution	double getNumericalMean()	2	1	1
org.apache.commons.math3.distribution.HypergeometricDistribution	double getNumericalVariance()	2	1	1
org.apache.commons.math3.distribution.HypergeometricDistribution	int getSupportLowerBound()	3	3	null
org.apache.commons.math3.distribution.HypergeometricDistribution	int getSupportUpperBound()	3	3	null
org.apache.commons.math3.analysis.FunctionUtils$18	double[] value(double[])	2	1	1
org.apache.commons.math3.analysis.FunctionUtils$15	double value(double)	91	37	30
org.apache.commons.math3.analysis.FunctionUtils$15	org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)	41	14	9
org.apache.commons.math3.analysis.FunctionUtils$16$2	double[] value(double[])	2	1	1
org.apache.commons.math3.analysis.FunctionUtils$9	double value(double)	92	36	31
org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction	double value(double)	101	38	32
org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction	org.apache.commons.math3.analysis.UnivariateFunction derivative()	2	2	null
org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction	org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)	41	14	9
org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction	org.apache.commons.math3.analysis.polynomials.PolynomialFunction[] getPolynomials()	8	8	null
org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction	boolean isValidPoint(double)	4	1	1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction	double value(double)	197	59	49
org.apache.commons.math3.analysis.polynomials.PolynomialFunction	int degree()	8	8	null
org.apache.commons.math3.analysis.polynomials.PolynomialFunction	double[] getCoefficients()	31	12	8
org.apache.commons.math3.analysis.polynomials.PolynomialFunction	org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)	41	14	9
org.apache.commons.math3.analysis.polynomials.PolynomialFunction	org.apache.commons.math3.analysis.polynomials.PolynomialFunction add(org.apache.commons.math3.analysis.polynomials.PolynomialFunction)	11	5	5
org.apache.commons.math3.analysis.polynomials.PolynomialFunction	org.apache.commons.math3.analysis.polynomials.PolynomialFunction subtract(org.apache.commons.math3.analysis.polynomials.PolynomialFunction)	4	2	1
org.apache.commons.math3.analysis.polynomials.PolynomialFunction	org.apache.commons.math3.analysis.polynomials.PolynomialFunction multiply(org.apache.commons.math3.analysis.polynomials.PolynomialFunction)	14	5	5
org.apache.commons.math3.analysis.polynomials.PolynomialFunction	org.apache.commons.math3.analysis.polynomials.PolynomialFunction polynomialDerivative()	13	9	4
org.apache.commons.math3.analysis.polynomials.PolynomialFunction	org.apache.commons.math3.analysis.UnivariateFunction derivative()	19	6	3
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeForm	double value(double)	99	39	33
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeForm	int degree()	3	3	null
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeForm	double[] getCoefficients()	3	3	null
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm	double value(double)	100	40	33
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm	org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)	42	15	9
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm	int degree()	3	3	null
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm	double[] getCoefficients()	3	3	null
org.apache.commons.math3.analysis.polynomials.PolynomialsUtils	org.apache.commons.math3.analysis.polynomials.PolynomialFunction createChebyshevPolynomial(int)	12	4	2
org.apache.commons.math3.analysis.polynomials.PolynomialsUtils	org.apache.commons.math3.analysis.polynomials.PolynomialFunction createHermitePolynomial(int)	11	3	2
org.apache.commons.math3.analysis.polynomials.PolynomialsUtils	org.apache.commons.math3.analysis.polynomials.PolynomialFunction createLaguerrePolynomial(int)	11	3	2
org.apache.commons.math3.analysis.polynomials.PolynomialsUtils	org.apache.commons.math3.analysis.polynomials.PolynomialFunction createLegendrePolynomial(int)	14	5	3
org.apache.commons.math3.analysis.polynomials.PolynomialsUtils	org.apache.commons.math3.analysis.polynomials.PolynomialFunction createJacobiPolynomial(int,int,int)	4	3	1
org.apache.commons.math3.analysis.polynomials.PolynomialsUtils	double[] shift(double[],double)	5	1	1
org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver	int getMaximalOrder()	2	2	null
org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver	org.apache.commons.math3.RealFieldElement getAbsoluteAccuracy()	2	1	1
org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver	org.apache.commons.math3.RealFieldElement getFunctionValueAccuracy()	2	1	1
org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver	org.apache.commons.math3.RealFieldElement solve(int,org.apache.commons.math3.analysis.RealFieldUnivariateFunction,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.RealFieldElement,org.apache.commons.math3.analysis.solvers.AllowedSolution)	2	1	1
org.apache.commons.math3.analysis.solvers.AllowedSolution	org.apache.commons.math3.analysis.solvers.AllowedSolution[] values()	2	2	null
org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils	double solve(org.apache.commons.math3.analysis.UnivariateFunction,double,double)	14	4	1
org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils	double solve(org.apache.commons.math3.analysis.UnivariateFunction,double,double,double)	4	4	null
org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils	double[] bracket(org.apache.commons.math3.analysis.UnivariateFunction,double,double,double)	5	5	null
org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils	double[] bracket(org.apache.commons.math3.analysis.UnivariateFunction,double,double,double,double,double,int)	8	8	null
org.apache.commons.math3.analysis.solvers.LaguerreSolver	org.apache.commons.math3.complex.Complex[] solveAllComplex(double[],double)	2	2	null
org.apache.commons.math3.analysis.solvers.LaguerreSolver	org.apache.commons.math3.complex.Complex solveComplex(double[],double)	2	2	null
org.apache.commons.math3.analysis.solvers.NewtonRaphsonSolver	double solve(int,org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction,double,double)	13	2	2
org.apache.commons.math3.analysis.solvers.NewtonSolver	double solve(int,org.apache.commons.math3.analysis.DifferentiableUnivariateFunction,double,double)	13	2	2
org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolver	int getMaximalOrder()	3	1	1
org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolver	double solve(int,org.apache.commons.math3.analysis.UnivariateFunction,double,double,double,org.apache.commons.math3.analysis.solvers.AllowedSolution)	3	2	1
org.apache.commons.math3.analysis.FunctionUtils$10	double value(double)	90	36	30
org.apache.commons.math3.analysis.FunctionUtils$5	double value(double)	91	37	30
org.apache.commons.math3.analysis.FunctionUtils$5	org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)	41	14	9
org.apache.commons.math3.analysis.FunctionUtils$9$1	double value(double)	90	36	30
org.apache.commons.math3.analysis.FunctionUtils$7	double value(double)	90	36	30
org.apache.commons.math3.analysis.FunctionUtils$11	double value(double[])	16	4	4
org.apache.commons.math3.analysis.FunctionUtils$2	double value(double)	91	37	30
org.apache.commons.math3.analysis.FunctionUtils$2	org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)	41	14	9
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction	double value(double[])	16	4	4
org.apache.commons.math3.analysis.interpolation.BicubicFunction	double value(double,double)	15	7	3
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolator	org.apache.commons.math3.analysis.MultivariateFunction interpolate(double[][],double[])	2	2	null
org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction	double value(double,double)	15	7	3
org.apache.commons.math3.analysis.interpolation.LinearInterpolator	org.apache.commons.math3.analysis.UnivariateFunction interpolate(double[],double[])	7	5	1
org.apache.commons.math3.analysis.interpolation.TricubicInterpolator$1	boolean isValidPoint(double,double,double)	13	1	1
org.apache.commons.math3.analysis.interpolation.LoessInterpolator	double[] smooth(double[],double[])	18	18	null
org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction	double value(double,double)	28	12	6
org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction	boolean isValidPoint(double,double)	5	1	1
org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolator	org.apache.commons.math3.analysis.TrivariateFunction interpolate(double[],double[],double[],double[][][])	9	3	1
org.apache.commons.math3.analysis.interpolation.SplineInterpolator	org.apache.commons.math3.analysis.UnivariateFunction interpolate(double[],double[])	7	5	1
org.apache.commons.math3.analysis.interpolation.PiecewiseBicubicSplineInterpolatingFunction	double value(double,double)	15	7	3
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1	double value(double)	90	36	30
org.apache.commons.math3.analysis.interpolation.MicrosphereProjectionInterpolator$1	double value(double[])	16	4	4
org.apache.commons.math3.analysis.interpolation.TricubicFunction	double value(double,double,double)	6	2	2
org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$5	double value(double,double)	15	7	3
org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator	void addSamplePoint(org.apache.commons.math3.FieldElement,org.apache.commons.math3.FieldElement[][])	17	10	4
org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator	org.apache.commons.math3.FieldElement[] value(org.apache.commons.math3.FieldElement)	11	9	1
org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator	org.apache.commons.math3.FieldElement[][] derivatives(org.apache.commons.math3.FieldElement,int)	6	4	1
org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolator	org.apache.commons.math3.analysis.BivariateFunction interpolate(double[],double[],double[][])	7	3	1
org.apache.commons.math3.analysis.interpolation.DividedDifferenceInterpolator	org.apache.commons.math3.analysis.UnivariateFunction interpolate(double[],double[])	3	3	null
org.apache.commons.math3.analysis.interpolation.NevilleInterpolator	org.apache.commons.math3.analysis.UnivariateFunction interpolate(double[],double[])	3	3	null
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator	org.apache.commons.math3.analysis.UnivariateFunction interpolate(double[],double[])	5	5	null
org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$3	double value(double,double)	15	7	3
org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$1	double value(double,double)	15	7	3
org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$2	double value(double,double)	15	7	3
org.apache.commons.math3.analysis.interpolation.TricubicInterpolatingFunction	double value(double,double,double)	10	4	4
org.apache.commons.math3.analysis.interpolation.TricubicInterpolatingFunction	boolean isValidPoint(double,double,double)	13	1	1
org.apache.commons.math3.analysis.interpolation.HermiteInterpolator	void addSamplePoint(double,double[][])	17	10	4
org.apache.commons.math3.analysis.interpolation.HermiteInterpolator	org.apache.commons.math3.analysis.polynomials.PolynomialFunction[] getPolynomials()	8	7	1
org.apache.commons.math3.analysis.interpolation.HermiteInterpolator	double[] value(double)	4	4	null
org.apache.commons.math3.analysis.interpolation.HermiteInterpolator	org.apache.commons.math3.analysis.differentiation.DerivativeStructure[] value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)	12	10	2
org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction	double value(double,double,double)	12	4	4
org.apache.commons.math3.analysis.interpolation.AkimaSplineInterpolator	org.apache.commons.math3.analysis.UnivariateFunction interpolate(double[],double[])	5	1	1
org.apache.commons.math3.analysis.interpolation.MicrosphereProjectionInterpolator	org.apache.commons.math3.analysis.MultivariateFunction interpolate(double[][],double[])	2	1	1
org.apache.commons.math3.analysis.interpolation.BicubicInterpolator$1	boolean isValidPoint(double,double)	5	1	1
org.apache.commons.math3.analysis.interpolation.PiecewiseBicubicSplineInterpolator	org.apache.commons.math3.analysis.BivariateFunction interpolate(double[],double[],double[][])	12	3	1
org.apache.commons.math3.analysis.interpolation.TricubicSplineFunction	double value(double,double,double)	6	2	2
org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolator	org.apache.commons.math3.analysis.BivariateFunction interpolate(double[],double[],double[][])	15	6	2
org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$4	double value(double,double)	15	7	3
org.apache.commons.math3.analysis.interpolation.BicubicInterpolatingFunction	double value(double,double)	20	8	4
org.apache.commons.math3.analysis.interpolation.BicubicInterpolatingFunction	boolean isValidPoint(double,double)	5	1	1
org.apache.commons.math3.analysis.interpolation.TricubicInterpolator	org.apache.commons.math3.analysis.interpolation.TricubicInterpolatingFunction interpolate(double[],double[],double[],double[][][])	10	4	1
org.apache.commons.math3.analysis.interpolation.BicubicInterpolator	org.apache.commons.math3.analysis.BivariateFunction interpolate(double[],double[],double[][])	5	1	1
org.apache.commons.math3.analysis.FunctionUtils$8	double value(double)	91	37	30
org.apache.commons.math3.analysis.FunctionUtils$8	org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)	41	14	9
org.apache.commons.math3.analysis.FunctionUtils	org.apache.commons.math3.analysis.UnivariateFunction compose(org.apache.commons.math3.analysis.UnivariateFunction[])	9	3	1
org.apache.commons.math3.analysis.FunctionUtils	org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction compose(org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction[])	10	3	1
org.apache.commons.math3.analysis.FunctionUtils	org.apache.commons.math3.analysis.UnivariateFunction add(org.apache.commons.math3.analysis.UnivariateFunction[])	7	5	1
org.apache.commons.math3.analysis.FunctionUtils	org.apache.commons.math3.analysis.UnivariateFunction multiply(org.apache.commons.math3.analysis.UnivariateFunction[])	2	1	1
org.apache.commons.math3.analysis.FunctionUtils	org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction multiply(org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction[])	3	1	1
org.apache.commons.math3.analysis.FunctionUtils	org.apache.commons.math3.analysis.UnivariateFunction combine(org.apache.commons.math3.analysis.BivariateFunction,org.apache.commons.math3.analysis.UnivariateFunction,org.apache.commons.math3.analysis.UnivariateFunction)	3	2	1
org.apache.commons.math3.analysis.FunctionUtils	org.apache.commons.math3.analysis.MultivariateFunction collector(org.apache.commons.math3.analysis.BivariateFunction,double)	4	1	1
org.apache.commons.math3.analysis.FunctionUtils	double[] sample(org.apache.commons.math3.analysis.UnivariateFunction,double,double,int)	4	4	null
org.apache.commons.math3.analysis.FunctionUtils$16$1	double value(double[])	16	4	4
org.apache.commons.math3.analysis.FunctionUtils$17	double value(double[])	16	4	4
org.apache.commons.math3.analysis.FunctionUtils$17	org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure[])	4	1	1
org.apache.commons.math3.analysis.function.Asinh	double value(double)	93	37	31
org.apache.commons.math3.analysis.function.Asinh	org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)	41	14	9
org.apache.commons.math3.analysis.function.Logit	double value(double)	101	41	33
org.apache.commons.math3.analysis.function.Logit	org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)	50	17	9
org.apache.commons.math3.analysis.function.Minus	double value(double)	93	37	31
org.apache.commons.math3.analysis.function.Minus	org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)	41	14	9
org.apache.commons.math3.analysis.function.HarmonicOscillator$Parametric	double value(double,double[])	5	3	1
org.apache.commons.math3.analysis.function.HarmonicOscillator$Parametric	double[] gradient(double,double[])	3	3	null
org.apache.commons.math3.analysis.function.Ceil	double value(double)	90	36	30
org.apache.commons.math3.analysis.function.StepFunction	double value(double)	116	39	33
org.apache.commons.math3.analysis.function.Expm1	double value(double)	101	37	31
org.apache.commons.math3.analysis.function.Expm1	org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)	41	14	9
org.apache.commons.math3.analysis.function.Tanh	double value(double)	93	37	31
org.apache.commons.math3.analysis.function.Tanh	org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)	41	14	9
org.apache.commons.math3.analysis.function.Inverse	double value(double)	93	37	31
org.apache.commons.math3.analysis.function.Inverse	org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)	41	14	9
org.apache.commons.math3.analysis.function.Acos	double value(double)	93	37	31
org.apache.commons.math3.analysis.function.Acos	org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)	41	14	9
org.apache.commons.math3.analysis.function.Logistic	double value(double)	97	39	32
org.apache.commons.math3.analysis.function.Logistic	org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)	42	15	9
org.apache.commons.math3.analysis.function.Divide	double value(double,double)	15	7	3
org.apache.commons.math3.analysis.function.Add	double value(double,double)	15	7	3
org.apache.commons.math3.analysis.function.Logistic$Parametric	double value(double,double[])	3	3	null
org.apache.commons.math3.analysis.function.Logistic$Parametric	double[] gradient(double,double[])	6	6	null
org.apache.commons.math3.analysis.function.Constant	double value(double)	93	37	31
org.apache.commons.math3.analysis.function.Constant	org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)	41	14	9
org.apache.commons.math3.analysis.function.Sigmoid$Parametric	double value(double,double[])	5	3	1
org.apache.commons.math3.analysis.function.Sigmoid$Parametric	double[] gradient(double,double[])	3	3	null
org.apache.commons.math3.analysis.function.Acosh	double value(double)	93	37	31
org.apache.commons.math3.analysis.function.Acosh	org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)	41	14	9
org.apache.commons.math3.analysis.function.Cbrt	double value(double)	93	37	31
org.apache.commons.math3.analysis.function.Cbrt	org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)	41	14	9
org.apache.commons.math3.analysis.function.Logit$Parametric	double value(double,double[])	7	5	1
org.apache.commons.math3.analysis.function.Logit$Parametric	double[] gradient(double,double[])	2	2	null
org.apache.commons.math3.analysis.function.Sinc	double value(double)	98	41	32
org.apache.commons.math3.analysis.function.Sinc	org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)	45	18	9
org.apache.commons.math3.analysis.function.Sinh	double value(double)	93	37	31
org.apache.commons.math3.analysis.function.Sinh	org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)	41	14	9
org.apache.commons.math3.analysis.function.Tan	double value(double)	93	37	31
org.apache.commons.math3.analysis.function.Tan	org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)	41	14	9
org.apache.commons.math3.analysis.function.Subtract	double value(double,double)	15	7	3
org.apache.commons.math3.analysis.function.Exp	double value(double)	93	37	31
org.apache.commons.math3.analysis.function.Exp	org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)	41	14	9
org.apache.commons.math3.analysis.function.Multiply	double value(double,double)	15	7	3
org.apache.commons.math3.analysis.function.Atanh	double value(double)	93	37	31
org.apache.commons.math3.analysis.function.Atanh	org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)	41	14	9
org.apache.commons.math3.analysis.function.Abs	double value(double)	90	36	30
org.apache.commons.math3.analysis.function.Cos	double value(double)	93	37	31
org.apache.commons.math3.analysis.function.Cos	org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)	41	14	9
org.apache.commons.math3.analysis.function.Gaussian	double value(double)	103	40	33
org.apache.commons.math3.analysis.function.Gaussian	org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)	52	17	10
org.apache.commons.math3.analysis.function.Log1p	double value(double)	93	37	31
org.apache.commons.math3.analysis.function.Log1p	org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)	41	14	9
org.apache.commons.math3.analysis.function.Atan	double value(double)	93	37	31
org.apache.commons.math3.analysis.function.Atan	org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)	41	14	9
org.apache.commons.math3.analysis.function.Cosh	double value(double)	93	37	31
org.apache.commons.math3.analysis.function.Cosh	org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)	41	14	9
org.apache.commons.math3.analysis.function.Sin	double value(double)	104	39	33
org.apache.commons.math3.analysis.function.Sin	org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)	45	14	10
org.apache.commons.math3.analysis.function.Power	double value(double)	95	38	31
org.apache.commons.math3.analysis.function.Power	org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)	42	14	9
org.apache.commons.math3.analysis.function.HarmonicOscillator	double value(double)	115	51	35
org.apache.commons.math3.analysis.function.HarmonicOscillator	org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)	42	15	9
org.apache.commons.math3.analysis.function.Signum	double value(double)	90	36	30
org.apache.commons.math3.analysis.function.Asin	double value(double)	93	37	31
org.apache.commons.math3.analysis.function.Asin	org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)	41	14	9
org.apache.commons.math3.analysis.function.Log10	double value(double)	93	37	31
org.apache.commons.math3.analysis.function.Log10	org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)	41	14	9
org.apache.commons.math3.analysis.function.Identity	double value(double)	93	37	31
org.apache.commons.math3.analysis.function.Identity	org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)	41	14	9
org.apache.commons.math3.analysis.function.Log	double value(double)	97	39	33
org.apache.commons.math3.analysis.function.Log	org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)	41	14	9
org.apache.commons.math3.analysis.function.Pow	double value(double,double)	15	7	3
org.apache.commons.math3.analysis.function.Sqrt	double value(double)	94	38	31
org.apache.commons.math3.analysis.function.Sqrt	org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)	43	16	9
org.apache.commons.math3.analysis.function.Floor	double value(double)	90	36	30
org.apache.commons.math3.analysis.function.Atan2	double value(double,double)	15	7	3
org.apache.commons.math3.analysis.function.Rint	double value(double)	90	36	30
org.apache.commons.math3.analysis.function.Gaussian$Parametric	double value(double,double[])	6	4	1
org.apache.commons.math3.analysis.function.Gaussian$Parametric	double[] gradient(double,double[])	4	4	null
org.apache.commons.math3.analysis.function.Sigmoid	double value(double)	100	40	33
org.apache.commons.math3.analysis.function.Sigmoid	org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)	52	18	10
org.apache.commons.math3.analysis.function.Ulp	double value(double)	90	36	30
org.apache.commons.math3.analysis.function.Max	double value(double,double)	15	7	3
org.apache.commons.math3.analysis.function.Min	double value(double,double)	15	7	3
org.apache.commons.math3.analysis.FunctionUtils$3$1	double value(double)	90	36	30
org.apache.commons.math3.analysis.FunctionUtils$3	double value(double)	92	36	31
org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegrator$1	double value(double)	90	36	30
org.apache.commons.math3.analysis.integration.gauss.GaussIntegratorFactory	org.apache.commons.math3.analysis.integration.gauss.GaussIntegrator legendre(int,double,double)	2	2	null
org.apache.commons.math3.analysis.integration.gauss.GaussIntegratorFactory	org.apache.commons.math3.analysis.integration.gauss.GaussIntegrator legendreHighPrecision(int,double,double)	2	2	null
org.apache.commons.math3.analysis.integration.gauss.GaussIntegratorFactory	org.apache.commons.math3.analysis.integration.gauss.SymmetricGaussIntegrator hermite(int)	3	3	null
org.apache.commons.math3.analysis.integration.gauss.SymmetricGaussIntegrator	double integrate(org.apache.commons.math3.analysis.UnivariateFunction)	8	8	null
org.apache.commons.math3.analysis.integration.gauss.GaussIntegrator	double integrate(org.apache.commons.math3.analysis.UnivariateFunction)	5	5	null
org.apache.commons.math3.analysis.integration.gauss.GaussIntegrator	int getNumberOfPoints()	4	2	2
org.apache.commons.math3.analysis.FunctionUtils$1	double value(double)	90	36	30
org.apache.commons.math3.analysis.FunctionUtils$12	double value(double)	90	36	30
org.apache.commons.math3.analysis.FunctionUtils$13	double value(double)	90	36	30
org.apache.commons.math3.analysis.FunctionUtils$4	double value(double)	90	36	30
org.apache.commons.math3.analysis.FunctionUtils$6$1	double value(double)	90	36	30
org.apache.commons.math3.analysis.FunctionUtils$6	double value(double)	92	36	31
org.apache.commons.math3.analysis.FunctionUtils$14	double value(double)	92	36	31
org.apache.commons.math3.analysis.FunctionUtils$16	double value(double[])	17	5	4
org.apache.commons.math3.analysis.FunctionUtils$16	org.apache.commons.math3.analysis.MultivariateVectorFunction gradient()	2	1	1
org.apache.commons.math3.analysis.FunctionUtils$14$1	double value(double)	90	36	30
org.apache.commons.math3.analysis.differentiation.GradientFunction	double[] value(double[])	4	3	1
org.apache.commons.math3.analysis.differentiation.SparseGradient	org.apache.commons.math3.analysis.differentiation.SparseGradient createConstant(double)	5	5	null
org.apache.commons.math3.analysis.differentiation.SparseGradient	org.apache.commons.math3.analysis.differentiation.SparseGradient createVariable(int,double)	139	69	31
org.apache.commons.math3.analysis.differentiation.SparseGradient	int numVars()	7	7	null
org.apache.commons.math3.analysis.differentiation.SparseGradient	double getDerivative(int)	84	24	18
org.apache.commons.math3.analysis.differentiation.SparseGradient	double getValue()	143	29	15
org.apache.commons.math3.analysis.differentiation.SparseGradient	org.apache.commons.math3.analysis.differentiation.SparseGradient add(org.apache.commons.math3.analysis.differentiation.SparseGradient)	16	12	4
org.apache.commons.math3.analysis.differentiation.SparseGradient	org.apache.commons.math3.analysis.differentiation.SparseGradient add(double)	5	3	1
org.apache.commons.math3.analysis.differentiation.SparseGradient	org.apache.commons.math3.analysis.differentiation.SparseGradient subtract(org.apache.commons.math3.analysis.differentiation.SparseGradient)	35	30	5
org.apache.commons.math3.analysis.differentiation.SparseGradient	org.apache.commons.math3.analysis.differentiation.SparseGradient subtract(double)	5	3	1
org.apache.commons.math3.analysis.differentiation.SparseGradient	org.apache.commons.math3.analysis.differentiation.SparseGradient multiply(org.apache.commons.math3.analysis.differentiation.SparseGradient)	18	10	7
org.apache.commons.math3.analysis.differentiation.SparseGradient	org.apache.commons.math3.analysis.differentiation.SparseGradient multiply(double)	5	5	null
org.apache.commons.math3.analysis.differentiation.SparseGradient	org.apache.commons.math3.analysis.differentiation.SparseGradient multiply(int)	6	2	2
org.apache.commons.math3.analysis.differentiation.SparseGradient	org.apache.commons.math3.analysis.differentiation.SparseGradient divide(org.apache.commons.math3.analysis.differentiation.SparseGradient)	7	7	null
org.apache.commons.math3.analysis.differentiation.SparseGradient	org.apache.commons.math3.analysis.differentiation.SparseGradient negate()	3	1	1
org.apache.commons.math3.analysis.differentiation.SparseGradient	org.apache.commons.math3.Field getField()	10	7	2
org.apache.commons.math3.analysis.differentiation.SparseGradient	org.apache.commons.math3.analysis.differentiation.SparseGradient abs()	10	2	2
org.apache.commons.math3.analysis.differentiation.SparseGradient	org.apache.commons.math3.analysis.differentiation.SparseGradient ceil()	2	1	1
org.apache.commons.math3.analysis.differentiation.SparseGradient	org.apache.commons.math3.analysis.differentiation.SparseGradient floor()	2	1	1
org.apache.commons.math3.analysis.differentiation.SparseGradient	org.apache.commons.math3.analysis.differentiation.SparseGradient rint()	3	1	1
org.apache.commons.math3.analysis.differentiation.SparseGradient	org.apache.commons.math3.analysis.differentiation.SparseGradient signum()	10	1	1
org.apache.commons.math3.analysis.differentiation.SparseGradient	org.apache.commons.math3.analysis.differentiation.SparseGradient copySign(double)	20	1	1
org.apache.commons.math3.analysis.differentiation.SparseGradient	org.apache.commons.math3.analysis.differentiation.SparseGradient hypot(org.apache.commons.math3.analysis.differentiation.SparseGradient,org.apache.commons.math3.analysis.differentiation.SparseGradient)	12	4	2
org.apache.commons.math3.analysis.differentiation.SparseGradient	org.apache.commons.math3.analysis.differentiation.SparseGradient reciprocal()	6	5	1
org.apache.commons.math3.analysis.differentiation.SparseGradient	org.apache.commons.math3.analysis.differentiation.SparseGradient sqrt()	6	6	null
org.apache.commons.math3.analysis.differentiation.SparseGradient	org.apache.commons.math3.analysis.differentiation.SparseGradient cbrt()	2	2	null
org.apache.commons.math3.analysis.differentiation.SparseGradient	org.apache.commons.math3.analysis.differentiation.SparseGradient pow(double)	2	2	null
org.apache.commons.math3.analysis.differentiation.SparseGradient	org.apache.commons.math3.analysis.differentiation.SparseGradient pow(int)	4	2	1
org.apache.commons.math3.analysis.differentiation.SparseGradient	org.apache.commons.math3.analysis.differentiation.SparseGradient pow(org.apache.commons.math3.analysis.differentiation.SparseGradient)	3	2	1
org.apache.commons.math3.analysis.differentiation.SparseGradient	org.apache.commons.math3.analysis.differentiation.SparseGradient pow(double,org.apache.commons.math3.analysis.differentiation.SparseGradient)	8	2	1
org.apache.commons.math3.analysis.differentiation.SparseGradient	org.apache.commons.math3.analysis.differentiation.SparseGradient exp()	11	6	3
org.apache.commons.math3.analysis.differentiation.SparseGradient	org.apache.commons.math3.analysis.differentiation.SparseGradient expm1()	2	2	null
org.apache.commons.math3.analysis.differentiation.SparseGradient	org.apache.commons.math3.analysis.differentiation.SparseGradient log()	4	4	null
org.apache.commons.math3.analysis.differentiation.SparseGradient	org.apache.commons.math3.analysis.differentiation.SparseGradient log10()	2	2	null
org.apache.commons.math3.analysis.differentiation.SparseGradient	org.apache.commons.math3.analysis.differentiation.SparseGradient log1p()	2	2	null
org.apache.commons.math3.analysis.differentiation.SparseGradient	org.apache.commons.math3.analysis.differentiation.SparseGradient cos()	4	4	null
org.apache.commons.math3.analysis.differentiation.SparseGradient	org.apache.commons.math3.analysis.differentiation.SparseGradient sin()	4	4	null
org.apache.commons.math3.analysis.differentiation.SparseGradient	org.apache.commons.math3.analysis.differentiation.SparseGradient tan()	3	3	null
org.apache.commons.math3.analysis.differentiation.SparseGradient	org.apache.commons.math3.analysis.differentiation.SparseGradient atan()	2	2	null
org.apache.commons.math3.analysis.differentiation.SparseGradient	org.apache.commons.math3.analysis.differentiation.SparseGradient atan2(org.apache.commons.math3.analysis.differentiation.SparseGradient,org.apache.commons.math3.analysis.differentiation.SparseGradient)	6	3	1
org.apache.commons.math3.analysis.differentiation.SparseGradient	org.apache.commons.math3.analysis.differentiation.SparseGradient cosh()	2	2	null
org.apache.commons.math3.analysis.differentiation.SparseGradient	org.apache.commons.math3.analysis.differentiation.SparseGradient sinh()	2	2	null
org.apache.commons.math3.analysis.differentiation.SparseGradient	org.apache.commons.math3.analysis.differentiation.SparseGradient tanh()	2	2	null
org.apache.commons.math3.analysis.differentiation.SparseGradient	org.apache.commons.math3.analysis.differentiation.SparseGradient toDegrees()	3	2	1
org.apache.commons.math3.analysis.differentiation.SparseGradient	org.apache.commons.math3.analysis.differentiation.SparseGradient toRadians()	3	2	1
org.apache.commons.math3.analysis.differentiation.SparseGradient	double taylor(double[])	2	2	null
org.apache.commons.math3.analysis.differentiation.SparseGradient	org.apache.commons.math3.analysis.differentiation.SparseGradient linearCombination(double,org.apache.commons.math3.analysis.differentiation.SparseGradient,double,org.apache.commons.math3.analysis.differentiation.SparseGradient)	2	2	null
org.apache.commons.math3.analysis.differentiation.SparseGradient	org.apache.commons.math3.analysis.differentiation.SparseGradient linearCombination(org.apache.commons.math3.analysis.differentiation.SparseGradient,org.apache.commons.math3.analysis.differentiation.SparseGradient,org.apache.commons.math3.analysis.differentiation.SparseGradient,org.apache.commons.math3.analysis.differentiation.SparseGradient,org.apache.commons.math3.analysis.differentiation.SparseGradient,org.apache.commons.math3.analysis.differentiation.SparseGradient)	2	2	null
org.apache.commons.math3.analysis.differentiation.SparseGradient	org.apache.commons.math3.analysis.differentiation.SparseGradient linearCombination(double,org.apache.commons.math3.analysis.differentiation.SparseGradient,double,org.apache.commons.math3.analysis.differentiation.SparseGradient,double,org.apache.commons.math3.analysis.differentiation.SparseGradient)	2	2	null
org.apache.commons.math3.analysis.differentiation.SparseGradient	org.apache.commons.math3.analysis.differentiation.SparseGradient linearCombination(double,org.apache.commons.math3.analysis.differentiation.SparseGradient,double,org.apache.commons.math3.analysis.differentiation.SparseGradient,double,org.apache.commons.math3.analysis.differentiation.SparseGradient,double,org.apache.commons.math3.analysis.differentiation.SparseGradient)	2	2	null
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1	double value(double)	91	37	30
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1	org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)	41	14	9
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator	int getNbPoints()	2	1	1
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator	double getStepSize()	2	1	1
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator	org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction differentiate(org.apache.commons.math3.analysis.UnivariateFunction)	10	8	2
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator	org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableVectorFunction differentiate(org.apache.commons.math3.analysis.UnivariateVectorFunction)	2	2	null
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator	org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableMatrixFunction differentiate(org.apache.commons.math3.analysis.UnivariateMatrixFunction)	2	2	null
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$2	org.apache.commons.math3.analysis.differentiation.DerivativeStructure[] value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)	3	2	1
org.apache.commons.math3.analysis.differentiation.DerivativeStructure$1	java.lang.Class getRuntimeClass()	2	2	null
org.apache.commons.math3.analysis.differentiation.DerivativeStructure$1	java.lang.Object getOne()	13	11	2
org.apache.commons.math3.analysis.differentiation.DerivativeStructure$1	java.lang.Object getZero()	8	6	1
org.apache.commons.math3.analysis.differentiation.DerivativeStructure	int getFreeParameters()	5	3	2
org.apache.commons.math3.analysis.differentiation.DerivativeStructure	int getOrder()	20	11	6
org.apache.commons.math3.analysis.differentiation.DerivativeStructure	double getReal()	174	35	33
org.apache.commons.math3.analysis.differentiation.DerivativeStructure	double getValue()	158	43	24
org.apache.commons.math3.analysis.differentiation.DerivativeStructure	double getPartialDerivative(int[])	558	109	61
org.apache.commons.math3.analysis.differentiation.DerivativeStructure	double[] getAllDerivatives()	2	2	null
org.apache.commons.math3.analysis.differentiation.DerivativeStructure	org.apache.commons.math3.analysis.differentiation.DerivativeStructure add(double)	5	3	1
org.apache.commons.math3.analysis.differentiation.DerivativeStructure	org.apache.commons.math3.analysis.differentiation.DerivativeStructure add(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)	18	13	5
org.apache.commons.math3.analysis.differentiation.DerivativeStructure	org.apache.commons.math3.analysis.differentiation.DerivativeStructure subtract(double)	5	3	1
org.apache.commons.math3.analysis.differentiation.DerivativeStructure	org.apache.commons.math3.analysis.differentiation.DerivativeStructure subtract(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)	40	32	7
org.apache.commons.math3.analysis.differentiation.DerivativeStructure	org.apache.commons.math3.analysis.differentiation.DerivativeStructure multiply(int)	5	2	2
org.apache.commons.math3.analysis.differentiation.DerivativeStructure	org.apache.commons.math3.analysis.differentiation.DerivativeStructure multiply(double)	8	5	1
org.apache.commons.math3.analysis.differentiation.DerivativeStructure	org.apache.commons.math3.analysis.differentiation.DerivativeStructure multiply(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)	31	12	10
org.apache.commons.math3.analysis.differentiation.DerivativeStructure	org.apache.commons.math3.analysis.differentiation.DerivativeStructure divide(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)	6	6	null
org.apache.commons.math3.analysis.differentiation.DerivativeStructure	org.apache.commons.math3.analysis.differentiation.DerivativeStructure negate()	3	1	1
org.apache.commons.math3.analysis.differentiation.DerivativeStructure	org.apache.commons.math3.analysis.differentiation.DerivativeStructure abs()	10	2	2
org.apache.commons.math3.analysis.differentiation.DerivativeStructure	org.apache.commons.math3.analysis.differentiation.DerivativeStructure ceil()	2	1	1
org.apache.commons.math3.analysis.differentiation.DerivativeStructure	org.apache.commons.math3.analysis.differentiation.DerivativeStructure floor()	2	1	1
org.apache.commons.math3.analysis.differentiation.DerivativeStructure	org.apache.commons.math3.analysis.differentiation.DerivativeStructure rint()	3	1	1
org.apache.commons.math3.analysis.differentiation.DerivativeStructure	org.apache.commons.math3.analysis.differentiation.DerivativeStructure signum()	10	1	1
org.apache.commons.math3.analysis.differentiation.DerivativeStructure	org.apache.commons.math3.analysis.differentiation.DerivativeStructure copySign(double)	20	1	1
org.apache.commons.math3.analysis.differentiation.DerivativeStructure	org.apache.commons.math3.analysis.differentiation.DerivativeStructure hypot(org.apache.commons.math3.analysis.differentiation.DerivativeStructure,org.apache.commons.math3.analysis.differentiation.DerivativeStructure)	13	5	2
org.apache.commons.math3.analysis.differentiation.DerivativeStructure	org.apache.commons.math3.analysis.differentiation.DerivativeStructure compose(double[])	2	2	null
org.apache.commons.math3.analysis.differentiation.DerivativeStructure	org.apache.commons.math3.analysis.differentiation.DerivativeStructure reciprocal()	6	5	1
org.apache.commons.math3.analysis.differentiation.DerivativeStructure	org.apache.commons.math3.analysis.differentiation.DerivativeStructure sqrt()	6	6	null
org.apache.commons.math3.analysis.differentiation.DerivativeStructure	org.apache.commons.math3.analysis.differentiation.DerivativeStructure cbrt()	2	2	null
org.apache.commons.math3.analysis.differentiation.DerivativeStructure	org.apache.commons.math3.analysis.differentiation.DerivativeStructure rootN(int)	2	1	1
org.apache.commons.math3.analysis.differentiation.DerivativeStructure	org.apache.commons.math3.Field getField()	13	8	2
org.apache.commons.math3.analysis.differentiation.DerivativeStructure	org.apache.commons.math3.analysis.differentiation.DerivativeStructure pow(double,org.apache.commons.math3.analysis.differentiation.DerivativeStructure)	7	1	1
org.apache.commons.math3.analysis.differentiation.DerivativeStructure	org.apache.commons.math3.analysis.differentiation.DerivativeStructure pow(double)	2	2	null
org.apache.commons.math3.analysis.differentiation.DerivativeStructure	org.apache.commons.math3.analysis.differentiation.DerivativeStructure pow(int)	5	2	2
org.apache.commons.math3.analysis.differentiation.DerivativeStructure	org.apache.commons.math3.analysis.differentiation.DerivativeStructure pow(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)	4	3	1
org.apache.commons.math3.analysis.differentiation.DerivativeStructure	org.apache.commons.math3.analysis.differentiation.DerivativeStructure exp()	11	6	3
org.apache.commons.math3.analysis.differentiation.DerivativeStructure	org.apache.commons.math3.analysis.differentiation.DerivativeStructure expm1()	2	2	null
org.apache.commons.math3.analysis.differentiation.DerivativeStructure	org.apache.commons.math3.analysis.differentiation.DerivativeStructure log()	4	4	null
org.apache.commons.math3.analysis.differentiation.DerivativeStructure	org.apache.commons.math3.analysis.differentiation.DerivativeStructure log1p()	2	2	null
org.apache.commons.math3.analysis.differentiation.DerivativeStructure	org.apache.commons.math3.analysis.differentiation.DerivativeStructure log10()	2	2	null
org.apache.commons.math3.analysis.differentiation.DerivativeStructure	org.apache.commons.math3.analysis.differentiation.DerivativeStructure cos()	5	5	null
org.apache.commons.math3.analysis.differentiation.DerivativeStructure	org.apache.commons.math3.analysis.differentiation.DerivativeStructure sin()	5	5	null
org.apache.commons.math3.analysis.differentiation.DerivativeStructure	org.apache.commons.math3.analysis.differentiation.DerivativeStructure tan()	3	3	null
org.apache.commons.math3.analysis.differentiation.DerivativeStructure	org.apache.commons.math3.analysis.differentiation.DerivativeStructure atan()	2	2	null
org.apache.commons.math3.analysis.differentiation.DerivativeStructure	org.apache.commons.math3.analysis.differentiation.DerivativeStructure atan2(org.apache.commons.math3.analysis.differentiation.DerivativeStructure,org.apache.commons.math3.analysis.differentiation.DerivativeStructure)	6	3	1
org.apache.commons.math3.analysis.differentiation.DerivativeStructure	org.apache.commons.math3.analysis.differentiation.DerivativeStructure cosh()	2	2	null
org.apache.commons.math3.analysis.differentiation.DerivativeStructure	org.apache.commons.math3.analysis.differentiation.DerivativeStructure sinh()	2	2	null
org.apache.commons.math3.analysis.differentiation.DerivativeStructure	org.apache.commons.math3.analysis.differentiation.DerivativeStructure tanh()	2	2	null
org.apache.commons.math3.analysis.differentiation.DerivativeStructure	org.apache.commons.math3.analysis.differentiation.DerivativeStructure toDegrees()	4	2	1
org.apache.commons.math3.analysis.differentiation.DerivativeStructure	org.apache.commons.math3.analysis.differentiation.DerivativeStructure toRadians()	4	2	1
org.apache.commons.math3.analysis.differentiation.DerivativeStructure	double taylor(double[])	2	2	null
org.apache.commons.math3.analysis.differentiation.DerivativeStructure	org.apache.commons.math3.analysis.differentiation.DerivativeStructure linearCombination(org.apache.commons.math3.analysis.differentiation.DerivativeStructure,org.apache.commons.math3.analysis.differentiation.DerivativeStructure,org.apache.commons.math3.analysis.differentiation.DerivativeStructure,org.apache.commons.math3.analysis.differentiation.DerivativeStructure,org.apache.commons.math3.analysis.differentiation.DerivativeStructure,org.apache.commons.math3.analysis.differentiation.DerivativeStructure)	2	2	null
org.apache.commons.math3.analysis.differentiation.DerivativeStructure	org.apache.commons.math3.analysis.differentiation.DerivativeStructure linearCombination(double,org.apache.commons.math3.analysis.differentiation.DerivativeStructure,double,org.apache.commons.math3.analysis.differentiation.DerivativeStructure,double,org.apache.commons.math3.analysis.differentiation.DerivativeStructure)	2	2	null
org.apache.commons.math3.analysis.differentiation.SparseGradient$1	java.lang.Class getRuntimeClass()	2	2	null
org.apache.commons.math3.analysis.differentiation.SparseGradient$1	java.lang.Object getOne()	13	11	2
org.apache.commons.math3.analysis.differentiation.SparseGradient$1	java.lang.Object getZero()	8	6	1
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$3	org.apache.commons.math3.analysis.differentiation.DerivativeStructure[][] value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)	3	2	1
org.apache.commons.math3.analysis.differentiation.DSCompiler	org.apache.commons.math3.analysis.differentiation.DSCompiler getCompiler(int,int)	22	7	4
org.apache.commons.math3.analysis.differentiation.DSCompiler	int[] getPartialDerivativeOrders(int)	61	4	3
org.apache.commons.math3.analysis.differentiation.DSCompiler	int getSize()	3	2	1
org.apache.commons.math3.analysis.differentiation.DSCompiler	void checkCompatibility(org.apache.commons.math3.analysis.differentiation.DSCompiler)	2	2	null
org.apache.commons.math3.analysis.FunctionUtils$19	double[] value(double[])	2	1	1
org.apache.commons.math3.linear.SingularValueDecomposition	org.apache.commons.math3.linear.RealMatrix getU()	8	4	3
org.apache.commons.math3.linear.SingularValueDecomposition	org.apache.commons.math3.linear.RealMatrix getS()	5	3	2
org.apache.commons.math3.linear.SingularValueDecomposition	double[] getSingularValues()	8	4	2
org.apache.commons.math3.linear.SingularValueDecomposition	org.apache.commons.math3.linear.RealMatrix getV()	7	3	3
org.apache.commons.math3.linear.SingularValueDecomposition	org.apache.commons.math3.linear.RealMatrix getCovariance(double)	2	1	1
org.apache.commons.math3.linear.SingularValueDecomposition	double getConditionNumber()	2	2	null
org.apache.commons.math3.linear.SingularValueDecomposition	org.apache.commons.math3.linear.DecompositionSolver getSolver()	4	4	null
org.apache.commons.math3.linear.MatrixUtils	org.apache.commons.math3.linear.RealMatrix createRealMatrix(int,int)	3	3	null
org.apache.commons.math3.linear.MatrixUtils	org.apache.commons.math3.linear.RealMatrix createRealMatrix(double[][])	270	133	67
org.apache.commons.math3.linear.MatrixUtils	org.apache.commons.math3.linear.FieldMatrix createFieldMatrix(org.apache.commons.math3.FieldElement[][])	5	1	1
org.apache.commons.math3.linear.MatrixUtils	org.apache.commons.math3.linear.RealMatrix createRealIdentityMatrix(int)	19	15	2
org.apache.commons.math3.linear.MatrixUtils	org.apache.commons.math3.linear.FieldMatrix createFieldIdentityMatrix(org.apache.commons.math3.Field,int)	3	1	1
org.apache.commons.math3.linear.MatrixUtils	org.apache.commons.math3.linear.RealMatrix createRealDiagonalMatrix(double[])	2	2	null
org.apache.commons.math3.linear.MatrixUtils	org.apache.commons.math3.linear.RealVector createRealVector(double[])	4	3	1
org.apache.commons.math3.linear.MatrixUtils	org.apache.commons.math3.linear.RealMatrix createRowRealMatrix(double[])	3	1	1
org.apache.commons.math3.linear.MatrixUtils	org.apache.commons.math3.linear.FieldMatrix createRowFieldMatrix(org.apache.commons.math3.FieldElement[])	4	1	1
org.apache.commons.math3.linear.MatrixUtils	org.apache.commons.math3.linear.RealMatrix createColumnRealMatrix(double[])	3	1	1
org.apache.commons.math3.linear.MatrixUtils	org.apache.commons.math3.linear.FieldMatrix createColumnFieldMatrix(org.apache.commons.math3.FieldElement[])	4	1	1
org.apache.commons.math3.linear.MatrixUtils	void checkSymmetric(org.apache.commons.math3.linear.RealMatrix,double)	2	2	null
org.apache.commons.math3.linear.MatrixUtils	boolean isSymmetric(org.apache.commons.math3.linear.RealMatrix,double)	6	2	2
org.apache.commons.math3.linear.MatrixUtils	org.apache.commons.math3.linear.RealMatrix blockInverse(org.apache.commons.math3.linear.RealMatrix,int)	2	2	null
org.apache.commons.math3.linear.MatrixUtils	org.apache.commons.math3.linear.RealMatrix inverse(org.apache.commons.math3.linear.RealMatrix)	4	4	null
org.apache.commons.math3.linear.CholeskyDecomposition$Solver	boolean isNonSingular()	21	9	6
org.apache.commons.math3.linear.CholeskyDecomposition$Solver	org.apache.commons.math3.linear.RealVector solve(org.apache.commons.math3.linear.RealVector)	32	20	12
org.apache.commons.math3.linear.CholeskyDecomposition$Solver	org.apache.commons.math3.linear.RealMatrix solve(org.apache.commons.math3.linear.RealMatrix)	20	20	null
org.apache.commons.math3.linear.CholeskyDecomposition$Solver	org.apache.commons.math3.linear.RealMatrix getInverse()	19	16	3
org.apache.commons.math3.linear.RectangularCholeskyDecomposition	org.apache.commons.math3.linear.RealMatrix getRootMatrix()	5	2	1
org.apache.commons.math3.linear.RRQRDecomposition	org.apache.commons.math3.linear.DecompositionSolver getSolver()	23	17	2
org.apache.commons.math3.linear.BlockFieldMatrix	org.apache.commons.math3.linear.FieldMatrix add(org.apache.commons.math3.linear.FieldMatrix)	4	4	null
org.apache.commons.math3.linear.BlockFieldMatrix	org.apache.commons.math3.linear.BlockFieldMatrix add(org.apache.commons.math3.linear.BlockFieldMatrix)	2	2	null
org.apache.commons.math3.linear.BlockFieldMatrix	org.apache.commons.math3.linear.BlockFieldMatrix subtract(org.apache.commons.math3.linear.BlockFieldMatrix)	2	1	1
org.apache.commons.math3.linear.BlockFieldMatrix	org.apache.commons.math3.linear.FieldMatrix scalarAdd(org.apache.commons.math3.FieldElement)	4	4	null
org.apache.commons.math3.linear.BlockFieldMatrix	org.apache.commons.math3.linear.FieldMatrix multiply(org.apache.commons.math3.linear.FieldMatrix)	16	8	3
org.apache.commons.math3.linear.BlockFieldMatrix	org.apache.commons.math3.linear.BlockFieldMatrix multiply(org.apache.commons.math3.linear.BlockFieldMatrix)	6	1	1
org.apache.commons.math3.linear.BlockFieldMatrix	org.apache.commons.math3.FieldElement[][] getData()	4	3	1
org.apache.commons.math3.linear.BlockFieldMatrix	org.apache.commons.math3.linear.FieldMatrix getSubMatrix(int,int,int,int)	5	2	1
org.apache.commons.math3.linear.BlockFieldMatrix	void setSubMatrix(org.apache.commons.math3.FieldElement[][],int,int)	11	2	1
org.apache.commons.math3.linear.BlockFieldMatrix	org.apache.commons.math3.linear.FieldMatrix getRowMatrix(int)	8	4	2
org.apache.commons.math3.linear.BlockFieldMatrix	void setRowMatrix(int,org.apache.commons.math3.linear.FieldMatrix)	4	2	1
org.apache.commons.math3.linear.BlockFieldMatrix	org.apache.commons.math3.linear.FieldMatrix getColumnMatrix(int)	7	3	2
org.apache.commons.math3.linear.BlockFieldMatrix	void setColumnMatrix(int,org.apache.commons.math3.linear.FieldMatrix)	4	2	1
org.apache.commons.math3.linear.BlockFieldMatrix	org.apache.commons.math3.linear.FieldVector getRowVector(int)	6	3	1
org.apache.commons.math3.linear.BlockFieldMatrix	void setRowVector(int,org.apache.commons.math3.linear.FieldVector)	4	2	1
org.apache.commons.math3.linear.BlockFieldMatrix	org.apache.commons.math3.linear.FieldVector getColumnVector(int)	10	6	2
org.apache.commons.math3.linear.BlockFieldMatrix	void setColumnVector(int,org.apache.commons.math3.linear.FieldVector)	4	2	1
org.apache.commons.math3.linear.BlockFieldMatrix	org.apache.commons.math3.FieldElement[] getRow(int)	11	5	4
org.apache.commons.math3.linear.BlockFieldMatrix	void setRow(int,org.apache.commons.math3.FieldElement[])	4	2	1
org.apache.commons.math3.linear.BlockFieldMatrix	org.apache.commons.math3.FieldElement[] getColumn(int)	12	6	4
org.apache.commons.math3.linear.BlockFieldMatrix	void setColumn(int,org.apache.commons.math3.FieldElement[])	4	2	1
org.apache.commons.math3.linear.BlockFieldMatrix	org.apache.commons.math3.FieldElement getEntry(int,int)	70	19	17
org.apache.commons.math3.linear.BlockFieldMatrix	org.apache.commons.math3.linear.FieldMatrix transpose()	8	6	1
org.apache.commons.math3.linear.BlockFieldMatrix	int getRowDimension()	33	12	7
org.apache.commons.math3.linear.BlockFieldMatrix	int getColumnDimension()	33	10	8
org.apache.commons.math3.linear.BlockFieldMatrix	org.apache.commons.math3.FieldElement[] operate(org.apache.commons.math3.FieldElement[])	4	3	1
org.apache.commons.math3.linear.BlockFieldMatrix	org.apache.commons.math3.FieldElement[] preMultiply(org.apache.commons.math3.FieldElement[])	4	2	1
org.apache.commons.math3.linear.BlockFieldMatrix	org.apache.commons.math3.FieldElement walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)	2	1	1
org.apache.commons.math3.linear.BlockFieldMatrix	org.apache.commons.math3.FieldElement walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)	2	1	1
org.apache.commons.math3.linear.BlockFieldMatrix	org.apache.commons.math3.FieldElement walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)	2	1	1
org.apache.commons.math3.linear.BlockFieldMatrix	org.apache.commons.math3.FieldElement walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)	2	1	1
org.apache.commons.math3.linear.HessenbergTransformer	org.apache.commons.math3.linear.RealMatrix getP()	2	1	1
org.apache.commons.math3.linear.HessenbergTransformer	org.apache.commons.math3.linear.RealMatrix getPT()	2	1	1
org.apache.commons.math3.linear.HessenbergTransformer	org.apache.commons.math3.linear.RealMatrix getH()	2	1	1
org.apache.commons.math3.linear.OpenMapRealVector$OpenMapEntry	double getValue()	2	1	1
org.apache.commons.math3.linear.SingularValueDecomposition$Solver	org.apache.commons.math3.linear.RealVector solve(org.apache.commons.math3.linear.RealVector)	32	20	12
org.apache.commons.math3.linear.SingularValueDecomposition$Solver	org.apache.commons.math3.linear.RealMatrix solve(org.apache.commons.math3.linear.RealMatrix)	20	20	null
org.apache.commons.math3.linear.SingularValueDecomposition$Solver	boolean isNonSingular()	21	9	6
org.apache.commons.math3.linear.SingularValueDecomposition$Solver	org.apache.commons.math3.linear.RealMatrix getInverse()	19	16	3
org.apache.commons.math3.linear.RealVector$1	boolean hasNext()	100	75	17
org.apache.commons.math3.linear.RealVector$1	void remove()	2	2	null
org.apache.commons.math3.linear.RealVector$1	java.lang.Object next()	104	77	16
org.apache.commons.math3.linear.BiDiagonalTransformer	org.apache.commons.math3.linear.RealMatrix getU()	7	3	3
org.apache.commons.math3.linear.BiDiagonalTransformer	org.apache.commons.math3.linear.RealMatrix getB()	7	3	3
org.apache.commons.math3.linear.BiDiagonalTransformer	org.apache.commons.math3.linear.RealMatrix getV()	7	3	3
org.apache.commons.math3.linear.BiDiagonalTransformer	boolean isUpperBiDiagonal()	3	1	1
org.apache.commons.math3.linear.RealVector$2$UnmodifiableEntry	double getValue()	2	1	1
org.apache.commons.math3.linear.EigenDecomposition	org.apache.commons.math3.linear.RealMatrix getV()	5	4	1
org.apache.commons.math3.linear.EigenDecomposition	org.apache.commons.math3.linear.RealMatrix getD()	4	3	1
org.apache.commons.math3.linear.EigenDecomposition	org.apache.commons.math3.linear.RealMatrix getVT()	4	3	1
org.apache.commons.math3.linear.EigenDecomposition	double[] getRealEigenvalues()	6	6	null
org.apache.commons.math3.linear.EigenDecomposition	double getRealEigenvalue(int)	22	8	6
org.apache.commons.math3.linear.EigenDecomposition	org.apache.commons.math3.linear.RealVector getEigenvector(int)	8	4	2
org.apache.commons.math3.linear.EigenDecomposition	org.apache.commons.math3.linear.RealMatrix getSquareRoot()	3	3	null
org.apache.commons.math3.linear.EigenDecomposition	org.apache.commons.math3.linear.DecompositionSolver getSolver()	8	8	null
org.apache.commons.math3.linear.SymmLQ	org.apache.commons.math3.linear.RealVector solve(org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealVector)	7	7	null
org.apache.commons.math3.linear.SymmLQ	org.apache.commons.math3.linear.RealVector solve(org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealVector)	6	6	null
org.apache.commons.math3.linear.SymmLQ	org.apache.commons.math3.linear.RealVector solve(org.apache.commons.math3.linear.RealLinearOperator,org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector)	3	3	null
org.apache.commons.math3.linear.RealVector$SparseEntryIterator	boolean hasNext()	100	75	17
org.apache.commons.math3.linear.RealVector$SparseEntryIterator	void remove()	2	2	null
org.apache.commons.math3.linear.RealVector$SparseEntryIterator	java.lang.Object next()	104	77	16
org.apache.commons.math3.linear.CholeskyDecomposition	org.apache.commons.math3.linear.RealMatrix getL()	7	5	2
org.apache.commons.math3.linear.CholeskyDecomposition	org.apache.commons.math3.linear.RealMatrix getLT()	6	4	2
org.apache.commons.math3.linear.CholeskyDecomposition	org.apache.commons.math3.linear.DecompositionSolver getSolver()	2	2	null
org.apache.commons.math3.linear.JacobiPreconditioner	org.apache.commons.math3.linear.JacobiPreconditioner create(org.apache.commons.math3.linear.RealLinearOperator)	7	7	null
org.apache.commons.math3.linear.SchurTransformer	org.apache.commons.math3.linear.RealMatrix getP()	3	1	1
org.apache.commons.math3.linear.SchurTransformer	org.apache.commons.math3.linear.RealMatrix getPT()	3	1	1
org.apache.commons.math3.linear.SchurTransformer	org.apache.commons.math3.linear.RealMatrix getT()	3	1	1
org.apache.commons.math3.linear.DiagonalMatrix	org.apache.commons.math3.linear.RealMatrix createMatrix(int,int)	2	2	null
org.apache.commons.math3.linear.DiagonalMatrix	org.apache.commons.math3.linear.RealMatrix copy()	5	4	1
org.apache.commons.math3.linear.DiagonalMatrix	org.apache.commons.math3.linear.RealMatrix multiply(org.apache.commons.math3.linear.RealMatrix)	39	26	8
org.apache.commons.math3.linear.DiagonalMatrix	double[][] getData()	12	12	null
org.apache.commons.math3.linear.DiagonalMatrix	double getEntry(int,int)	95	44	23
org.apache.commons.math3.linear.DiagonalMatrix	void setEntry(int,int,double)	5	5	null
org.apache.commons.math3.linear.DiagonalMatrix	void addToEntry(int,int,double)	5	4	1
org.apache.commons.math3.linear.DiagonalMatrix	void multiplyEntry(int,int,double)	3	3	null
org.apache.commons.math3.linear.DiagonalMatrix	int getRowDimension()	67	33	15
org.apache.commons.math3.linear.DiagonalMatrix	int getColumnDimension()	55	24	15
org.apache.commons.math3.linear.DiagonalMatrix	org.apache.commons.math3.linear.DiagonalMatrix inverse()	2	2	null
org.apache.commons.math3.linear.FieldLUDecomposition	org.apache.commons.math3.linear.FieldMatrix getL()	12	5	4
org.apache.commons.math3.linear.FieldLUDecomposition	org.apache.commons.math3.linear.FieldMatrix getU()	12	5	4
org.apache.commons.math3.linear.FieldLUDecomposition	org.apache.commons.math3.linear.FieldMatrix getP()	12	5	4
org.apache.commons.math3.linear.FieldLUDecomposition	int[] getPivot()	2	2	null
org.apache.commons.math3.linear.FieldLUDecomposition	org.apache.commons.math3.linear.FieldDecompositionSolver getSolver()	23	12	9
org.apache.commons.math3.linear.RealVector$2	java.util.Iterator sparseIterator()	2	1	1
org.apache.commons.math3.linear.RealVector$2	org.apache.commons.math3.linear.RealVector copy()	4	3	1
org.apache.commons.math3.linear.RealVector$2	org.apache.commons.math3.linear.RealVector add(org.apache.commons.math3.linear.RealVector)	7	5	2
org.apache.commons.math3.linear.RealVector$2	org.apache.commons.math3.linear.RealVector subtract(org.apache.commons.math3.linear.RealVector)	16	10	6
org.apache.commons.math3.linear.RealVector$2	double dotProduct(org.apache.commons.math3.linear.RealVector)	2	2	null
org.apache.commons.math3.linear.RealVector$2	double getNorm()	23	11	8
org.apache.commons.math3.linear.RealVector$2	double getDistance(org.apache.commons.math3.linear.RealVector)	2	1	1
org.apache.commons.math3.linear.RealVector$2	double getEntry(int)	39	25	9
org.apache.commons.math3.linear.RealVector$2	double[] toArray()	12	9	3
org.apache.commons.math3.linear.RRQRDecomposition$Solver	boolean isNonSingular()	21	9	6
org.apache.commons.math3.linear.RRQRDecomposition$Solver	org.apache.commons.math3.linear.RealVector solve(org.apache.commons.math3.linear.RealVector)	32	20	12
org.apache.commons.math3.linear.RRQRDecomposition$Solver	org.apache.commons.math3.linear.RealMatrix solve(org.apache.commons.math3.linear.RealMatrix)	20	20	null
org.apache.commons.math3.linear.RRQRDecomposition$Solver	org.apache.commons.math3.linear.RealMatrix getInverse()	19	16	3
org.apache.commons.math3.linear.LUDecomposition	org.apache.commons.math3.linear.RealMatrix getL()	12	5	4
org.apache.commons.math3.linear.LUDecomposition	org.apache.commons.math3.linear.RealMatrix getU()	12	5	4
org.apache.commons.math3.linear.LUDecomposition	org.apache.commons.math3.linear.RealMatrix getP()	12	5	4
org.apache.commons.math3.linear.LUDecomposition	int[] getPivot()	2	2	null
org.apache.commons.math3.linear.LUDecomposition	org.apache.commons.math3.linear.DecompositionSolver getSolver()	26	14	10
org.apache.commons.math3.linear.RealVector$2$2	boolean hasNext()	100	75	17
org.apache.commons.math3.linear.RealVector$2$2	void remove()	2	2	null
org.apache.commons.math3.linear.RealVector$2$2	java.lang.Object next()	104	77	16
org.apache.commons.math3.linear.Array2DRowFieldMatrix	org.apache.commons.math3.linear.FieldMatrix copy()	4	2	1
org.apache.commons.math3.linear.Array2DRowFieldMatrix	org.apache.commons.math3.linear.Array2DRowFieldMatrix add(org.apache.commons.math3.linear.Array2DRowFieldMatrix)	2	2	null
org.apache.commons.math3.linear.Array2DRowFieldMatrix	org.apache.commons.math3.linear.Array2DRowFieldMatrix subtract(org.apache.commons.math3.linear.Array2DRowFieldMatrix)	2	1	1
org.apache.commons.math3.linear.Array2DRowFieldMatrix	org.apache.commons.math3.linear.Array2DRowFieldMatrix multiply(org.apache.commons.math3.linear.Array2DRowFieldMatrix)	6	1	1
org.apache.commons.math3.linear.Array2DRowFieldMatrix	org.apache.commons.math3.FieldElement[][] getData()	4	3	1
org.apache.commons.math3.linear.Array2DRowFieldMatrix	void setSubMatrix(org.apache.commons.math3.FieldElement[][],int,int)	11	1	1
org.apache.commons.math3.linear.Array2DRowFieldMatrix	org.apache.commons.math3.FieldElement getEntry(int,int)	53	12	10
org.apache.commons.math3.linear.Array2DRowFieldMatrix	void setEntry(int,int,org.apache.commons.math3.FieldElement)	2	2	null
org.apache.commons.math3.linear.Array2DRowFieldMatrix	int getRowDimension()	33	13	7
org.apache.commons.math3.linear.Array2DRowFieldMatrix	int getColumnDimension()	30	10	8
org.apache.commons.math3.linear.Array2DRowFieldMatrix	org.apache.commons.math3.FieldElement[] operate(org.apache.commons.math3.FieldElement[])	3	2	1
org.apache.commons.math3.linear.Array2DRowFieldMatrix	org.apache.commons.math3.FieldElement[] preMultiply(org.apache.commons.math3.FieldElement[])	3	1	1
org.apache.commons.math3.linear.ArrayRealVector	double[] getDataRef()	7	2	1
org.apache.commons.math3.linear.ArrayRealVector	double dotProduct(org.apache.commons.math3.linear.RealVector)	2	2	null
org.apache.commons.math3.linear.ArrayRealVector	double getNorm()	23	11	8
org.apache.commons.math3.linear.ArrayRealVector	double getDistance(org.apache.commons.math3.linear.RealVector)	2	1	1
org.apache.commons.math3.linear.ArrayRealVector	double getEntry(int)	83	27	16
org.apache.commons.math3.linear.ArrayRealVector	int getDimension()	24	3	2
org.apache.commons.math3.linear.ArrayRealVector	void setEntry(int,double)	27	23	4
org.apache.commons.math3.linear.ArrayRealVector	void set(double)	22	18	4
org.apache.commons.math3.linear.ArrayRealVector	double[] toArray()	20	15	4
org.apache.commons.math3.linear.ArrayRealVector	org.apache.commons.math3.linear.RealVector copy()	4	3	1
org.apache.commons.math3.linear.ArrayRealVector	org.apache.commons.math3.linear.RealVector subtract(org.apache.commons.math3.linear.RealVector)	16	10	6
org.apache.commons.math3.linear.ArrayRealVector	org.apache.commons.math3.linear.RealVector add(org.apache.commons.math3.linear.RealVector)	7	5	2
org.apache.commons.math3.linear.SparseFieldMatrix	org.apache.commons.math3.linear.FieldMatrix copy()	3	2	1
org.apache.commons.math3.linear.SparseFieldMatrix	int getColumnDimension()	30	10	8
org.apache.commons.math3.linear.SparseFieldMatrix	org.apache.commons.math3.FieldElement getEntry(int,int)	38	11	10
org.apache.commons.math3.linear.SparseFieldMatrix	int getRowDimension()	31	12	7
org.apache.commons.math3.linear.SparseFieldVector	org.apache.commons.math3.linear.FieldVector copy()	5	1	1
org.apache.commons.math3.linear.SparseFieldVector	org.apache.commons.math3.FieldElement dotProduct(org.apache.commons.math3.linear.FieldVector)	2	1	1
org.apache.commons.math3.linear.SparseFieldVector	org.apache.commons.math3.linear.FieldVector ebeDivide(org.apache.commons.math3.linear.FieldVector)	2	1	1
org.apache.commons.math3.linear.SparseFieldVector	org.apache.commons.math3.linear.FieldVector ebeMultiply(org.apache.commons.math3.linear.FieldVector)	2	1	1
org.apache.commons.math3.linear.SparseFieldVector	int getDimension()	6	2	2
org.apache.commons.math3.linear.SparseFieldVector	org.apache.commons.math3.FieldElement getEntry(int)	9	6	2
org.apache.commons.math3.linear.SparseFieldVector	org.apache.commons.math3.linear.FieldVector mapAddToSelf(org.apache.commons.math3.FieldElement)	2	2	null
org.apache.commons.math3.linear.SparseFieldVector	org.apache.commons.math3.linear.FieldVector mapDivideToSelf(org.apache.commons.math3.FieldElement)	2	2	null
org.apache.commons.math3.linear.SparseFieldVector	org.apache.commons.math3.linear.FieldVector mapInvToSelf()	2	2	null
org.apache.commons.math3.linear.SparseFieldVector	org.apache.commons.math3.linear.FieldVector mapMultiplyToSelf(org.apache.commons.math3.FieldElement)	2	2	null
org.apache.commons.math3.linear.SparseFieldVector	org.apache.commons.math3.linear.FieldVector mapSubtractToSelf(org.apache.commons.math3.FieldElement)	2	2	null
org.apache.commons.math3.linear.SparseFieldVector	org.apache.commons.math3.linear.FieldMatrix outerProduct(org.apache.commons.math3.linear.SparseFieldVector)	2	2	null
org.apache.commons.math3.linear.SparseFieldVector	org.apache.commons.math3.FieldElement[] toArray()	40	11	4
org.apache.commons.math3.linear.SparseFieldVector	org.apache.commons.math3.FieldElement walkInDefaultOrder(org.apache.commons.math3.linear.FieldVectorPreservingVisitor,int,int)	6	2	1
org.apache.commons.math3.linear.SparseFieldVector	org.apache.commons.math3.FieldElement walkInOptimizedOrder(org.apache.commons.math3.linear.FieldVectorPreservingVisitor,int,int)	6	2	1
org.apache.commons.math3.linear.SparseFieldVector	org.apache.commons.math3.FieldElement walkInDefaultOrder(org.apache.commons.math3.linear.FieldVectorChangingVisitor,int,int)	6	2	1
org.apache.commons.math3.linear.SparseFieldVector	org.apache.commons.math3.FieldElement walkInOptimizedOrder(org.apache.commons.math3.linear.FieldVectorChangingVisitor,int,int)	6	2	1
org.apache.commons.math3.linear.OpenMapRealMatrix	org.apache.commons.math3.linear.OpenMapRealMatrix copy()	3	2	1
org.apache.commons.math3.linear.OpenMapRealMatrix	int getColumnDimension()	58	26	16
org.apache.commons.math3.linear.OpenMapRealMatrix	org.apache.commons.math3.linear.OpenMapRealMatrix add(org.apache.commons.math3.linear.OpenMapRealMatrix)	2	2	null
org.apache.commons.math3.linear.OpenMapRealMatrix	org.apache.commons.math3.linear.OpenMapRealMatrix subtract(org.apache.commons.math3.linear.OpenMapRealMatrix)	2	1	1
org.apache.commons.math3.linear.OpenMapRealMatrix	org.apache.commons.math3.linear.RealMatrix multiply(org.apache.commons.math3.linear.RealMatrix)	39	26	8
org.apache.commons.math3.linear.OpenMapRealMatrix	org.apache.commons.math3.linear.OpenMapRealMatrix multiply(org.apache.commons.math3.linear.OpenMapRealMatrix)	7	2	1
org.apache.commons.math3.linear.OpenMapRealMatrix	double getEntry(int,int)	77	34	18
org.apache.commons.math3.linear.OpenMapRealMatrix	int getRowDimension()	50	27	10
org.apache.commons.math3.linear.OpenMapRealMatrix	void setEntry(int,int,double)	3	2	1
org.apache.commons.math3.linear.OpenMapRealMatrix	void addToEntry(int,int,double)	2	1	1
org.apache.commons.math3.linear.OpenMapRealMatrix	org.apache.commons.math3.linear.RealMatrix copy()	4	3	1
org.apache.commons.math3.linear.OpenMapRealMatrix	org.apache.commons.math3.linear.RealMatrix subtract(org.apache.commons.math3.linear.RealMatrix)	50	32	10
org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator	boolean hasNext()	100	75	17
org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator	void remove()	2	2	null
org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator	java.lang.Object next()	104	77	16
org.apache.commons.math3.linear.RealVector$2$1	boolean hasNext()	100	75	17
org.apache.commons.math3.linear.RealVector$2$1	void remove()	2	2	null
org.apache.commons.math3.linear.RealVector$2$1	java.lang.Object next()	104	77	16
org.apache.commons.math3.linear.QRDecomposition$Solver	boolean isNonSingular()	21	9	6
org.apache.commons.math3.linear.QRDecomposition$Solver	org.apache.commons.math3.linear.RealVector solve(org.apache.commons.math3.linear.RealVector)	32	20	12
org.apache.commons.math3.linear.QRDecomposition$Solver	org.apache.commons.math3.linear.RealMatrix solve(org.apache.commons.math3.linear.RealMatrix)	20	20	null
org.apache.commons.math3.linear.QRDecomposition$Solver	org.apache.commons.math3.linear.RealMatrix getInverse()	19	16	3
org.apache.commons.math3.linear.RealVector$Entry	double getValue()	2	1	1
org.apache.commons.math3.linear.TriDiagonalTransformer	org.apache.commons.math3.linear.RealMatrix getQ()	2	1	1
org.apache.commons.math3.linear.TriDiagonalTransformer	org.apache.commons.math3.linear.RealMatrix getQT()	2	1	1
org.apache.commons.math3.linear.TriDiagonalTransformer	org.apache.commons.math3.linear.RealMatrix getT()	2	1	1
org.apache.commons.math3.linear.ArrayFieldVector	org.apache.commons.math3.linear.FieldVector copy()	12	2	2
org.apache.commons.math3.linear.ArrayFieldVector	org.apache.commons.math3.linear.FieldVector mapAddToSelf(org.apache.commons.math3.FieldElement)	2	2	null
org.apache.commons.math3.linear.ArrayFieldVector	org.apache.commons.math3.linear.FieldVector mapSubtractToSelf(org.apache.commons.math3.FieldElement)	2	2	null
org.apache.commons.math3.linear.ArrayFieldVector	org.apache.commons.math3.linear.FieldVector mapMultiplyToSelf(org.apache.commons.math3.FieldElement)	2	2	null
org.apache.commons.math3.linear.ArrayFieldVector	org.apache.commons.math3.linear.FieldVector mapDivideToSelf(org.apache.commons.math3.FieldElement)	2	2	null
org.apache.commons.math3.linear.ArrayFieldVector	org.apache.commons.math3.linear.FieldVector mapInvToSelf()	2	2	null
org.apache.commons.math3.linear.ArrayFieldVector	org.apache.commons.math3.FieldElement[] getData()	8	4	1
org.apache.commons.math3.linear.ArrayFieldVector	org.apache.commons.math3.FieldElement[] getDataRef()	6	2	2
org.apache.commons.math3.linear.ArrayFieldVector	org.apache.commons.math3.linear.FieldMatrix outerProduct(org.apache.commons.math3.linear.ArrayFieldVector)	2	2	null
org.apache.commons.math3.linear.ArrayFieldVector	org.apache.commons.math3.FieldElement getEntry(int)	29	7	3
org.apache.commons.math3.linear.ArrayFieldVector	int getDimension()	23	4	4
org.apache.commons.math3.linear.ArrayFieldVector	org.apache.commons.math3.linear.FieldVector getSubVector(int,int)	2	1	1
org.apache.commons.math3.linear.ArrayFieldVector	void setEntry(int,org.apache.commons.math3.FieldElement)	3	1	1
org.apache.commons.math3.linear.ArrayFieldVector	void setSubVector(int,org.apache.commons.math3.linear.FieldVector)	2	1	1
org.apache.commons.math3.linear.ArrayFieldVector	void set(int,org.apache.commons.math3.linear.ArrayFieldVector)	2	1	1
org.apache.commons.math3.linear.ArrayFieldVector	org.apache.commons.math3.FieldElement[] toArray()	40	11	5
org.apache.commons.math3.linear.ArrayFieldVector	void checkVectorDimensions(org.apache.commons.math3.linear.FieldVector)	2	1	1
org.apache.commons.math3.linear.ArrayFieldVector	org.apache.commons.math3.FieldElement walkInDefaultOrder(org.apache.commons.math3.linear.FieldVectorPreservingVisitor,int,int)	6	2	1
org.apache.commons.math3.linear.ArrayFieldVector	org.apache.commons.math3.FieldElement walkInOptimizedOrder(org.apache.commons.math3.linear.FieldVectorPreservingVisitor,int,int)	6	2	1
org.apache.commons.math3.linear.ArrayFieldVector	org.apache.commons.math3.FieldElement walkInDefaultOrder(org.apache.commons.math3.linear.FieldVectorChangingVisitor,int,int)	6	2	1
org.apache.commons.math3.linear.ArrayFieldVector	org.apache.commons.math3.FieldElement walkInOptimizedOrder(org.apache.commons.math3.linear.FieldVectorChangingVisitor,int,int)	6	2	1
org.apache.commons.math3.linear.LUDecomposition$Solver	boolean isNonSingular()	21	9	6
org.apache.commons.math3.linear.LUDecomposition$Solver	org.apache.commons.math3.linear.RealVector solve(org.apache.commons.math3.linear.RealVector)	32	20	12
org.apache.commons.math3.linear.LUDecomposition$Solver	org.apache.commons.math3.linear.RealMatrix solve(org.apache.commons.math3.linear.RealMatrix)	20	20	null
org.apache.commons.math3.linear.LUDecomposition$Solver	org.apache.commons.math3.linear.RealMatrix getInverse()	19	16	3
org.apache.commons.math3.linear.Array2DRowRealMatrix	org.apache.commons.math3.linear.RealMatrix copy()	8	5	2
org.apache.commons.math3.linear.Array2DRowRealMatrix	org.apache.commons.math3.linear.Array2DRowRealMatrix add(org.apache.commons.math3.linear.Array2DRowRealMatrix)	2	2	null
org.apache.commons.math3.linear.Array2DRowRealMatrix	org.apache.commons.math3.linear.Array2DRowRealMatrix subtract(org.apache.commons.math3.linear.Array2DRowRealMatrix)	2	1	1
org.apache.commons.math3.linear.Array2DRowRealMatrix	org.apache.commons.math3.linear.Array2DRowRealMatrix multiply(org.apache.commons.math3.linear.Array2DRowRealMatrix)	6	1	1
org.apache.commons.math3.linear.Array2DRowRealMatrix	double[][] getData()	16	13	3
org.apache.commons.math3.linear.Array2DRowRealMatrix	void setSubMatrix(double[][],int,int)	11	1	1
org.apache.commons.math3.linear.Array2DRowRealMatrix	double getEntry(int,int)	90	33	18
org.apache.commons.math3.linear.Array2DRowRealMatrix	void setEntry(int,int,double)	19	6	5
org.apache.commons.math3.linear.Array2DRowRealMatrix	void addToEntry(int,int,double)	2	1	1
org.apache.commons.math3.linear.Array2DRowRealMatrix	int getRowDimension()	56	33	10
org.apache.commons.math3.linear.Array2DRowRealMatrix	int getColumnDimension()	60	28	16
org.apache.commons.math3.linear.Array2DRowRealMatrix	double[] operate(double[])	4	3	1
org.apache.commons.math3.linear.Array2DRowRealMatrix	double[] preMultiply(double[])	4	2	1
org.apache.commons.math3.linear.OpenMapRealVector	org.apache.commons.math3.linear.RealVector add(org.apache.commons.math3.linear.RealVector)	7	5	2
org.apache.commons.math3.linear.OpenMapRealVector	int getDimension()	9	2	1
org.apache.commons.math3.linear.OpenMapRealVector	double getDistance(org.apache.commons.math3.linear.RealVector)	2	1	1
org.apache.commons.math3.linear.OpenMapRealVector	double getEntry(int)	46	26	10
org.apache.commons.math3.linear.OpenMapRealVector	void setEntry(int,double)	6	1	1
org.apache.commons.math3.linear.OpenMapRealVector	org.apache.commons.math3.linear.RealVector subtract(org.apache.commons.math3.linear.RealVector)	16	10	6
org.apache.commons.math3.linear.OpenMapRealVector	double[] toArray()	12	9	3
org.apache.commons.math3.linear.OpenMapRealVector	int hashCode()	4	1	1
org.apache.commons.math3.linear.OpenMapRealVector	java.util.Iterator sparseIterator()	2	1	1
org.apache.commons.math3.linear.OpenMapRealVector	org.apache.commons.math3.linear.RealVector copy()	4	3	1
org.apache.commons.math3.linear.QRDecomposition	org.apache.commons.math3.linear.RealMatrix getR()	14	3	3
org.apache.commons.math3.linear.QRDecomposition	org.apache.commons.math3.linear.RealMatrix getQ()	2	1	1
org.apache.commons.math3.linear.QRDecomposition	org.apache.commons.math3.linear.RealMatrix getH()	14	3	3
org.apache.commons.math3.linear.QRDecomposition	org.apache.commons.math3.linear.DecompositionSolver getSolver()	13	10	1
org.apache.commons.math3.linear.BlockRealMatrix	org.apache.commons.math3.linear.BlockRealMatrix add(org.apache.commons.math3.linear.BlockRealMatrix)	2	2	null
org.apache.commons.math3.linear.BlockRealMatrix	org.apache.commons.math3.linear.BlockRealMatrix subtract(org.apache.commons.math3.linear.BlockRealMatrix)	2	1	1
org.apache.commons.math3.linear.BlockRealMatrix	org.apache.commons.math3.linear.BlockRealMatrix scalarAdd(double)	3	3	null
org.apache.commons.math3.linear.BlockRealMatrix	org.apache.commons.math3.linear.RealMatrix scalarMultiply(double)	4	4	null
org.apache.commons.math3.linear.BlockRealMatrix	org.apache.commons.math3.linear.BlockRealMatrix multiply(org.apache.commons.math3.linear.BlockRealMatrix)	6	1	1
org.apache.commons.math3.linear.BlockRealMatrix	double[][] getData()	11	10	1
org.apache.commons.math3.linear.BlockRealMatrix	double getNorm()	61	37	16
org.apache.commons.math3.linear.BlockRealMatrix	double getFrobeniusNorm()	2	1	1
org.apache.commons.math3.linear.BlockRealMatrix	void setSubMatrix(double[][],int,int)	11	2	1
org.apache.commons.math3.linear.BlockRealMatrix	void setRowMatrix(int,org.apache.commons.math3.linear.RealMatrix)	4	2	1
org.apache.commons.math3.linear.BlockRealMatrix	void setColumnMatrix(int,org.apache.commons.math3.linear.RealMatrix)	4	2	1
org.apache.commons.math3.linear.BlockRealMatrix	org.apache.commons.math3.linear.RealVector getRowVector(int)	6	3	1
org.apache.commons.math3.linear.BlockRealMatrix	void setRowVector(int,org.apache.commons.math3.linear.RealVector)	4	2	1
org.apache.commons.math3.linear.BlockRealMatrix	org.apache.commons.math3.linear.RealVector getColumnVector(int)	39	19	8
org.apache.commons.math3.linear.BlockRealMatrix	void setColumnVector(int,org.apache.commons.math3.linear.RealVector)	4	2	1
org.apache.commons.math3.linear.BlockRealMatrix	double[] getRow(int)	14	8	4
org.apache.commons.math3.linear.BlockRealMatrix	void setRow(int,double[])	4	2	1
org.apache.commons.math3.linear.BlockRealMatrix	double[] getColumn(int)	31	20	7
org.apache.commons.math3.linear.BlockRealMatrix	void setColumn(int,double[])	4	2	1
org.apache.commons.math3.linear.BlockRealMatrix	double getEntry(int,int)	107	40	25
org.apache.commons.math3.linear.BlockRealMatrix	void setEntry(int,int,double)	2	2	null
org.apache.commons.math3.linear.BlockRealMatrix	void addToEntry(int,int,double)	2	1	1
org.apache.commons.math3.linear.BlockRealMatrix	int getRowDimension()	51	26	10
org.apache.commons.math3.linear.BlockRealMatrix	int getColumnDimension()	60	25	16
org.apache.commons.math3.linear.BlockRealMatrix	double[] operate(double[])	4	3	1
org.apache.commons.math3.linear.BlockRealMatrix	double[] preMultiply(double[])	4	2	1
org.apache.commons.math3.linear.BlockRealMatrix	double walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)	4	3	1
org.apache.commons.math3.linear.BlockRealMatrix	double walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)	2	1	1
org.apache.commons.math3.linear.BlockRealMatrix	double walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)	2	1	1
org.apache.commons.math3.linear.BlockRealMatrix	double walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)	2	1	1
org.apache.commons.math3.linear.BlockRealMatrix	org.apache.commons.math3.linear.RealMatrix copy()	4	3	1
org.apache.commons.math3.linear.BlockRealMatrix	org.apache.commons.math3.linear.RealMatrix transpose()	25	22	2
org.apache.commons.math3.linear.BlockRealMatrix	org.apache.commons.math3.linear.RealMatrix getColumnMatrix(int)	8	4	2
org.apache.commons.math3.linear.BlockRealMatrix	org.apache.commons.math3.linear.RealMatrix getRowMatrix(int)	8	4	2
org.apache.commons.math3.linear.BlockRealMatrix	org.apache.commons.math3.linear.RealMatrix getSubMatrix(int,int,int,int)	8	5	1
org.apache.commons.math3.linear.BlockRealMatrix	org.apache.commons.math3.linear.RealMatrix multiply(org.apache.commons.math3.linear.RealMatrix)	41	27	9
org.apache.commons.math3.linear.BlockRealMatrix	org.apache.commons.math3.linear.RealMatrix subtract(org.apache.commons.math3.linear.RealMatrix)	50	32	10
org.apache.commons.math3.linear.BlockRealMatrix	org.apache.commons.math3.linear.RealMatrix add(org.apache.commons.math3.linear.RealMatrix)	4	4	null
org.apache.commons.math3.linear.FieldLUDecomposition$Solver	boolean isNonSingular()	8	3	3
org.apache.commons.math3.linear.FieldLUDecomposition$Solver	org.apache.commons.math3.linear.FieldVector solve(org.apache.commons.math3.linear.FieldVector)	7	6	1
org.apache.commons.math3.linear.FieldLUDecomposition$Solver	org.apache.commons.math3.linear.FieldMatrix solve(org.apache.commons.math3.linear.FieldMatrix)	3	3	null
org.apache.commons.math3.linear.FieldLUDecomposition$Solver	org.apache.commons.math3.linear.FieldMatrix getInverse()	9	6	3
org.apache.commons.math3.linear.EigenDecomposition$Solver	org.apache.commons.math3.linear.RealVector solve(org.apache.commons.math3.linear.RealVector)	32	20	12
org.apache.commons.math3.linear.EigenDecomposition$Solver	org.apache.commons.math3.linear.RealMatrix solve(org.apache.commons.math3.linear.RealMatrix)	20	20	null
org.apache.commons.math3.linear.EigenDecomposition$Solver	boolean isNonSingular()	21	9	6
org.apache.commons.math3.linear.EigenDecomposition$Solver	org.apache.commons.math3.linear.RealMatrix getInverse()	19	16	3
org.apache.commons.math3.fraction.FractionField	org.apache.commons.math3.fraction.FractionField getInstance()	74	35	15
org.apache.commons.math3.fraction.FractionField	org.apache.commons.math3.fraction.Fraction getZero()	10	8	1
org.apache.commons.math3.fraction.FractionField	java.lang.Class getRuntimeClass()	2	2	null
org.apache.commons.math3.fraction.FractionField	java.lang.Object getOne()	13	11	2
org.apache.commons.math3.fraction.FractionField	java.lang.Object getZero()	8	6	1
org.apache.commons.math3.fraction.ProperBigFractionFormat	java.text.NumberFormat getWholeFormat()	2	1	1
org.apache.commons.math3.fraction.ProperBigFractionFormat	void setWholeFormat(java.text.NumberFormat)	2	1	1
org.apache.commons.math3.fraction.ProperFractionFormat	java.text.NumberFormat getWholeFormat()	2	1	1
org.apache.commons.math3.fraction.ProperFractionFormat	void setWholeFormat(java.text.NumberFormat)	2	1	1
org.apache.commons.math3.fraction.Fraction	org.apache.commons.math3.fraction.Fraction abs()	3	1	1
org.apache.commons.math3.fraction.Fraction	int compareTo(org.apache.commons.math3.fraction.Fraction)	6	1	1
org.apache.commons.math3.fraction.Fraction	boolean equals(java.lang.Object)	23	11	5
org.apache.commons.math3.fraction.Fraction	int getDenominator()	37	15	9
org.apache.commons.math3.fraction.Fraction	int getNumerator()	39	16	10
org.apache.commons.math3.fraction.Fraction	int hashCode()	2	1	1
org.apache.commons.math3.fraction.Fraction	org.apache.commons.math3.fraction.Fraction negate()	6	2	2
org.apache.commons.math3.fraction.Fraction	org.apache.commons.math3.fraction.Fraction reciprocal()	7	2	2
org.apache.commons.math3.fraction.Fraction	org.apache.commons.math3.fraction.Fraction add(org.apache.commons.math3.fraction.Fraction)	26	5	5
org.apache.commons.math3.fraction.Fraction	org.apache.commons.math3.fraction.Fraction add(int)	9	9	null
org.apache.commons.math3.fraction.Fraction	org.apache.commons.math3.fraction.Fraction subtract(org.apache.commons.math3.fraction.Fraction)	22	4	4
org.apache.commons.math3.fraction.Fraction	org.apache.commons.math3.fraction.Fraction multiply(org.apache.commons.math3.fraction.Fraction)	36	5	5
org.apache.commons.math3.fraction.Fraction	org.apache.commons.math3.fraction.Fraction multiply(int)	2	2	null
org.apache.commons.math3.fraction.Fraction	org.apache.commons.math3.fraction.Fraction divide(org.apache.commons.math3.fraction.Fraction)	12	1	1
org.apache.commons.math3.fraction.Fraction	org.apache.commons.math3.fraction.Fraction divide(int)	2	2	null
org.apache.commons.math3.fraction.Fraction	double percentageValue()	2	2	null
org.apache.commons.math3.fraction.Fraction	org.apache.commons.math3.fraction.Fraction getReducedFraction(int,int)	5	1	1
org.apache.commons.math3.fraction.Fraction	java.lang.String toString()	8	3	3
org.apache.commons.math3.fraction.FractionFormat	org.apache.commons.math3.fraction.Fraction parse(java.lang.String)	22	12	8
org.apache.commons.math3.fraction.BigFractionField	org.apache.commons.math3.fraction.BigFractionField getInstance()	3	3	null
org.apache.commons.math3.fraction.BigFractionField	java.lang.Class getRuntimeClass()	2	2	null
org.apache.commons.math3.fraction.BigFractionField	java.lang.Object getOne()	13	11	2
org.apache.commons.math3.fraction.BigFractionField	java.lang.Object getZero()	8	6	1
org.apache.commons.math3.fraction.BigFractionFormat	org.apache.commons.math3.fraction.BigFraction parse(java.lang.String)	20	9	9
org.apache.commons.math3.fraction.BigFraction	org.apache.commons.math3.fraction.BigFraction getReducedFraction(int,int)	5	1	1
org.apache.commons.math3.fraction.BigFraction	org.apache.commons.math3.fraction.BigFraction abs()	3	1	1
org.apache.commons.math3.fraction.BigFraction	org.apache.commons.math3.fraction.BigFraction add(java.math.BigInteger)	2	1	1
org.apache.commons.math3.fraction.BigFraction	org.apache.commons.math3.fraction.BigFraction add(int)	2	1	1
org.apache.commons.math3.fraction.BigFraction	org.apache.commons.math3.fraction.BigFraction add(long)	2	1	1
org.apache.commons.math3.fraction.BigFraction	org.apache.commons.math3.fraction.BigFraction add(org.apache.commons.math3.fraction.BigFraction)	14	3	3
org.apache.commons.math3.fraction.BigFraction	java.math.BigDecimal bigDecimalValue()	2	1	1
org.apache.commons.math3.fraction.BigFraction	java.math.BigDecimal bigDecimalValue(int,int)	2	2	null
org.apache.commons.math3.fraction.BigFraction	int compareTo(org.apache.commons.math3.fraction.BigFraction)	6	1	1
org.apache.commons.math3.fraction.BigFraction	org.apache.commons.math3.fraction.BigFraction divide(org.apache.commons.math3.fraction.BigFraction)	10	1	1
org.apache.commons.math3.fraction.BigFraction	boolean equals(java.lang.Object)	10	3	2
org.apache.commons.math3.fraction.BigFraction	java.math.BigInteger getDenominator()	6	3	3
org.apache.commons.math3.fraction.BigFraction	int getDenominatorAsInt()	35	9	7
org.apache.commons.math3.fraction.BigFraction	java.math.BigInteger getNumerator()	6	3	3
org.apache.commons.math3.fraction.BigFraction	int getNumeratorAsInt()	37	10	8
org.apache.commons.math3.fraction.BigFraction	long getNumeratorAsLong()	2	1	1
org.apache.commons.math3.fraction.BigFraction	int hashCode()	2	1	1
org.apache.commons.math3.fraction.BigFraction	org.apache.commons.math3.fraction.BigFraction multiply(org.apache.commons.math3.fraction.BigFraction)	11	4	2
org.apache.commons.math3.fraction.BigFraction	org.apache.commons.math3.fraction.BigFraction negate()	4	2	1
org.apache.commons.math3.fraction.BigFraction	org.apache.commons.math3.fraction.BigFraction pow(int)	3	1	1
org.apache.commons.math3.fraction.BigFraction	org.apache.commons.math3.fraction.BigFraction pow(long)	3	1	1
org.apache.commons.math3.fraction.BigFraction	org.apache.commons.math3.fraction.BigFraction pow(java.math.BigInteger)	3	1	1
org.apache.commons.math3.fraction.BigFraction	org.apache.commons.math3.fraction.BigFraction reciprocal()	6	2	1
org.apache.commons.math3.fraction.BigFraction	org.apache.commons.math3.fraction.BigFraction subtract(org.apache.commons.math3.fraction.BigFraction)	8	1	1
org.apache.commons.math3.special.BesselJ	double value(double)	90	36	30
org.apache.commons.math3.special.BesselJ	double value(double,double)	3	3	null
org.apache.commons.math3.special.Gamma	double logGamma(double)	7	4	1
org.apache.commons.math3.special.Gamma	double digamma(double)	15	3	2
org.apache.commons.math3.special.Gamma	double trigamma(double)	4	2	1
org.apache.commons.math3.special.Gamma	double invGamma1pm1(double)	3	3	null
org.apache.commons.math3.special.Gamma	double logGamma1p(double)	3	3	null
org.apache.commons.math3.special.Gamma	double gamma(double)	4	3	1
org.apache.commons.math3.special.Erf	double erf(double)	17	9	6
org.apache.commons.math3.special.Erf	double erfc(double)	18	10	6
org.apache.commons.math3.special.Erf	double erfInv(double)	7	3	2
org.apache.commons.math3.special.Erf	double erfcInv(double)	7	3	2
org.apache.commons.math3.random.HaltonSequenceGenerator	double[] nextVector()	3	3	null
org.apache.commons.math3.random.HaltonSequenceGenerator	int getNextIndex()	4	3	1
org.apache.commons.math3.random.EmpiricalDistribution	void load(double[])	11	10	1
org.apache.commons.math3.random.EmpiricalDistribution	void load(java.net.URL)	3	3	null
org.apache.commons.math3.random.EmpiricalDistribution	void load(java.io.File)	2	2	null
org.apache.commons.math3.random.EmpiricalDistribution	double getNextValue()	6	3	3
org.apache.commons.math3.random.EmpiricalDistribution	org.apache.commons.math3.stat.descriptive.StatisticalSummary getSampleStats()	3	1	1
org.apache.commons.math3.random.EmpiricalDistribution	double[] getGeneratorUpperBounds()	2	2	null
org.apache.commons.math3.random.EmpiricalDistribution	void reSeed(long)	2	1	1
org.apache.commons.math3.random.EmpiricalDistribution	double cumulativeProbability(double)	16	3	3
org.apache.commons.math3.random.EmpiricalDistribution	double inverseCumulativeProbability(double)	13	3	2
org.apache.commons.math3.random.EmpiricalDistribution	void reseedRandomGenerator(long)	2	2	null
org.apache.commons.math3.random.UnitSphereRandomVectorGenerator	double[] nextVector()	25	17	7
org.apache.commons.math3.random.RandomGeneratorFactory$1	double nextDouble()	37	19	17
org.apache.commons.math3.random.ValueServer	double getNext()	14	5	3
org.apache.commons.math3.random.ValueServer	void computeDistribution()	3	3	null
org.apache.commons.math3.random.ValueServer	void setMode(int)	10	6	1
org.apache.commons.math3.random.ValueServer	void setValuesFileURL(java.net.URL)	3	3	null
org.apache.commons.math3.random.ValueServer	void closeReplayFile()	2	1	1
org.apache.commons.math3.random.ValueServer	double getMu()	2	1	1
org.apache.commons.math3.random.ValueServer	void setMu(double)	3	2	1
org.apache.commons.math3.random.StableRandomGenerator	double nextNormalizedDouble()	3	3	null
org.apache.commons.math3.random.SobolSequenceGenerator	double[] nextVector()	2	2	null
org.apache.commons.math3.random.SobolSequenceGenerator	int getNextIndex()	3	2	1
org.apache.commons.math3.random.SynchronizedRandomGenerator	double nextDouble()	38	20	17
org.apache.commons.math3.random.CorrelatedRandomVectorGenerator	double[] nextVector()	3	3	null
org.apache.commons.math3.random.JDKRandomGenerator	void setSeed(int)	2	2	null
org.apache.commons.math3.random.RandomDataGenerator	java.lang.String nextHexString(int)	6	1	1
org.apache.commons.math3.random.RandomDataGenerator	int nextInt(int,int)	4	3	1
org.apache.commons.math3.random.RandomDataGenerator	long nextLong(long,long)	6	4	2
org.apache.commons.math3.random.RandomDataGenerator	java.lang.String nextSecureHexString(int)	9	2	2
org.apache.commons.math3.random.RandomDataGenerator	long nextSecureLong(long,long)	3	2	1
org.apache.commons.math3.random.RandomDataGenerator	long nextPoisson(double)	4	1	1
org.apache.commons.math3.random.RandomDataGenerator	double nextGaussian(double,double)	2	1	1
org.apache.commons.math3.random.RandomDataGenerator	double nextExponential(double)	4	1	1
org.apache.commons.math3.random.RandomDataGenerator	double nextGamma(double,double)	2	1	1
org.apache.commons.math3.random.RandomDataGenerator	double nextUniform(double,double)	13	5	4
org.apache.commons.math3.random.RandomDataGenerator	int[] nextPermutation(int,int)	6	2	1
org.apache.commons.math3.random.RandomDataGenerator	java.lang.Object[] nextSample(java.util.Collection,int)	5	2	1
org.apache.commons.math3.random.RandomDataGenerator	void reSeed(long)	19	15	3
org.apache.commons.math3.random.RandomDataGenerator	void reSeedSecure()	2	1	1
org.apache.commons.math3.random.RandomDataGenerator	void reSeedSecure(long)	3	1	1
org.apache.commons.math3.random.RandomDataGenerator	void reSeed()	2	1	1
org.apache.commons.math3.transform.TransformType	org.apache.commons.math3.transform.TransformType[] values()	8	8	null
org.apache.commons.math3.transform.FastHadamardTransformer	double[] transform(double[],org.apache.commons.math3.transform.TransformType)	2	2	null
org.apache.commons.math3.transform.DftNormalization	org.apache.commons.math3.transform.DftNormalization[] values()	8	8	null
org.apache.commons.math3.transform.FastFourierTransformer	org.apache.commons.math3.complex.Complex[] transform(double[],org.apache.commons.math3.transform.TransformType)	3	2	1
org.apache.commons.math3.transform.FastFourierTransformer	org.apache.commons.math3.complex.Complex[] transform(org.apache.commons.math3.analysis.UnivariateFunction,double,double,int,org.apache.commons.math3.transform.TransformType)	6	4	2
org.apache.commons.math3.transform.FastFourierTransformer	org.apache.commons.math3.complex.Complex[] transform(org.apache.commons.math3.complex.Complex[],org.apache.commons.math3.transform.TransformType)	3	2	1
org.apache.commons.math3.transform.FastFourierTransformer	java.lang.Object mdfft(java.lang.Object,org.apache.commons.math3.transform.TransformType)	4	2	2
org.apache.commons.math3.ml.distance.ManhattanDistance	double compute(double[],double[])	17	12	5
org.apache.commons.math3.ml.distance.ChebyshevDistance	double compute(double[],double[])	17	12	5
org.apache.commons.math3.ml.distance.EuclideanDistance	double compute(double[],double[])	21	13	6
org.apache.commons.math3.ml.distance.EarthMoversDistance	double compute(double[],double[])	17	12	5
org.apache.commons.math3.ml.distance.CanberraDistance	double compute(double[],double[])	17	12	5
org.apache.commons.math3.ml.clustering.DBSCANClusterer	java.util.List cluster(java.util.Collection)	3	3	null
org.apache.commons.math3.ml.clustering.FuzzyKMeansClusterer	java.util.List cluster(java.util.Collection)	4	4	null
org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer	java.util.List cluster(java.util.Collection)	4	4	null
org.apache.commons.math3.ml.clustering.CentroidCluster	org.apache.commons.math3.ml.clustering.Clusterable getCenter()	2	2	null
org.apache.commons.math3.ml.clustering.Cluster	void addPoint(org.apache.commons.math3.ml.clustering.Clusterable)	2	1	1
org.apache.commons.math3.ml.clustering.Cluster	java.util.List getPoints()	14	6	4
org.apache.commons.math3.ml.clustering.evaluation.SumOfClusterVariances	double score(java.util.List)	2	1	1
org.apache.commons.math3.ml.neuralnet.twod.util.LocationFinder	org.apache.commons.math3.ml.neuralnet.twod.util.LocationFinder$Location getLocation(org.apache.commons.math3.ml.neuralnet.Neuron)	4	1	1
org.apache.commons.math3.ml.neuralnet.twod.util.LocationFinder$Location	int getRow()	4	1	1
org.apache.commons.math3.ml.neuralnet.twod.util.LocationFinder$Location	int getColumn()	4	1	1
org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D	org.apache.commons.math3.ml.neuralnet.Network getNetwork()	24	20	1
org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D	org.apache.commons.math3.ml.neuralnet.Neuron getNeuron(int,int)	8	1	1
org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D	org.apache.commons.math3.ml.neuralnet.Neuron getNeuron(int,int,org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D$HorizontalDirection,org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D$VerticalDirection)	23	2	2
org.apache.commons.math3.ml.neuralnet.MapUtils	org.apache.commons.math3.ml.neuralnet.Neuron findBest(double[],java.lang.Iterable,org.apache.commons.math3.ml.distance.DistanceMeasure)	5	2	2
org.apache.commons.math3.ml.neuralnet.Neuron	long getIdentifier()	34	10	7
org.apache.commons.math3.ml.neuralnet.Neuron	double[] getFeatures()	24	8	7
org.apache.commons.math3.ml.neuralnet.Neuron	boolean compareAndSetFeatures(double[],double[])	4	2	2
org.apache.commons.math3.ml.neuralnet.Neuron	long getNumberOfAttemptedUpdates()	2	1	1
org.apache.commons.math3.ml.neuralnet.Neuron	long getNumberOfSuccessfulUpdates()	2	1	1
org.apache.commons.math3.ml.neuralnet.Network	java.util.Iterator iterator()	6	5	1
org.apache.commons.math3.ml.neuralnet.Network	void deleteNeuron(org.apache.commons.math3.ml.neuralnet.Neuron)	2	2	null
org.apache.commons.math3.ml.neuralnet.Network	int getFeaturesSize()	2	2	null
org.apache.commons.math3.ml.neuralnet.Network	org.apache.commons.math3.ml.neuralnet.Neuron getNeuron(long)	129	20	20
org.apache.commons.math3.ml.neuralnet.Network	java.util.Collection getNeighbours(java.lang.Iterable,java.lang.Iterable)	2	2	null
org.apache.commons.math3.ml.neuralnet.Network	java.util.Collection getNeighbours(org.apache.commons.math3.ml.neuralnet.Neuron)	64	18	13
org.apache.commons.math3.ml.neuralnet.oned.NeuronString	org.apache.commons.math3.ml.neuralnet.Network getNetwork()	10	6	1
org.apache.commons.math3.ml.neuralnet.MapUtils$PairNeuronDouble$1	int compare(java.lang.Object,java.lang.Object)	10	6	2
org.apache.commons.math3.ml.neuralnet.sofm.util.QuasiSigmoidDecayFunction	double value(long)	4	1	1
org.apache.commons.math3.ml.neuralnet.sofm.util.ExponentialDecayFunction	double value(long)	3	1	1
org.apache.commons.math3.ml.neuralnet.sofm.NeighbourhoodSizeFunctionFactory	org.apache.commons.math3.ml.neuralnet.sofm.NeighbourhoodSizeFunction exponentialDecay(double,double,long)	6	6	null
org.apache.commons.math3.ml.neuralnet.sofm.NeighbourhoodSizeFunctionFactory	org.apache.commons.math3.ml.neuralnet.sofm.NeighbourhoodSizeFunction quasiSigmoidDecay(double,double,long)	4	4	null
org.apache.commons.math3.ml.neuralnet.sofm.LearningFactorFunctionFactory$2	double value(long)	7	2	2
org.apache.commons.math3.ml.neuralnet.sofm.NeighbourhoodSizeFunctionFactory$2	int value(long)	5	2	2
org.apache.commons.math3.ml.neuralnet.sofm.LearningFactorFunctionFactory$1	double value(long)	7	2	2
org.apache.commons.math3.ml.neuralnet.sofm.LearningFactorFunctionFactory	org.apache.commons.math3.ml.neuralnet.sofm.LearningFactorFunction exponentialDecay(double,double,long)	7	7	null
org.apache.commons.math3.ml.neuralnet.sofm.LearningFactorFunctionFactory	org.apache.commons.math3.ml.neuralnet.sofm.LearningFactorFunction quasiSigmoidDecay(double,double,long)	5	5	null
org.apache.commons.math3.ml.neuralnet.sofm.NeighbourhoodSizeFunctionFactory$1	int value(long)	5	2	2
org.apache.commons.math3.ml.neuralnet.FeatureInitializerFactory	org.apache.commons.math3.ml.neuralnet.FeatureInitializer uniform(double,double)	2	2	null
org.apache.commons.math3.ml.neuralnet.Network$NeuronIdentifierComparator	int compare(java.lang.Object,java.lang.Object)	10	6	2
org.apache.commons.math3.exception.MathUnsupportedOperationException	java.lang.String getMessage()	6	5	1
org.apache.commons.math3.exception.NonMonotonicSequenceException	org.apache.commons.math3.util.MathArrays$OrderDirection getDirection()	2	1	1
org.apache.commons.math3.exception.NonMonotonicSequenceException	boolean getStrict()	2	1	1
org.apache.commons.math3.exception.NonMonotonicSequenceException	int getIndex()	2	1	1
org.apache.commons.math3.exception.NonMonotonicSequenceException	java.lang.Number getPrevious()	2	1	1
org.apache.commons.math3.exception.MathIllegalArgumentException	java.lang.String getMessage()	7	6	1
org.apache.commons.math3.exception.MathIllegalStateException	java.lang.String getMessage()	7	6	1
org.apache.commons.math3.exception.DimensionMismatchException	int getDimension()	3	3	null
org.apache.commons.math3.exception.util.LocalizedFormats	org.apache.commons.math3.exception.util.LocalizedFormats[] values()	5	5	null
org.apache.commons.math3.exception.util.LocalizedFormats	java.lang.String getSourceString()	2	2	null
org.apache.commons.math3.exception.util.LocalizedFormats	java.lang.String getLocalizedString(java.util.Locale)	3	3	null
org.apache.commons.math3.exception.util.ExceptionContext	void addMessage(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])	7	4	2
org.apache.commons.math3.exception.util.ExceptionContext	void setValue(java.lang.String,java.lang.Object)	3	3	null
org.apache.commons.math3.exception.util.ExceptionContext	java.lang.Object getValue(java.lang.String)	5	3	2
org.apache.commons.math3.exception.util.ExceptionContext	java.util.Set getKeys()	2	2	null
org.apache.commons.math3.exception.util.ExceptionContext	java.lang.String getMessage()	3	2	1
org.apache.commons.math3.exception.MathRuntimeException	java.lang.String getMessage()	6	5	1
org.apache.commons.math3.exception.MathIllegalNumberException	java.lang.Number getArgument()	16	14	2
org.apache.commons.math3.exception.NumberIsTooSmallException	boolean getBoundIsAllowed()	3	3	null
org.apache.commons.math3.exception.NumberIsTooSmallException	java.lang.Number getMin()	3	3	null
org.apache.commons.math3.exception.MathArithmeticException	java.lang.String getMessage()	7	6	1
org.apache.commons.math3.exception.MaxCountExceededException	java.lang.Number getMax()	3	3	null
org.apache.commons.math3.stat.Frequency$NaturalComparator	int compare(java.lang.Object,java.lang.Object)	10	6	2
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics	void addValue(double[])	36	10	8
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics	long getN()	3	1	1
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics	double[] getSum()	4	2	2
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics	double[] getSumSq()	4	2	2
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics	double[] getSumLog()	4	2	2
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics	double[] getMean()	14	5	5
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics	double[] getStandardDeviation()	7	3	3
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics	org.apache.commons.math3.linear.RealMatrix getCovariance()	4	1	1
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics	double[] getMax()	4	2	2
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics	double[] getMin()	6	3	3
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics	double[] getGeometricMean()	7	4	3
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics	void clear()	5	3	2
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics	void setMeanImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[])	4	3	1
org.apache.commons.math3.stat.descriptive.summary.Product	void increment(double)	5	1	1
org.apache.commons.math3.stat.descriptive.summary.Product	double getResult()	6	1	1
org.apache.commons.math3.stat.descriptive.summary.Product	double evaluate(double[],int,int)	3	1	1
org.apache.commons.math3.stat.descriptive.summary.Product	double evaluate(double[],double[],int,int)	7	3	3
org.apache.commons.math3.stat.descriptive.summary.Product	double evaluate(double[],double[])	4	2	1
org.apache.commons.math3.stat.descriptive.summary.Product	org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic copy()	2	2	null
org.apache.commons.math3.stat.descriptive.summary.SumOfSquares	void increment(double)	5	1	1
org.apache.commons.math3.stat.descriptive.summary.SumOfSquares	double getResult()	6	1	1
org.apache.commons.math3.stat.descriptive.summary.SumOfSquares	double evaluate(double[],int,int)	3	1	1
org.apache.commons.math3.stat.descriptive.summary.SumOfSquares	org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic copy()	2	2	null
org.apache.commons.math3.stat.descriptive.summary.Sum	void increment(double)	4	1	1
org.apache.commons.math3.stat.descriptive.summary.Sum	double getResult()	5	1	1
org.apache.commons.math3.stat.descriptive.summary.Sum	double evaluate(double[],int,int)	3	1	1
org.apache.commons.math3.stat.descriptive.summary.Sum	double evaluate(double[],double[],int,int)	2	1	1
org.apache.commons.math3.stat.descriptive.summary.Sum	org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic copy()	2	2	null
org.apache.commons.math3.stat.descriptive.summary.SumOfLogs	void increment(double)	5	1	1
org.apache.commons.math3.stat.descriptive.summary.SumOfLogs	double getResult()	7	1	1
org.apache.commons.math3.stat.descriptive.summary.SumOfLogs	double evaluate(double[],int,int)	3	1	1
org.apache.commons.math3.stat.descriptive.summary.SumOfLogs	org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic copy()	2	2	null
org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$9	double index(double,int)	4	2	2
org.apache.commons.math3.stat.descriptive.rank.Median	org.apache.commons.math3.stat.descriptive.rank.Percentile withNaNStrategy(org.apache.commons.math3.stat.ranking.NaNStrategy)	7	4	1
org.apache.commons.math3.stat.descriptive.rank.Median	org.apache.commons.math3.stat.descriptive.rank.Percentile withEstimationType(org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType)	6	3	1
org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$2	double index(double,int)	4	2	2
org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$10	double index(double,int)	4	2	2
org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$7	double index(double,int)	4	2	2
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile	boolean equals(java.lang.Object)	16	5	4
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile	void increment(double)	5	3	1
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile	java.lang.String toString()	4	2	1
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile	org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic copy()	2	2	null
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile	double getResult()	6	3	2
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile	org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$PSquareMarkers newMarkers(java.util.List,double)	15	11	2
org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$3	double index(double,int)	4	2	2
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Markers	double processDataPoint(double)	4	4	null
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Markers	double estimate(int)	4	4	null
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Markers	double height(int)	2	2	null
org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$8	double index(double,int)	4	2	2
org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$5	double index(double,int)	4	2	2
org.apache.commons.math3.stat.descriptive.rank.Percentile	void setData(double[])	3	2	1
org.apache.commons.math3.stat.descriptive.rank.Percentile	double evaluate(double[],int,int)	25	7	7
org.apache.commons.math3.stat.descriptive.rank.Percentile	double evaluate(double[],int,int,double)	11	6	5
org.apache.commons.math3.stat.descriptive.rank.Percentile	int medianOf3(double[],int,int)	2	1	1
org.apache.commons.math3.stat.descriptive.rank.Percentile	double getQuantile()	4	3	1
org.apache.commons.math3.stat.descriptive.rank.Percentile	void setQuantile(double)	7	3	3
org.apache.commons.math3.stat.descriptive.rank.Percentile	org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType getEstimationType()	6	3	3
org.apache.commons.math3.stat.descriptive.rank.Percentile	org.apache.commons.math3.stat.descriptive.rank.Percentile withEstimationType(org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType)	6	3	1
org.apache.commons.math3.stat.descriptive.rank.Percentile	org.apache.commons.math3.stat.ranking.NaNStrategy getNaNStrategy()	3	1	1
org.apache.commons.math3.stat.descriptive.rank.Percentile	org.apache.commons.math3.stat.descriptive.rank.Percentile withNaNStrategy(org.apache.commons.math3.stat.ranking.NaNStrategy)	7	4	1
org.apache.commons.math3.stat.descriptive.rank.Percentile	org.apache.commons.math3.util.PivotingStrategyInterface getPivotingStrategy()	3	3	null
org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$4	double index(double,int)	4	2	2
org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$1	double index(double,int)	4	2	2
org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$6	double index(double,int)	4	2	2
org.apache.commons.math3.stat.descriptive.rank.Max	void increment(double)	4	1	1
org.apache.commons.math3.stat.descriptive.rank.Max	double getResult()	5	1	1
org.apache.commons.math3.stat.descriptive.rank.Max	double evaluate(double[],int,int)	3	1	1
org.apache.commons.math3.stat.descriptive.rank.Max	org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic copy()	2	2	null
org.apache.commons.math3.stat.descriptive.rank.Min	void increment(double)	4	1	1
org.apache.commons.math3.stat.descriptive.rank.Min	double getResult()	5	1	1
org.apache.commons.math3.stat.descriptive.rank.Min	double evaluate(double[],int,int)	3	1	1
org.apache.commons.math3.stat.descriptive.rank.Min	org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic copy()	2	2	null
org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics$AggregatingSummaryStatistics	void addValue(double)	102	39	29
org.apache.commons.math3.stat.descriptive.moment.FirstMoment	void increment(double)	10	1	1
org.apache.commons.math3.stat.descriptive.moment.FirstMoment	void clear()	5	1	1
org.apache.commons.math3.stat.descriptive.moment.FirstMoment	double getResult()	5	1	1
org.apache.commons.math3.stat.descriptive.moment.FirstMoment	org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic copy()	2	2	null
org.apache.commons.math3.stat.descriptive.moment.Skewness	void increment(double)	3	1	1
org.apache.commons.math3.stat.descriptive.moment.Skewness	double getResult()	5	2	1
org.apache.commons.math3.stat.descriptive.moment.Skewness	double evaluate(double[],int,int)	3	1	1
org.apache.commons.math3.stat.descriptive.moment.Skewness	org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic copy()	2	2	null
org.apache.commons.math3.stat.descriptive.moment.ThirdMoment	void increment(double)	10	1	1
org.apache.commons.math3.stat.descriptive.moment.ThirdMoment	double getResult()	5	1	1
org.apache.commons.math3.stat.descriptive.moment.ThirdMoment	void clear()	5	1	1
org.apache.commons.math3.stat.descriptive.moment.ThirdMoment	org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic copy()	2	2	null
org.apache.commons.math3.stat.descriptive.moment.GeometricMean	void increment(double)	5	1	1
org.apache.commons.math3.stat.descriptive.moment.GeometricMean	double getResult()	7	1	1
org.apache.commons.math3.stat.descriptive.moment.GeometricMean	double evaluate(double[],int,int)	3	1	1
org.apache.commons.math3.stat.descriptive.moment.GeometricMean	org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic copy()	2	2	null
org.apache.commons.math3.stat.descriptive.moment.SemiVariance	double evaluate(double[],int,int)	3	1	1
org.apache.commons.math3.stat.descriptive.moment.SemiVariance	double evaluate(double[],double)	3	2	1
org.apache.commons.math3.stat.descriptive.moment.SemiVariance	double evaluate(double[],double,org.apache.commons.math3.stat.descriptive.moment.SemiVariance$Direction,boolean,int,int)	3	2	1
org.apache.commons.math3.stat.descriptive.moment.SemiVariance	void setVarianceDirection(org.apache.commons.math3.stat.descriptive.moment.SemiVariance$Direction)	7	5	2
org.apache.commons.math3.stat.descriptive.moment.Variance	double getResult()	4	2	1
org.apache.commons.math3.stat.descriptive.moment.Variance	double evaluate(double[])	11	6	4
org.apache.commons.math3.stat.descriptive.moment.Variance	double evaluate(double[],int,int)	3	1	1
org.apache.commons.math3.stat.descriptive.moment.Variance	double evaluate(double[],double[],int,int)	8	3	3
org.apache.commons.math3.stat.descriptive.moment.Variance	double evaluate(double[],double[])	4	2	1
org.apache.commons.math3.stat.descriptive.moment.Variance	org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic copy()	2	2	null
org.apache.commons.math3.stat.descriptive.moment.VectorialMean	void increment(double[])	7	6	1
org.apache.commons.math3.stat.descriptive.moment.VectorialMean	double[] getResult()	4	4	null
org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance	void increment(double[])	6	5	1
org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance	org.apache.commons.math3.linear.RealMatrix getResult()	4	4	null
org.apache.commons.math3.stat.descriptive.moment.Kurtosis	void increment(double)	4	1	1
org.apache.commons.math3.stat.descriptive.moment.Kurtosis	double getResult()	6	2	1
org.apache.commons.math3.stat.descriptive.moment.Kurtosis	double evaluate(double[],int,int)	3	1	1
org.apache.commons.math3.stat.descriptive.moment.Kurtosis	org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic copy()	2	2	null
org.apache.commons.math3.stat.descriptive.moment.SecondMoment	void increment(double)	10	1	1
org.apache.commons.math3.stat.descriptive.moment.SecondMoment	void clear()	5	1	1
org.apache.commons.math3.stat.descriptive.moment.SecondMoment	double getResult()	5	1	1
org.apache.commons.math3.stat.descriptive.moment.SecondMoment	org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic copy()	2	2	null
org.apache.commons.math3.stat.descriptive.moment.Mean	double getResult()	3	2	1
org.apache.commons.math3.stat.descriptive.moment.Mean	double evaluate(double[],int,int)	3	1	1
org.apache.commons.math3.stat.descriptive.moment.Mean	double evaluate(double[],double[],int,int)	7	3	3
org.apache.commons.math3.stat.descriptive.moment.Mean	double evaluate(double[],double[])	4	2	1
org.apache.commons.math3.stat.descriptive.moment.Mean	org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic copy()	2	2	null
org.apache.commons.math3.stat.descriptive.moment.FourthMoment	void increment(double)	11	2	1
org.apache.commons.math3.stat.descriptive.moment.FourthMoment	double getResult()	5	1	1
org.apache.commons.math3.stat.descriptive.moment.FourthMoment	void clear()	5	1	1
org.apache.commons.math3.stat.descriptive.moment.FourthMoment	org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic copy()	2	2	null
org.apache.commons.math3.stat.descriptive.moment.StandardDeviation	void increment(double)	2	2	null
org.apache.commons.math3.stat.descriptive.moment.StandardDeviation	double getResult()	7	3	3
org.apache.commons.math3.stat.descriptive.moment.StandardDeviation	double evaluate(double[])	6	3	2
org.apache.commons.math3.stat.descriptive.moment.StandardDeviation	double evaluate(double[],int,int)	3	1	1
org.apache.commons.math3.stat.descriptive.moment.StandardDeviation	org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic copy()	2	2	null
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics	void addValue(double)	28	16	10
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics	double getMean()	41	22	12
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics	double getGeometricMean()	8	4	4
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics	double getVariance()	13	9	4
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics	double getPopulationVariance()	2	1	1
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics	double getStandardDeviation()	28	13	7
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics	double getSkewness()	4	3	1
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics	double getKurtosis()	4	3	1
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics	double getMax()	7	5	2
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics	double getMin()	7	5	2
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics	long getN()	4	3	1
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics	double getSum()	7	5	2
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics	double getSumsq()	7	5	2
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics	void clear()	2	2	null
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics	int getWindowSize()	3	1	1
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics	void setWindowSize(int)	4	2	1
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics	double[] getValues()	2	2	null
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics	double getPercentile(double)	8	5	2
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics	void setMeanImpl(org.apache.commons.math3.stat.descriptive.UnivariateStatistic)	3	3	null
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics	void setPercentileImpl(org.apache.commons.math3.stat.descriptive.UnivariateStatistic)	3	1	1
org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues	double getMean()	10	4	3
org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues	double getStandardDeviation()	10	4	3
org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics	void addValue(double)	28	16	10
org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics	void clear()	2	2	null
org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics	long getN()	4	3	1
org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics	double getStandardDeviation()	20	9	5
org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics	double[] getValues()	2	2	null
org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics	int getWindowSize()	3	1	1
org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics	void setWindowSize(int)	4	2	1
org.apache.commons.math3.stat.descriptive.SummaryStatistics	org.apache.commons.math3.stat.descriptive.StatisticalSummary getSummary()	24	10	6
org.apache.commons.math3.stat.descriptive.SummaryStatistics	void addValue(double)	102	39	29
org.apache.commons.math3.stat.descriptive.SummaryStatistics	long getN()	7	4	2
org.apache.commons.math3.stat.descriptive.SummaryStatistics	double getSum()	5	4	1
org.apache.commons.math3.stat.descriptive.SummaryStatistics	double getSumsq()	3	3	null
org.apache.commons.math3.stat.descriptive.SummaryStatistics	double getMean()	26	12	8
org.apache.commons.math3.stat.descriptive.SummaryStatistics	double getStandardDeviation()	34	15	10
org.apache.commons.math3.stat.descriptive.SummaryStatistics	double getVariance()	9	6	2
org.apache.commons.math3.stat.descriptive.SummaryStatistics	double getPopulationVariance()	3	3	null
org.apache.commons.math3.stat.descriptive.SummaryStatistics	double getMax()	13	7	4
org.apache.commons.math3.stat.descriptive.SummaryStatistics	double getMin()	14	8	4
org.apache.commons.math3.stat.descriptive.SummaryStatistics	double getGeometricMean()	11	7	2
org.apache.commons.math3.stat.descriptive.SummaryStatistics	double getSumOfLogs()	2	2	null
org.apache.commons.math3.stat.descriptive.SummaryStatistics	void clear()	7	5	2
org.apache.commons.math3.stat.descriptive.SummaryStatistics	org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic getSumImpl()	2	1	1
org.apache.commons.math3.stat.descriptive.SummaryStatistics	void setMeanImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic)	4	3	1
org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics	double getMean()	10	4	3
org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics	long getN()	2	2	null
org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics	double getStandardDeviation()	10	4	3
org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics	org.apache.commons.math3.stat.descriptive.SummaryStatistics createContributingStatistics()	3	2	1
org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics	org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues aggregate(java.util.Collection)	4	4	null
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics	org.apache.commons.math3.stat.descriptive.StatisticalSummary getSummary()	24	10	6
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics	void addValue(double)	102	39	29
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics	long getN()	7	4	2
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics	double getSum()	5	4	1
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics	double getSumsq()	3	3	null
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics	double getMean()	26	12	8
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics	double getStandardDeviation()	34	15	10
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics	double getVariance()	9	6	2
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics	double getPopulationVariance()	3	3	null
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics	double getMax()	13	7	4
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics	double getMin()	14	8	4
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics	double getGeometricMean()	11	7	2
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics	void clear()	7	5	2
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics	org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic getSumImpl()	2	1	1
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics	void setMeanImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic)	4	3	1
org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics	void addValue(double[])	36	10	8
org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics	long getN()	3	1	1
org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics	double[] getSum()	4	2	2
org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics	double[] getSumSq()	4	2	2
org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics	double[] getSumLog()	4	2	2
org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics	double[] getMean()	14	5	5
org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics	double[] getStandardDeviation()	7	3	3
org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics	org.apache.commons.math3.linear.RealMatrix getCovariance()	4	1	1
org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics	double[] getMax()	4	2	2
org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics	double[] getMin()	6	3	3
org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics	double[] getGeometricMean()	7	4	3
org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics	void clear()	5	3	2
org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics	void setMeanImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[])	4	3	1
org.apache.commons.math3.stat.interval.ConfidenceInterval	double getLowerBound()	4	4	null
org.apache.commons.math3.stat.interval.ConfidenceInterval	double getUpperBound()	4	4	null
org.apache.commons.math3.stat.regression.SimpleRegression	void addData(double,double)	28	14	5
org.apache.commons.math3.stat.regression.SimpleRegression	void removeData(double,double)	3	3	null
org.apache.commons.math3.stat.regression.SimpleRegression	void addData(double[][])	12	7	4
org.apache.commons.math3.stat.regression.SimpleRegression	void removeData(double[][])	4	4	null
org.apache.commons.math3.stat.regression.SimpleRegression	long getN()	14	10	2
org.apache.commons.math3.stat.regression.SimpleRegression	double predict(double)	5	2	2
org.apache.commons.math3.stat.regression.SimpleRegression	double getIntercept()	7	5	1
org.apache.commons.math3.stat.regression.SimpleRegression	double getSlope()	11	7	2
org.apache.commons.math3.stat.regression.SimpleRegression	double getSumSquaredErrors()	11	7	2
org.apache.commons.math3.stat.regression.SimpleRegression	double getTotalSumSquares()	3	1	1
org.apache.commons.math3.stat.regression.SimpleRegression	double getRegressionSumSquares()	9	5	2
org.apache.commons.math3.stat.regression.SimpleRegression	double getMeanSquareError()	10	5	2
org.apache.commons.math3.stat.regression.SimpleRegression	double getR()	4	2	1
org.apache.commons.math3.stat.regression.SimpleRegression	double getRSquare()	12	8	2
org.apache.commons.math3.stat.regression.SimpleRegression	double getInterceptStdErr()	11	7	2
org.apache.commons.math3.stat.regression.SimpleRegression	double getSlopeStdErr()	16	10	3
org.apache.commons.math3.stat.regression.SimpleRegression	double getSlopeConfidenceInterval()	6	4	1
org.apache.commons.math3.stat.regression.SimpleRegression	double getSlopeConfidenceInterval(double)	2	1	1
org.apache.commons.math3.stat.regression.SimpleRegression	double getSignificance()	10	8	2
org.apache.commons.math3.stat.regression.SimpleRegression	org.apache.commons.math3.stat.regression.RegressionResults regress(int[])	13	2	2
org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression	void newSampleData(double[],double[][])	8	7	1
org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression	void newSampleData(double[],int,int)	13	11	2
org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression	org.apache.commons.math3.linear.RealMatrix calculateHat()	4	4	null
org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression	double calculateResidualSumOfSquares()	4	4	null
org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression	double calculateRSquared()	10	8	2
org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression	double calculateAdjustedRSquared()	4	2	2
org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression	void newXSampleData(double[][])	2	1	1
org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression	org.apache.commons.math3.linear.RealVector calculateBeta()	5	4	1
org.apache.commons.math3.stat.regression.MillerUpdatingRegression	boolean hasIntercept()	2	1	1
org.apache.commons.math3.stat.regression.MillerUpdatingRegression	long getN()	2	1	1
org.apache.commons.math3.stat.regression.MillerUpdatingRegression	void addObservation(double[],double)	14	8	2
org.apache.commons.math3.stat.regression.MillerUpdatingRegression	void addObservations(double[][],double[])	14	10	4
org.apache.commons.math3.stat.regression.MillerUpdatingRegression	double[] getPartialCorrelations(int)	3	1	1
org.apache.commons.math3.stat.regression.MillerUpdatingRegression	double getDiagonalOfHatMatrix(double[])	2	2	null
org.apache.commons.math3.stat.regression.MillerUpdatingRegression	org.apache.commons.math3.stat.regression.RegressionResults regress()	14	11	3
org.apache.commons.math3.stat.regression.RegressionResults	double getParameterEstimate(int)	4	1	1
org.apache.commons.math3.stat.regression.RegressionResults	double[] getParameterEstimates()	15	11	4
org.apache.commons.math3.stat.regression.RegressionResults	double getStdErrorOfEstimate(int)	4	1	1
org.apache.commons.math3.stat.regression.RegressionResults	double[] getStdErrorOfEstimates()	15	11	4
org.apache.commons.math3.stat.regression.RegressionResults	double getCovarianceOfParameters(int,int)	22	2	2
org.apache.commons.math3.stat.regression.RegressionResults	long getN()	3	1	1
org.apache.commons.math3.stat.regression.RegressionResults	double getRegressionSumSquares()	3	1	1
org.apache.commons.math3.stat.regression.RegressionResults	double getErrorSumSquares()	12	8	3
org.apache.commons.math3.stat.regression.RegressionResults	double getMeanSquareError()	14	10	3
org.apache.commons.math3.stat.regression.RegressionResults	double getRSquared()	15	10	4
org.apache.commons.math3.stat.regression.RegressionResults	double getAdjustedRSquared()	6	3	3
org.apache.commons.math3.stat.regression.GLSMultipleLinearRegression	void newSampleData(double[],double[][],double[][])	9	9	null
org.apache.commons.math3.stat.regression.GLSMultipleLinearRegression	void newCovarianceData(double[][])	2	2	null
org.apache.commons.math3.stat.regression.GLSMultipleLinearRegression	org.apache.commons.math3.linear.RealMatrix getOmegaInverse()	2	1	1
org.apache.commons.math3.stat.regression.GLSMultipleLinearRegression	org.apache.commons.math3.linear.RealVector calculateBeta()	2	2	null
org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest	double kolmogorovSmirnovTest(org.apache.commons.math3.distribution.RealDistribution,double[],boolean)	6	6	null
org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest	double kolmogorovSmirnovStatistic(org.apache.commons.math3.distribution.RealDistribution,double[])	6	6	null
org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest	double kolmogorovSmirnovTest(double[],double[],boolean)	7	4	2
org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest	double kolmogorovSmirnovTest(double[],double[])	3	3	null
org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest	double kolmogorovSmirnovStatistic(double[],double[])	12	8	3
org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest	boolean kolmogorovSmirnovTest(org.apache.commons.math3.distribution.RealDistribution,double[],double)	6	6	null
org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest	double bootstrap(double[],double[],int,boolean)	2	2	null
org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest	double exactP(double,int,int,boolean)	5	3	2
org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest	double approximateP(double,int,int)	2	1	1
org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest	double monteCarloP(double,int,int,boolean,int)	9	5	3
org.apache.commons.math3.stat.inference.ChiSquareTest	double chiSquare(double[],long[])	6	3	1
org.apache.commons.math3.stat.inference.ChiSquareTest	double chiSquareTest(double[],long[])	4	3	1
org.apache.commons.math3.stat.inference.ChiSquareTest	boolean chiSquareTest(double[],long[],double)	5	1	1
org.apache.commons.math3.stat.inference.ChiSquareTest	double chiSquare(long[][])	7	2	1
org.apache.commons.math3.stat.inference.ChiSquareTest	double chiSquareTest(long[][])	3	2	1
org.apache.commons.math3.stat.inference.ChiSquareTest	boolean chiSquareTest(long[][],double)	4	1	1
org.apache.commons.math3.stat.inference.ChiSquareTest	double chiSquareDataSetsComparison(long[],long[])	2	2	null
org.apache.commons.math3.stat.inference.ChiSquareTest	double chiSquareTestDataSetsComparison(long[],long[])	5	3	1
org.apache.commons.math3.stat.inference.ChiSquareTest	boolean chiSquareTestDataSetsComparison(long[],long[],double)	3	2	1
org.apache.commons.math3.stat.inference.BinomialTest	boolean binomialTest(int,int,double,org.apache.commons.math3.stat.inference.AlternativeHypothesis,double)	6	1	1
org.apache.commons.math3.stat.inference.BinomialTest	double binomialTest(int,int,double,org.apache.commons.math3.stat.inference.AlternativeHypothesis)	6	2	2
org.apache.commons.math3.stat.inference.TestUtils	boolean homoscedasticTTest(double[],double[],double)	2	1	1
org.apache.commons.math3.stat.inference.TestUtils	boolean pairedTTest(double[],double[],double)	2	1	1
org.apache.commons.math3.stat.inference.TestUtils	double pairedTTest(double[],double[])	2	1	1
org.apache.commons.math3.stat.inference.TestUtils	double t(double,double[])	5	2	1
org.apache.commons.math3.stat.inference.TestUtils	double t(double,org.apache.commons.math3.stat.descriptive.StatisticalSummary)	5	2	1
org.apache.commons.math3.stat.inference.TestUtils	double t(double[],double[])	3	2	1
org.apache.commons.math3.stat.inference.TestUtils	double t(org.apache.commons.math3.stat.descriptive.StatisticalSummary,org.apache.commons.math3.stat.descriptive.StatisticalSummary)	2	1	1
org.apache.commons.math3.stat.inference.TestUtils	boolean tTest(double,double[],double)	3	1	1
org.apache.commons.math3.stat.inference.TestUtils	double tTest(double,double[])	3	2	1
org.apache.commons.math3.stat.inference.TestUtils	boolean tTest(double,org.apache.commons.math3.stat.descriptive.StatisticalSummary,double)	3	1	1
org.apache.commons.math3.stat.inference.TestUtils	double tTest(double,org.apache.commons.math3.stat.descriptive.StatisticalSummary)	3	2	1
org.apache.commons.math3.stat.inference.TestUtils	boolean tTest(double[],double[],double)	4	1	1
org.apache.commons.math3.stat.inference.TestUtils	double tTest(double[],double[])	3	2	1
org.apache.commons.math3.stat.inference.TestUtils	boolean tTest(org.apache.commons.math3.stat.descriptive.StatisticalSummary,org.apache.commons.math3.stat.descriptive.StatisticalSummary,double)	4	1	1
org.apache.commons.math3.stat.inference.TestUtils	double tTest(org.apache.commons.math3.stat.descriptive.StatisticalSummary,org.apache.commons.math3.stat.descriptive.StatisticalSummary)	2	1	1
org.apache.commons.math3.stat.inference.TestUtils	double chiSquare(double[],long[])	5	2	1
org.apache.commons.math3.stat.inference.TestUtils	double chiSquare(long[][])	7	2	1
org.apache.commons.math3.stat.inference.TestUtils	boolean chiSquareTest(double[],long[],double)	5	1	1
org.apache.commons.math3.stat.inference.TestUtils	double chiSquareTest(double[],long[])	2	1	1
org.apache.commons.math3.stat.inference.TestUtils	boolean chiSquareTest(long[][],double)	4	1	1
org.apache.commons.math3.stat.inference.TestUtils	double chiSquareTest(long[][])	3	2	1
org.apache.commons.math3.stat.inference.TestUtils	double rootLogLikelihoodRatio(long,long,long,long)	11	1	1
org.apache.commons.math3.stat.inference.OneWayAnova	double anovaFValue(java.util.Collection)	5	2	1
org.apache.commons.math3.stat.inference.OneWayAnova	double anovaPValue(java.util.Collection)	3	2	1
org.apache.commons.math3.stat.inference.OneWayAnova	double anovaPValue(java.util.Collection,boolean)	2	1	1
org.apache.commons.math3.stat.inference.OneWayAnova	boolean anovaTest(java.util.Collection,double)	3	2	1
org.apache.commons.math3.stat.inference.TTest	double pairedTTest(double[],double[])	2	1	1
org.apache.commons.math3.stat.inference.TTest	boolean pairedTTest(double[],double[],double)	2	1	1
org.apache.commons.math3.stat.inference.TTest	double t(double,double[])	5	2	1
org.apache.commons.math3.stat.inference.TTest	double t(double,org.apache.commons.math3.stat.descriptive.StatisticalSummary)	5	2	1
org.apache.commons.math3.stat.inference.TTest	double t(double[],double[])	3	2	1
org.apache.commons.math3.stat.inference.TTest	double t(org.apache.commons.math3.stat.descriptive.StatisticalSummary,org.apache.commons.math3.stat.descriptive.StatisticalSummary)	2	1	1
org.apache.commons.math3.stat.inference.TTest	double tTest(double,double[])	3	2	1
org.apache.commons.math3.stat.inference.TTest	boolean tTest(double,double[],double)	3	1	1
org.apache.commons.math3.stat.inference.TTest	double tTest(double,org.apache.commons.math3.stat.descriptive.StatisticalSummary)	3	2	1
org.apache.commons.math3.stat.inference.TTest	boolean tTest(double,org.apache.commons.math3.stat.descriptive.StatisticalSummary,double)	3	1	1
org.apache.commons.math3.stat.inference.TTest	double tTest(double[],double[])	3	2	1
org.apache.commons.math3.stat.inference.TTest	boolean tTest(double[],double[],double)	4	1	1
org.apache.commons.math3.stat.inference.TTest	boolean homoscedasticTTest(double[],double[],double)	2	1	1
org.apache.commons.math3.stat.inference.TTest	double tTest(org.apache.commons.math3.stat.descriptive.StatisticalSummary,org.apache.commons.math3.stat.descriptive.StatisticalSummary)	2	1	1
org.apache.commons.math3.stat.inference.TTest	boolean tTest(org.apache.commons.math3.stat.descriptive.StatisticalSummary,org.apache.commons.math3.stat.descriptive.StatisticalSummary,double)	4	1	1
org.apache.commons.math3.stat.inference.GTest	double g(double[],long[])	3	3	null
org.apache.commons.math3.stat.inference.GTest	double gTest(double[],long[])	9	6	1
org.apache.commons.math3.stat.inference.GTest	boolean gTest(double[],long[],double)	4	4	null
org.apache.commons.math3.stat.inference.GTest	double gDataSetsComparison(long[],long[])	3	3	null
org.apache.commons.math3.stat.inference.GTest	double rootLogLikelihoodRatio(long,long,long,long)	11	1	1
org.apache.commons.math3.stat.inference.GTest	double gTestDataSetsComparison(long[],long[])	8	6	1
org.apache.commons.math3.stat.inference.GTest	boolean gTestDataSetsComparison(long[],long[],double)	4	4	null
org.apache.commons.math3.stat.inference.WilcoxonSignedRankTest	double wilcoxonSignedRank(double[],double[])	2	1	1
org.apache.commons.math3.stat.inference.WilcoxonSignedRankTest	double wilcoxonSignedRankTest(double[],double[],boolean)	15	2	2
org.apache.commons.math3.stat.inference.MannWhitneyUTest	double mannWhitneyUTest(double[],double[])	9	4	1
org.apache.commons.math3.stat.StatUtils	double sum(double[])	2	2	null
org.apache.commons.math3.stat.StatUtils	double sum(double[],int,int)	5	1	1
org.apache.commons.math3.stat.StatUtils	double sumSq(double[])	5	2	1
org.apache.commons.math3.stat.StatUtils	double sumSq(double[],int,int)	4	1	1
org.apache.commons.math3.stat.StatUtils	double product(double[])	4	1	1
org.apache.commons.math3.stat.StatUtils	double product(double[],int,int)	4	1	1
org.apache.commons.math3.stat.StatUtils	double sumLog(double[])	5	2	1
org.apache.commons.math3.stat.StatUtils	double sumLog(double[],int,int)	5	2	1
org.apache.commons.math3.stat.StatUtils	double mean(double[])	10	9	1
org.apache.commons.math3.stat.StatUtils	double mean(double[],int,int)	4	1	1
org.apache.commons.math3.stat.StatUtils	double geometricMean(double[])	2	1	1
org.apache.commons.math3.stat.StatUtils	double variance(double[])	10	9	1
org.apache.commons.math3.stat.StatUtils	double variance(double[],int,int)	5	2	1
org.apache.commons.math3.stat.StatUtils	double populationVariance(double[],int,int)	3	1	1
org.apache.commons.math3.stat.StatUtils	double max(double[])	6	3	1
org.apache.commons.math3.stat.StatUtils	double max(double[],int,int)	4	1	1
org.apache.commons.math3.stat.StatUtils	double min(double[])	6	3	1
org.apache.commons.math3.stat.StatUtils	double min(double[],int,int)	4	1	1
org.apache.commons.math3.stat.StatUtils	double percentile(double[],double)	4	1	1
org.apache.commons.math3.stat.StatUtils	double percentile(double[],int,int,double)	4	1	1
org.apache.commons.math3.stat.StatUtils	double meanDifference(double[],double[])	2	1	1
org.apache.commons.math3.stat.StatUtils	double varianceDifference(double[],double[],double)	3	1	1
org.apache.commons.math3.stat.StatUtils	double[] normalize(double[])	2	2	null
org.apache.commons.math3.stat.StatUtils	double[] mode(double[])	7	1	1
org.apache.commons.math3.stat.clustering.DBSCANClusterer	java.util.List cluster(java.util.Collection)	3	3	null
org.apache.commons.math3.stat.clustering.EuclideanDoublePoint	double distanceFrom(org.apache.commons.math3.stat.clustering.EuclideanDoublePoint)	3	1	1
org.apache.commons.math3.stat.clustering.EuclideanDoublePoint	double[] getPoint()	3	2	1
org.apache.commons.math3.stat.clustering.KMeansPlusPlusClusterer	java.util.List cluster(java.util.Collection,int,int)	4	4	null
org.apache.commons.math3.stat.clustering.EuclideanIntegerPoint	int[] getPoint()	4	3	1
org.apache.commons.math3.stat.clustering.EuclideanIntegerPoint	double distanceFrom(org.apache.commons.math3.stat.clustering.EuclideanIntegerPoint)	3	1	1
org.apache.commons.math3.stat.clustering.Cluster	java.util.List getPoints()	11	5	3
org.apache.commons.math3.stat.clustering.Cluster	org.apache.commons.math3.stat.clustering.Clusterable getCenter()	2	2	null
org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance	void increment(double,double)	4	3	1
org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance	double getResult()	4	3	1
org.apache.commons.math3.stat.correlation.SpearmansCorrelation	org.apache.commons.math3.linear.RealMatrix getCorrelationMatrix()	5	4	1
org.apache.commons.math3.stat.correlation.SpearmansCorrelation	double correlation(double[],double[])	4	4	null
org.apache.commons.math3.stat.correlation.KendallsCorrelation$1	int compare(java.lang.Object,java.lang.Object)	10	6	2
org.apache.commons.math3.stat.correlation.StorelessCovariance	void increment(double[])	3	3	null
org.apache.commons.math3.stat.correlation.StorelessCovariance	org.apache.commons.math3.linear.RealMatrix getCovarianceMatrix()	10	9	1
org.apache.commons.math3.stat.correlation.Covariance	org.apache.commons.math3.linear.RealMatrix getCovarianceMatrix()	8	7	1
org.apache.commons.math3.stat.correlation.Covariance	double covariance(double[],double[],boolean)	5	3	2
org.apache.commons.math3.stat.correlation.KendallsCorrelation	org.apache.commons.math3.linear.RealMatrix getCorrelationMatrix()	2	2	null
org.apache.commons.math3.stat.correlation.KendallsCorrelation	double correlation(double[],double[])	14	14	null
org.apache.commons.math3.stat.correlation.PearsonsCorrelation	org.apache.commons.math3.linear.RealMatrix getCorrelationMatrix()	10	6	2
org.apache.commons.math3.stat.correlation.PearsonsCorrelation	org.apache.commons.math3.linear.RealMatrix getCorrelationStandardErrors()	5	2	1
org.apache.commons.math3.stat.correlation.PearsonsCorrelation	org.apache.commons.math3.linear.RealMatrix getCorrelationPValues()	8	5	1
org.apache.commons.math3.stat.correlation.PearsonsCorrelation	double correlation(double[],double[])	4	3	1
org.apache.commons.math3.stat.ranking.NaturalRanking	double[] rank(double[])	40	9	7
org.apache.commons.math3.stat.Frequency	void addValue(java.lang.Comparable)	45	10	6
org.apache.commons.math3.stat.Frequency	void addValue(int)	18	8	5
org.apache.commons.math3.stat.Frequency	void addValue(long)	20	8	7
org.apache.commons.math3.stat.Frequency	void addValue(char)	6	2	2
org.apache.commons.math3.stat.Frequency	void incrementValue(int,long)	3	2	1
org.apache.commons.math3.stat.Frequency	void incrementValue(long,long)	3	1	1
org.apache.commons.math3.stat.Frequency	void incrementValue(char,long)	3	1	1
org.apache.commons.math3.stat.Frequency	void clear()	2	1	1
org.apache.commons.math3.stat.Frequency	long getSumFreq()	4	2	1
org.apache.commons.math3.stat.Frequency	long getCount(java.lang.Comparable)	8	5	2
org.apache.commons.math3.stat.Frequency	long getCount(int)	21	6	4
org.apache.commons.math3.stat.Frequency	long getCount(long)	3	1	1
org.apache.commons.math3.stat.Frequency	long getCount(char)	4	2	2
org.apache.commons.math3.stat.Frequency	int getUniqueCount()	12	4	3
org.apache.commons.math3.stat.Frequency	double getPct(java.lang.Comparable)	6	5	1
org.apache.commons.math3.stat.Frequency	double getPct(int)	4	3	1
org.apache.commons.math3.stat.Frequency	double getPct(char)	3	2	1
org.apache.commons.math3.stat.Frequency	long getCumFreq(java.lang.Comparable)	3	2	1
org.apache.commons.math3.stat.Frequency	long getCumFreq(int)	5	2	1
org.apache.commons.math3.stat.Frequency	long getCumFreq(char)	2	1	1
org.apache.commons.math3.stat.Frequency	double getCumPct(java.lang.Comparable)	13	6	3
org.apache.commons.math3.stat.Frequency	double getCumPct(int)	9	5	2
org.apache.commons.math3.stat.Frequency	double getCumPct(char)	4	2	1
org.apache.commons.math3.stat.Frequency	java.util.List getMode()	6	3	1
org.apache.commons.math3.genetics.ChromosomePair	org.apache.commons.math3.genetics.Chromosome getFirst()	9	7	2
org.apache.commons.math3.genetics.ChromosomePair	org.apache.commons.math3.genetics.Chromosome getSecond()	9	7	2
org.apache.commons.math3.genetics.UniformCrossover	org.apache.commons.math3.genetics.ChromosomePair crossover(org.apache.commons.math3.genetics.Chromosome,org.apache.commons.math3.genetics.Chromosome)	3	3	null
org.apache.commons.math3.genetics.ElitisticListPopulation	void setElitismRate(double)	3	3	null
org.apache.commons.math3.genetics.NPointCrossover	org.apache.commons.math3.genetics.ChromosomePair crossover(org.apache.commons.math3.genetics.Chromosome,org.apache.commons.math3.genetics.Chromosome)	5	5	null
org.apache.commons.math3.genetics.OrderedCrossover	org.apache.commons.math3.genetics.ChromosomePair crossover(org.apache.commons.math3.genetics.Chromosome,org.apache.commons.math3.genetics.Chromosome)	4	4	null
org.apache.commons.math3.genetics.GeneticAlgorithm	org.apache.commons.math3.genetics.Population evolve(org.apache.commons.math3.genetics.Population,org.apache.commons.math3.genetics.StoppingCondition)	3	3	null
org.apache.commons.math3.genetics.GeneticAlgorithm	int getGenerationsEvolved()	2	1	1
org.apache.commons.math3.genetics.CycleCrossover	org.apache.commons.math3.genetics.ChromosomePair crossover(org.apache.commons.math3.genetics.Chromosome,org.apache.commons.math3.genetics.Chromosome)	6	6	null
org.apache.commons.math3.primes.Primes	boolean isPrime(int)	3	1	1
org.apache.commons.math3.primes.Primes	int nextPrime(int)	12	1	1
org.apache.commons.math3.primes.Primes	java.util.List primeFactors(int)	2	1	1
org.apache.commons.math3.complex.RootsOfUnity	void computeRoots(int)	6	3	2
org.apache.commons.math3.complex.RootsOfUnity	int getNumberOfRoots()	4	1	1
org.apache.commons.math3.complex.Quaternion	org.apache.commons.math3.complex.Quaternion getConjugate()	5	3	1
org.apache.commons.math3.complex.Quaternion	org.apache.commons.math3.complex.Quaternion multiply(org.apache.commons.math3.complex.Quaternion,org.apache.commons.math3.complex.Quaternion)	5	4	1
org.apache.commons.math3.complex.Quaternion	org.apache.commons.math3.complex.Quaternion multiply(org.apache.commons.math3.complex.Quaternion)	2	1	1
org.apache.commons.math3.complex.Quaternion	double getNorm()	2	2	null
org.apache.commons.math3.complex.Quaternion	org.apache.commons.math3.complex.Quaternion normalize()	3	3	null
org.apache.commons.math3.complex.Quaternion	boolean equals(org.apache.commons.math3.complex.Quaternion,double)	11	2	2
org.apache.commons.math3.complex.Quaternion	boolean isUnitQuaternion(double)	3	2	1
org.apache.commons.math3.complex.Quaternion	boolean isPureQuaternion(double)	5	1	1
org.apache.commons.math3.complex.Quaternion	org.apache.commons.math3.complex.Quaternion getInverse()	2	1	1
org.apache.commons.math3.complex.Quaternion	double getQ0()	22	11	7
org.apache.commons.math3.complex.Quaternion	double getQ1()	21	11	7
org.apache.commons.math3.complex.Quaternion	double getQ2()	21	11	7
org.apache.commons.math3.complex.Quaternion	double getQ3()	21	11	7
org.apache.commons.math3.complex.Quaternion	double getScalarPart()	12	5	2
org.apache.commons.math3.complex.Quaternion	double[] getVectorPart()	8	4	2
org.apache.commons.math3.complex.ComplexField	org.apache.commons.math3.complex.ComplexField getInstance()	3	3	null
org.apache.commons.math3.complex.ComplexField	java.lang.Class getRuntimeClass()	2	2	null
org.apache.commons.math3.complex.ComplexField	java.lang.Object getOne()	13	11	2
org.apache.commons.math3.complex.ComplexField	java.lang.Object getZero()	8	6	1
org.apache.commons.math3.complex.ComplexUtils	org.apache.commons.math3.complex.Complex polar2Complex(double,double)	22	5	4
org.apache.commons.math3.complex.Complex	double abs()	8	5	2
org.apache.commons.math3.complex.Complex	org.apache.commons.math3.complex.Complex add(org.apache.commons.math3.complex.Complex)	9	6	3
org.apache.commons.math3.complex.Complex	org.apache.commons.math3.complex.Complex add(double)	4	3	1
org.apache.commons.math3.complex.Complex	org.apache.commons.math3.complex.Complex conjugate()	4	3	1
org.apache.commons.math3.complex.Complex	org.apache.commons.math3.complex.Complex divide(org.apache.commons.math3.complex.Complex)	19	12	3
org.apache.commons.math3.complex.Complex	org.apache.commons.math3.complex.Complex divide(double)	6	4	1
org.apache.commons.math3.complex.Complex	org.apache.commons.math3.complex.Complex reciprocal()	7	6	1
org.apache.commons.math3.complex.Complex	boolean equals(org.apache.commons.math3.complex.Complex,org.apache.commons.math3.complex.Complex,int)	4	3	1
org.apache.commons.math3.complex.Complex	boolean equals(org.apache.commons.math3.complex.Complex,org.apache.commons.math3.complex.Complex)	5	4	1
org.apache.commons.math3.complex.Complex	boolean equals(org.apache.commons.math3.complex.Complex,org.apache.commons.math3.complex.Complex,double)	5	2	2
org.apache.commons.math3.complex.Complex	boolean equalsWithRelativeTolerance(org.apache.commons.math3.complex.Complex,org.apache.commons.math3.complex.Complex,double)	4	2	1
org.apache.commons.math3.complex.Complex	double getImaginary()	54	22	12
org.apache.commons.math3.complex.Complex	double getReal()	55	22	13
org.apache.commons.math3.complex.Complex	boolean isNaN()	25	22	2
org.apache.commons.math3.complex.Complex	boolean isInfinite()	3	2	1
org.apache.commons.math3.complex.Complex	org.apache.commons.math3.complex.Complex multiply(org.apache.commons.math3.complex.Complex)	17	9	3
org.apache.commons.math3.complex.Complex	org.apache.commons.math3.complex.Complex multiply(int)	2	2	null
org.apache.commons.math3.complex.Complex	org.apache.commons.math3.complex.Complex multiply(double)	4	3	1
org.apache.commons.math3.complex.Complex	org.apache.commons.math3.complex.Complex negate()	4	4	null
org.apache.commons.math3.complex.Complex	org.apache.commons.math3.complex.Complex subtract(org.apache.commons.math3.complex.Complex)	9	6	3
org.apache.commons.math3.complex.Complex	org.apache.commons.math3.complex.Complex subtract(double)	4	3	1
org.apache.commons.math3.complex.Complex	org.apache.commons.math3.complex.Complex acos()	11	3	2
org.apache.commons.math3.complex.Complex	org.apache.commons.math3.complex.Complex asin()	10	3	1
org.apache.commons.math3.complex.Complex	org.apache.commons.math3.complex.Complex atan()	11	4	1
org.apache.commons.math3.complex.Complex	org.apache.commons.math3.complex.Complex cos()	10	3	1
org.apache.commons.math3.complex.Complex	org.apache.commons.math3.complex.Complex cosh()	10	3	1
org.apache.commons.math3.complex.Complex	org.apache.commons.math3.complex.Complex exp()	12	10	1
org.apache.commons.math3.complex.Complex	org.apache.commons.math3.complex.Complex log()	11	4	1
org.apache.commons.math3.complex.Complex	org.apache.commons.math3.complex.Complex pow(org.apache.commons.math3.complex.Complex)	35	9	2
org.apache.commons.math3.complex.Complex	org.apache.commons.math3.complex.Complex pow(double)	22	5	2
org.apache.commons.math3.complex.Complex	org.apache.commons.math3.complex.Complex sin()	10	3	1
org.apache.commons.math3.complex.Complex	org.apache.commons.math3.complex.Complex sinh()	10	3	1
org.apache.commons.math3.complex.Complex	org.apache.commons.math3.complex.Complex sqrt()	15	8	1
org.apache.commons.math3.complex.Complex	org.apache.commons.math3.complex.Complex sqrt1z()	2	2	null
org.apache.commons.math3.complex.Complex	org.apache.commons.math3.complex.Complex tan()	14	4	3
org.apache.commons.math3.complex.Complex	org.apache.commons.math3.complex.Complex tanh()	13	4	2
org.apache.commons.math3.complex.Complex	double getArgument()	19	3	3
org.apache.commons.math3.complex.Complex	java.util.List nthRoot(int)	9	5	1
org.apache.commons.math3.complex.Complex	org.apache.commons.math3.complex.Complex valueOf(double,double)	4	2	2
org.apache.commons.math3.dfp.DfpDec	org.apache.commons.math3.dfp.Dfp nextAfter(org.apache.commons.math3.dfp.Dfp)	30	2	2
org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFP	org.apache.commons.math3.dfp.Dfp getAbsoluteAccuracy()	2	1	1
org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFP	org.apache.commons.math3.dfp.Dfp getFunctionValueAccuracy()	2	1	1
org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFP	org.apache.commons.math3.dfp.Dfp solve(int,org.apache.commons.math3.dfp.UnivariateDfpFunction,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.analysis.solvers.AllowedSolution)	2	1	1
org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFP	org.apache.commons.math3.RealFieldElement getFunctionValueAccuracy()	2	1	1
org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFP	org.apache.commons.math3.RealFieldElement getAbsoluteAccuracy()	2	1	1
org.apache.commons.math3.dfp.DfpField	void setRoundingMode(org.apache.commons.math3.dfp.DfpField$RoundingMode)	26	3	3
org.apache.commons.math3.dfp.DfpField	int getIEEEFlags()	30	1	1
org.apache.commons.math3.dfp.DfpField	void clearIEEEFlags()	7	1	1
org.apache.commons.math3.dfp.DfpField	org.apache.commons.math3.dfp.Dfp newDfp()	2	2	null
org.apache.commons.math3.dfp.DfpField	org.apache.commons.math3.dfp.Dfp newDfp(int)	7	2	2
org.apache.commons.math3.dfp.DfpField	org.apache.commons.math3.dfp.Dfp newDfp(double)	134	34	29
org.apache.commons.math3.dfp.DfpField	org.apache.commons.math3.dfp.Dfp newDfp(java.lang.String)	900	24	24
org.apache.commons.math3.dfp.DfpField	org.apache.commons.math3.dfp.Dfp newDfp(byte,byte)	4	2	2
org.apache.commons.math3.dfp.DfpField	org.apache.commons.math3.dfp.Dfp getZero()	26	6	4
org.apache.commons.math3.dfp.DfpField	org.apache.commons.math3.dfp.Dfp getOne()	26	11	5
org.apache.commons.math3.dfp.DfpField	java.lang.Class getRuntimeClass()	2	2	null
org.apache.commons.math3.dfp.DfpField	org.apache.commons.math3.dfp.Dfp getPi()	9	4	2
org.apache.commons.math3.dfp.DfpField	java.lang.Object getOne()	13	11	2
org.apache.commons.math3.dfp.DfpField	java.lang.Object getZero()	8	6	1
org.apache.commons.math3.dfp.Dfp	boolean lessThan(org.apache.commons.math3.dfp.Dfp)	4	2	2
org.apache.commons.math3.dfp.Dfp	boolean negativeOrNull()	14	3	3
org.apache.commons.math3.dfp.Dfp	boolean strictlyNegative()	10	1	1
org.apache.commons.math3.dfp.Dfp	boolean positiveOrNull()	14	3	3
org.apache.commons.math3.dfp.Dfp	boolean strictlyPositive()	10	1	1
org.apache.commons.math3.dfp.Dfp	org.apache.commons.math3.dfp.Dfp abs()	4	2	2
org.apache.commons.math3.dfp.Dfp	boolean isNaN()	2	1	1
org.apache.commons.math3.dfp.Dfp	boolean isZero()	11	1	1
org.apache.commons.math3.dfp.Dfp	org.apache.commons.math3.dfp.Dfp rint()	3	1	1
org.apache.commons.math3.dfp.Dfp	org.apache.commons.math3.dfp.Dfp remainder(org.apache.commons.math3.dfp.Dfp)	3	1	1
org.apache.commons.math3.dfp.Dfp	int intValue()	6	1	1
org.apache.commons.math3.dfp.Dfp	int log10K()	5	1	1
org.apache.commons.math3.dfp.Dfp	org.apache.commons.math3.dfp.Dfp power10K(int)	6	1	1
org.apache.commons.math3.dfp.Dfp	int intLog10()	16	1	1
org.apache.commons.math3.dfp.Dfp	org.apache.commons.math3.dfp.Dfp power10(int)	20	1	1
org.apache.commons.math3.dfp.Dfp	org.apache.commons.math3.dfp.Dfp add(org.apache.commons.math3.dfp.Dfp)	148	9	5
org.apache.commons.math3.dfp.Dfp	org.apache.commons.math3.dfp.Dfp negate()	40	5	4
org.apache.commons.math3.dfp.Dfp	org.apache.commons.math3.dfp.Dfp subtract(org.apache.commons.math3.dfp.Dfp)	32	22	7
org.apache.commons.math3.dfp.Dfp	org.apache.commons.math3.dfp.Dfp multiply(org.apache.commons.math3.dfp.Dfp)	32	5	3
org.apache.commons.math3.dfp.Dfp	org.apache.commons.math3.dfp.Dfp multiply(int)	17	4	1
org.apache.commons.math3.dfp.Dfp	org.apache.commons.math3.dfp.Dfp divide(org.apache.commons.math3.dfp.Dfp)	56	22	5
org.apache.commons.math3.dfp.Dfp	org.apache.commons.math3.dfp.Dfp divide(int)	19	3	2
org.apache.commons.math3.dfp.Dfp	org.apache.commons.math3.dfp.Dfp reciprocal()	9	1	1
org.apache.commons.math3.dfp.Dfp	org.apache.commons.math3.dfp.Dfp sqrt()	17	3	3
org.apache.commons.math3.dfp.Dfp	org.apache.commons.math3.dfp.Dfp copysign(org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)	4	1	1
org.apache.commons.math3.dfp.Dfp	org.apache.commons.math3.dfp.Dfp nextAfter(org.apache.commons.math3.dfp.Dfp)	15	1	1
org.apache.commons.math3.dfp.Dfp	double toDouble()	44	21	21
org.apache.commons.math3.dfp.Dfp	double getReal()	107	20	19
org.apache.commons.math3.dfp.Dfp	org.apache.commons.math3.dfp.Dfp add(double)	4	2	2
org.apache.commons.math3.dfp.Dfp	org.apache.commons.math3.dfp.Dfp multiply(double)	4	1	1
org.apache.commons.math3.dfp.Dfp	org.apache.commons.math3.dfp.Dfp sin()	2	1	1
org.apache.commons.math3.dfp.DfpMath	org.apache.commons.math3.dfp.Dfp exp(org.apache.commons.math3.dfp.Dfp)	6	4	2
org.apache.commons.math3.dfp.DfpMath	org.apache.commons.math3.dfp.Dfp log(org.apache.commons.math3.dfp.Dfp)	8	3	3
org.apache.commons.math3.dfp.DfpMath	org.apache.commons.math3.dfp.Dfp pow(org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)	92	2	2
org.apache.commons.math3.dfp.DfpMath	org.apache.commons.math3.dfp.Dfp sin(org.apache.commons.math3.dfp.Dfp)	29	2	2
org.apache.commons.math3.dfp.DfpMath	org.apache.commons.math3.dfp.Dfp cos(org.apache.commons.math3.dfp.Dfp)	2	1	1
org.apache.commons.math3.dfp.DfpMath	org.apache.commons.math3.dfp.Dfp tan(org.apache.commons.math3.dfp.Dfp)	2	1	1
org.apache.commons.math3.dfp.DfpMath	org.apache.commons.math3.dfp.Dfp atan(org.apache.commons.math3.dfp.Dfp)	6	3	2
org.apache.commons.math3.dfp.DfpMath	org.apache.commons.math3.dfp.Dfp asin(org.apache.commons.math3.dfp.Dfp)	2	1	1
org.apache.commons.math3.dfp.DfpMath	org.apache.commons.math3.dfp.Dfp acos(org.apache.commons.math3.dfp.Dfp)	2	1	1
org.apache.commons.math3.optimization.fitting.GaussianFitter$ParameterGuesser$1	int compare(java.lang.Object,java.lang.Object)	10	6	2
org.apache.commons.math3.optimization.fitting.GaussianFitter$1	double value(double,double[])	6	4	1
org.apache.commons.math3.optimization.fitting.GaussianFitter$1	double[] gradient(double,double[])	4	4	null
org.apache.commons.math3.optimization.fitting.PolynomialFitter	double[] fit(double[])	4	4	null
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction	double[] value(double[])	2	1	1
org.apache.commons.math3.optimization.fitting.CurveFitter	void addObservedPoint(double,double)	22	6	4
org.apache.commons.math3.optimization.fitting.CurveFitter	void addObservedPoint(double,double,double)	8	8	null
org.apache.commons.math3.optimization.fitting.CurveFitter	double[] fit(org.apache.commons.math3.analysis.ParametricUnivariateFunction,double[])	5	3	2
org.apache.commons.math3.optimization.fitting.GaussianFitter	double[] fit()	9	9	null
org.apache.commons.math3.optimization.fitting.HarmonicFitter	double[] fit()	5	5	null
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction	double[] value(double[])	2	1	1
org.apache.commons.math3.optimization.linear.SimplexTableau	double[][] getData()	3	3	null
org.apache.commons.math3.optimization.SimpleValueChecker	boolean converged(int,org.apache.commons.math3.optimization.PointValuePair,org.apache.commons.math3.optimization.PointValuePair)	7	2	2
org.apache.commons.math3.optimization.LeastSquaresConverter	double value(double[])	16	4	4
org.apache.commons.math3.optimization.PointVectorValuePair	double[] getPoint()	7	6	1
org.apache.commons.math3.optimization.PointVectorValuePair	double[] getPointRef()	6	2	2
org.apache.commons.math3.optimization.PointVectorValuePair	double[] getValue()	7	2	2
org.apache.commons.math3.optimization.PointVectorValuePair	java.lang.Object getValue()	4	3	1
org.apache.commons.math3.optimization.BaseMultivariateVectorMultiStartOptimizer	org.apache.commons.math3.optimization.PointVectorValuePair[] getOptima()	2	1	1
org.apache.commons.math3.optimization.BaseMultivariateVectorMultiStartOptimizer	int getEvaluations()	2	1	1
org.apache.commons.math3.optimization.BaseMultivariateVectorMultiStartOptimizer	org.apache.commons.math3.optimization.PointVectorValuePair optimize(int,org.apache.commons.math3.analysis.MultivariateVectorFunction,double[],double[],double[])	2	2	null
org.apache.commons.math3.optimization.SimplePointChecker	boolean converged(int,org.apache.commons.math3.util.Pair,org.apache.commons.math3.util.Pair)	7	2	2
org.apache.commons.math3.optimization.SimpleVectorValueChecker	boolean converged(int,org.apache.commons.math3.optimization.PointVectorValuePair,org.apache.commons.math3.optimization.PointVectorValuePair)	7	2	2
org.apache.commons.math3.optimization.PointValuePair	double[] getPoint()	115	44	34
org.apache.commons.math3.optimization.PointValuePair	double[] getPointRef()	10	5	5
org.apache.commons.math3.optimization.BaseMultivariateVectorMultiStartOptimizer$1	int compare(java.lang.Object,java.lang.Object)	10	6	2
org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer$1	int compare(java.lang.Object,java.lang.Object)	10	6	2
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction	double value(double)	90	36	30
org.apache.commons.math3.optimization.direct.SimplexOptimizer	void setSimplex(org.apache.commons.math3.optimization.direct.AbstractSimplex)	27	27	null
org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapter	double value(double[])	16	4	4
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter	double[] unboundedToBounded(double[])	4	4	null
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter	double[] boundedToUnbounded(double[])	16	4	4
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter	double value(double[])	16	4	4
org.apache.commons.math3.optimization.direct.PowellOptimizer$LineSearch$1	double value(double)	90	36	30
org.apache.commons.math3.optimization.direct.SimplexOptimizer$1	double value(double[])	16	4	4
org.apache.commons.math3.optimization.direct.SimplexOptimizer$2	int compare(java.lang.Object,java.lang.Object)	10	6	2
org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer$1	int compare(java.lang.Object,java.lang.Object)	10	6	2
org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer	int getEvaluations()	4	2	2
org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer	org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair[] getOptima()	3	3	null
org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer	org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair optimize(int,org.apache.commons.math3.analysis.UnivariateFunction,org.apache.commons.math3.optimization.GoalType,double,double)	3	3	null
org.apache.commons.math3.optimization.univariate.SimpleUnivariateValueChecker	boolean converged(int,org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair,org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair)	7	2	2
org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair	double getPoint()	21	12	6
org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair	double getValue()	3	2	1
org.apache.commons.math3.optimization.univariate.BracketFinder	void search(org.apache.commons.math3.analysis.UnivariateFunction,org.apache.commons.math3.optimization.GoalType,double,double)	8	4	2
org.apache.commons.math3.optimization.univariate.BracketFinder	double getLo()	8	4	2
org.apache.commons.math3.optimization.univariate.BracketFinder	double getHi()	8	4	2
org.apache.commons.math3.optimization.univariate.BracketFinder	double getMid()	2	2	null
org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer	int getEvaluations()	5	2	2
org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer	org.apache.commons.math3.optimization.PointValuePair optimize(int,org.apache.commons.math3.analysis.MultivariateFunction,org.apache.commons.math3.optimization.GoalType,double[])	2	2	null
org.apache.commons.math3.geometry.enclosing.WelzlEncloser	org.apache.commons.math3.geometry.enclosing.EnclosingBall enclose(java.lang.Iterable)	6	6	null
org.apache.commons.math3.geometry.enclosing.EnclosingBall	org.apache.commons.math3.geometry.Point getCenter()	26	13	9
org.apache.commons.math3.geometry.enclosing.EnclosingBall	double getRadius()	34	23	5
org.apache.commons.math3.geometry.enclosing.EnclosingBall	org.apache.commons.math3.geometry.Point[] getSupport()	9	9	null
org.apache.commons.math3.geometry.enclosing.EnclosingBall	int getSupportSize()	10	10	null
org.apache.commons.math3.geometry.enclosing.EnclosingBall	boolean contains(org.apache.commons.math3.geometry.Point)	35	7	5
org.apache.commons.math3.geometry.enclosing.EnclosingBall	boolean contains(org.apache.commons.math3.geometry.Point,double)	7	3	2
org.apache.commons.math3.geometry.spherical.twod.Vertex	org.apache.commons.math3.geometry.spherical.twod.S2Point getLocation()	12	3	3
org.apache.commons.math3.geometry.spherical.twod.Vertex	org.apache.commons.math3.geometry.spherical.twod.Edge getIncoming()	3	3	null
org.apache.commons.math3.geometry.spherical.twod.Vertex	org.apache.commons.math3.geometry.spherical.twod.Edge getOutgoing()	15	4	4
org.apache.commons.math3.geometry.spherical.twod.SphericalPolygonsSet	java.util.List getBoundaryLoops()	12	10	1
org.apache.commons.math3.geometry.spherical.twod.SphericalPolygonsSet	org.apache.commons.math3.geometry.enclosing.EnclosingBall getEnclosingCap()	11	5	5
org.apache.commons.math3.geometry.spherical.twod.Circle	org.apache.commons.math3.geometry.spherical.twod.Circle getReverse()	2	2	null
org.apache.commons.math3.geometry.spherical.twod.Circle	double getTolerance()	3	2	1
org.apache.commons.math3.geometry.spherical.twod.Circle	org.apache.commons.math3.geometry.spherical.oned.S1Point toSubSpace(org.apache.commons.math3.geometry.Point)	3	1	1
org.apache.commons.math3.geometry.spherical.twod.Circle	double getPhase(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)	6	2	1
org.apache.commons.math3.geometry.spherical.twod.Circle	org.apache.commons.math3.geometry.euclidean.threed.Vector3D getPointAt(double)	7	4	3
org.apache.commons.math3.geometry.spherical.twod.Circle	org.apache.commons.math3.geometry.euclidean.threed.Vector3D getXAxis()	15	6	3
org.apache.commons.math3.geometry.spherical.twod.Circle	org.apache.commons.math3.geometry.euclidean.threed.Vector3D getYAxis()	15	6	3
org.apache.commons.math3.geometry.spherical.twod.Circle	org.apache.commons.math3.geometry.euclidean.threed.Vector3D getPole()	24	8	7
org.apache.commons.math3.geometry.spherical.twod.Circle	double getOffset(org.apache.commons.math3.geometry.Point)	6	1	1
org.apache.commons.math3.geometry.spherical.twod.Circle	boolean sameOrientationAs(org.apache.commons.math3.geometry.partitioning.Hyperplane)	2	1	1
org.apache.commons.math3.geometry.spherical.twod.S2Point	double getTheta()	2	2	null
org.apache.commons.math3.geometry.spherical.twod.S2Point	double getPhi()	5	4	1
org.apache.commons.math3.geometry.spherical.twod.S2Point	org.apache.commons.math3.geometry.euclidean.threed.Vector3D getVector()	22	8	6
org.apache.commons.math3.geometry.spherical.twod.S2Point	org.apache.commons.math3.geometry.Space getSpace()	3	1	1
org.apache.commons.math3.geometry.spherical.twod.S2Point	boolean isNaN()	2	2	null
org.apache.commons.math3.geometry.spherical.twod.S2Point	double distance(org.apache.commons.math3.geometry.Point)	12	4	4
org.apache.commons.math3.geometry.spherical.twod.SubCircle	org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane split(org.apache.commons.math3.geometry.partitioning.Hyperplane)	17	4	4
org.apache.commons.math3.geometry.spherical.twod.Sphere2D	int getDimension()	5	4	1
org.apache.commons.math3.geometry.spherical.twod.Sphere2D	org.apache.commons.math3.geometry.Space getSubSpace()	3	3	null
org.apache.commons.math3.geometry.spherical.twod.Circle$CircleTransform	org.apache.commons.math3.geometry.partitioning.Hyperplane apply(org.apache.commons.math3.geometry.partitioning.Hyperplane)	4	2	2
org.apache.commons.math3.geometry.spherical.twod.Edge	org.apache.commons.math3.geometry.spherical.twod.Vertex getStart()	3	3	null
org.apache.commons.math3.geometry.spherical.twod.Edge	org.apache.commons.math3.geometry.spherical.twod.Vertex getEnd()	9	4	4
org.apache.commons.math3.geometry.spherical.twod.Edge	double getLength()	8	4	2
org.apache.commons.math3.geometry.spherical.twod.Edge	org.apache.commons.math3.geometry.spherical.twod.Circle getCircle()	6	2	2
org.apache.commons.math3.geometry.spherical.twod.Edge	org.apache.commons.math3.geometry.euclidean.threed.Vector3D getPointAt(double)	3	1	1
org.apache.commons.math3.geometry.spherical.oned.SubLimitAngle	org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane split(org.apache.commons.math3.geometry.partitioning.Hyperplane)	3	1	1
org.apache.commons.math3.geometry.spherical.oned.ArcsSet$SubArcsIterator	boolean hasNext()	100	75	17
org.apache.commons.math3.geometry.spherical.oned.ArcsSet$SubArcsIterator	void remove()	2	2	null
org.apache.commons.math3.geometry.spherical.oned.ArcsSet$SubArcsIterator	java.lang.Object next()	104	77	16
org.apache.commons.math3.geometry.spherical.oned.LimitAngle	org.apache.commons.math3.geometry.spherical.oned.LimitAngle getReverse()	4	1	1
org.apache.commons.math3.geometry.spherical.oned.LimitAngle	org.apache.commons.math3.geometry.spherical.oned.SubLimitAngle wholeHyperplane()	8	4	3
org.apache.commons.math3.geometry.spherical.oned.LimitAngle	org.apache.commons.math3.geometry.spherical.oned.ArcsSet wholeSpace()	2	1	1
org.apache.commons.math3.geometry.spherical.oned.LimitAngle	boolean sameOrientationAs(org.apache.commons.math3.geometry.partitioning.Hyperplane)	2	1	1
org.apache.commons.math3.geometry.spherical.oned.LimitAngle	org.apache.commons.math3.geometry.spherical.oned.S1Point getLocation()	4	2	2
org.apache.commons.math3.geometry.spherical.oned.LimitAngle	double getTolerance()	2	1	1
org.apache.commons.math3.geometry.spherical.oned.Sphere1D	org.apache.commons.math3.geometry.spherical.oned.Sphere1D getInstance()	3	3	null
org.apache.commons.math3.geometry.spherical.oned.Sphere1D	int getDimension()	6	5	1
org.apache.commons.math3.geometry.spherical.oned.Sphere1D	org.apache.commons.math3.geometry.Space getSubSpace()	4	4	null
org.apache.commons.math3.geometry.spherical.oned.ArcsSet	java.util.List asList()	90	14	12
org.apache.commons.math3.geometry.spherical.oned.ArcsSet	org.apache.commons.math3.geometry.spherical.oned.ArcsSet$Split split(org.apache.commons.math3.geometry.spherical.oned.Arc)	30	11	6
org.apache.commons.math3.geometry.spherical.oned.Arc	double getInf()	41	15	7
org.apache.commons.math3.geometry.spherical.oned.Arc	double getSup()	41	15	7
org.apache.commons.math3.geometry.spherical.oned.Arc	double getSize()	4	3	1
org.apache.commons.math3.geometry.spherical.oned.Arc	double getBarycenter()	3	2	1
org.apache.commons.math3.geometry.spherical.oned.Arc	org.apache.commons.math3.geometry.partitioning.Region$Location checkPoint(double)	14	3	3
org.apache.commons.math3.geometry.spherical.oned.S1Point	double getAlpha()	8	4	3
org.apache.commons.math3.geometry.spherical.oned.S1Point	org.apache.commons.math3.geometry.euclidean.twod.Vector2D getVector()	2	1	1
org.apache.commons.math3.geometry.spherical.oned.S1Point	org.apache.commons.math3.geometry.Space getSpace()	3	1	1
org.apache.commons.math3.geometry.spherical.oned.S1Point	boolean isNaN()	2	2	null
org.apache.commons.math3.geometry.spherical.oned.S1Point	double distance(org.apache.commons.math3.geometry.Point)	2	2	null
org.apache.commons.math3.geometry.spherical.oned.ArcsSet$Split	org.apache.commons.math3.geometry.spherical.oned.ArcsSet getPlus()	17	7	4
org.apache.commons.math3.geometry.spherical.oned.ArcsSet$Split	org.apache.commons.math3.geometry.spherical.oned.ArcsSet getMinus()	17	7	4
org.apache.commons.math3.geometry.spherical.oned.ArcsSet$Split	org.apache.commons.math3.geometry.partitioning.Side getSide()	17	5	3
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet	org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][] getVertices()	28	17	6
org.apache.commons.math3.geometry.euclidean.twod.Segment	org.apache.commons.math3.geometry.euclidean.twod.Vector2D getStart()	10	4	2
org.apache.commons.math3.geometry.euclidean.twod.Segment	org.apache.commons.math3.geometry.euclidean.twod.Vector2D getEnd()	10	4	2
org.apache.commons.math3.geometry.euclidean.twod.Segment	double distance(org.apache.commons.math3.geometry.euclidean.twod.Vector2D)	4	1	1
org.apache.commons.math3.geometry.euclidean.twod.DiskGenerator	org.apache.commons.math3.geometry.enclosing.EnclosingBall ballOnSupport(java.util.List)	5	5	null
org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D	org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D getInstance()	4	4	null
org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D	int getDimension()	6	5	1
org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D	org.apache.commons.math3.geometry.Space getSubSpace()	3	3	null
org.apache.commons.math3.geometry.euclidean.twod.SubLine	java.util.List getSegments()	6	6	null
org.apache.commons.math3.geometry.euclidean.twod.SubLine	org.apache.commons.math3.geometry.euclidean.twod.Vector2D intersection(org.apache.commons.math3.geometry.euclidean.twod.SubLine,boolean)	14	7	7
org.apache.commons.math3.geometry.euclidean.twod.SubLine	org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane split(org.apache.commons.math3.geometry.partitioning.Hyperplane)	9	1	1
org.apache.commons.math3.geometry.euclidean.twod.Vector2D	double getX()	39	18	7
org.apache.commons.math3.geometry.euclidean.twod.Vector2D	double getY()	39	18	7
org.apache.commons.math3.geometry.euclidean.twod.Vector2D	double distance(org.apache.commons.math3.geometry.Vector)	16	11	5
org.apache.commons.math3.geometry.euclidean.twod.Vector2D	double crossProduct(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D)	3	1	1
org.apache.commons.math3.geometry.euclidean.twod.Line$LineTransform	org.apache.commons.math3.geometry.partitioning.Hyperplane apply(org.apache.commons.math3.geometry.partitioning.Hyperplane)	4	2	2
org.apache.commons.math3.geometry.euclidean.twod.hull.MonotoneChain$1	int compare(java.lang.Object,java.lang.Object)	10	6	2
org.apache.commons.math3.geometry.euclidean.twod.Line	org.apache.commons.math3.geometry.euclidean.oned.Vector1D toSubSpace(org.apache.commons.math3.geometry.Vector)	4	1	1
org.apache.commons.math3.geometry.euclidean.twod.Line	org.apache.commons.math3.geometry.euclidean.twod.Vector2D toSpace(org.apache.commons.math3.geometry.Vector)	6	1	1
org.apache.commons.math3.geometry.euclidean.twod.Line	org.apache.commons.math3.geometry.euclidean.oned.Vector1D toSubSpace(org.apache.commons.math3.geometry.Point)	2	1	1
org.apache.commons.math3.geometry.euclidean.twod.Line	org.apache.commons.math3.geometry.euclidean.twod.SubLine wholeHyperplane()	13	5	2
org.apache.commons.math3.geometry.euclidean.twod.Line	double getOffset(org.apache.commons.math3.geometry.Vector)	2	1	1
org.apache.commons.math3.geometry.euclidean.twod.Line	double getOffset(org.apache.commons.math3.geometry.Point)	2	1	1
org.apache.commons.math3.geometry.euclidean.twod.Line	boolean contains(org.apache.commons.math3.geometry.euclidean.twod.Vector2D)	4	1	1
org.apache.commons.math3.geometry.euclidean.twod.Line	double distance(org.apache.commons.math3.geometry.euclidean.twod.Vector2D)	2	1	1
org.apache.commons.math3.geometry.euclidean.twod.Line	boolean isParallelTo(org.apache.commons.math3.geometry.euclidean.twod.Line)	3	1	1
org.apache.commons.math3.geometry.euclidean.twod.Line	double getAngle()	2	1	1
org.apache.commons.math3.geometry.euclidean.twod.Line	double getOriginOffset()	2	1	1
org.apache.commons.math3.geometry.euclidean.twod.Line	org.apache.commons.math3.geometry.partitioning.Transform getTransform(double,double,double,double,double,double)	2	1	1
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$RotationTransform	org.apache.commons.math3.geometry.partitioning.Hyperplane apply(org.apache.commons.math3.geometry.partitioning.Hyperplane)	4	2	2
org.apache.commons.math3.geometry.euclidean.threed.Rotation	org.apache.commons.math3.geometry.euclidean.threed.Rotation revert()	5	4	1
org.apache.commons.math3.geometry.euclidean.threed.Rotation	double getQ0()	8	6	2
org.apache.commons.math3.geometry.euclidean.threed.Rotation	double getQ1()	8	6	2
org.apache.commons.math3.geometry.euclidean.threed.Rotation	double getQ2()	8	6	2
org.apache.commons.math3.geometry.euclidean.threed.Rotation	double getQ3()	8	6	2
org.apache.commons.math3.geometry.euclidean.threed.Rotation	org.apache.commons.math3.geometry.euclidean.threed.Vector3D getAxis()	4	1	1
org.apache.commons.math3.geometry.euclidean.threed.Rotation	org.apache.commons.math3.geometry.euclidean.threed.Vector3D getAxis(org.apache.commons.math3.geometry.euclidean.threed.RotationConvention)	29	7	6
org.apache.commons.math3.geometry.euclidean.threed.Rotation	double getAngle()	23	11	8
org.apache.commons.math3.geometry.euclidean.threed.Rotation	double[] getAngles(org.apache.commons.math3.geometry.euclidean.threed.RotationOrder)	2	1	1
org.apache.commons.math3.geometry.euclidean.threed.Rotation	double[] getAngles(org.apache.commons.math3.geometry.euclidean.threed.RotationOrder,org.apache.commons.math3.geometry.euclidean.threed.RotationConvention)	4	2	2
org.apache.commons.math3.geometry.euclidean.threed.Rotation	org.apache.commons.math3.geometry.euclidean.threed.Vector3D applyTo(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)	72	21	19
org.apache.commons.math3.geometry.euclidean.threed.Rotation	org.apache.commons.math3.geometry.euclidean.threed.Vector3D applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)	10	4	1
org.apache.commons.math3.geometry.euclidean.threed.Rotation	org.apache.commons.math3.geometry.euclidean.threed.Rotation applyTo(org.apache.commons.math3.geometry.euclidean.threed.Rotation)	3	2	1
org.apache.commons.math3.geometry.euclidean.threed.Rotation	org.apache.commons.math3.geometry.euclidean.threed.Rotation compose(org.apache.commons.math3.geometry.euclidean.threed.Rotation,org.apache.commons.math3.geometry.euclidean.threed.RotationConvention)	9	5	4
org.apache.commons.math3.geometry.euclidean.threed.Rotation	org.apache.commons.math3.geometry.euclidean.threed.Rotation composeInverse(org.apache.commons.math3.geometry.euclidean.threed.Rotation,org.apache.commons.math3.geometry.euclidean.threed.RotationConvention)	3	2	1
org.apache.commons.math3.geometry.euclidean.threed.Rotation	double distance(org.apache.commons.math3.geometry.euclidean.threed.Rotation,org.apache.commons.math3.geometry.euclidean.threed.Rotation)	2	2	null
org.apache.commons.math3.geometry.euclidean.threed.RotationConvention	org.apache.commons.math3.geometry.euclidean.threed.RotationConvention[] values()	6	6	null
org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates	org.apache.commons.math3.geometry.euclidean.threed.Vector3D getCartesian()	14	4	4
org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates	double getR()	8	2	2
org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates	double getTheta()	6	2	2
org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates	double getPhi()	8	2	2
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D	org.apache.commons.math3.RealFieldElement getX()	22	9	6
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D	org.apache.commons.math3.RealFieldElement getY()	22	9	6
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D	org.apache.commons.math3.RealFieldElement getZ()	22	9	6
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D	org.apache.commons.math3.geometry.euclidean.threed.Vector3D toVector3D()	9	3	2
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D	org.apache.commons.math3.RealFieldElement getNorm1()	5	1	1
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D	org.apache.commons.math3.RealFieldElement getNorm()	12	5	4
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D	org.apache.commons.math3.RealFieldElement getNormSq()	5	1	1
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D	org.apache.commons.math3.RealFieldElement getNormInf()	26	2	1
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D	org.apache.commons.math3.RealFieldElement getAlpha()	3	1	1
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D	org.apache.commons.math3.RealFieldElement getDelta()	4	1	1
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D	org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D add(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)	3	2	1
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D	org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D subtract(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)	3	2	1
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D	org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D normalize()	3	2	1
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D	org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D orthogonal()	6	2	1
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D	org.apache.commons.math3.RealFieldElement angle(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)	9	4	3
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D	org.apache.commons.math3.RealFieldElement angle(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)	4	1	1
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D	org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D negate()	8	6	2
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D	org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D scalarMultiply(org.apache.commons.math3.RealFieldElement)	4	2	2
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D	org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D scalarMultiply(double)	4	2	2
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D	boolean isNaN()	5	1	1
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D	boolean isInfinite()	5	1	1
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D	org.apache.commons.math3.RealFieldElement dotProduct(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)	21	12	2
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D	org.apache.commons.math3.RealFieldElement dotProduct(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)	2	2	null
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D	org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D crossProduct(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)	7	6	1
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D	org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D crossProduct(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)	2	2	null
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D	org.apache.commons.math3.RealFieldElement distance1(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)	2	1	1
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D	org.apache.commons.math3.RealFieldElement distance(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)	4	2	2
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D	org.apache.commons.math3.RealFieldElement distanceInf(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)	9	1	1
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D	org.apache.commons.math3.RealFieldElement distanceInf(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)	7	1	1
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D	org.apache.commons.math3.RealFieldElement distanceSq(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)	2	1	1
org.apache.commons.math3.geometry.euclidean.threed.Segment	org.apache.commons.math3.geometry.euclidean.threed.Vector3D getStart()	14	4	2
org.apache.commons.math3.geometry.euclidean.threed.Segment	org.apache.commons.math3.geometry.euclidean.threed.Vector3D getEnd()	14	4	2
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation	org.apache.commons.math3.geometry.euclidean.threed.FieldRotation revert()	8	7	1
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation	org.apache.commons.math3.RealFieldElement getQ0()	58	21	7
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation	org.apache.commons.math3.RealFieldElement getQ1()	58	21	7
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation	org.apache.commons.math3.RealFieldElement getQ2()	58	21	7
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation	org.apache.commons.math3.RealFieldElement getQ3()	58	21	7
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation	org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D getAxis()	8	2	2
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation	org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D getAxis(org.apache.commons.math3.geometry.euclidean.threed.RotationConvention)	46	12	10
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation	org.apache.commons.math3.RealFieldElement getAngle()	42	20	14
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation	org.apache.commons.math3.RealFieldElement[] getAngles(org.apache.commons.math3.geometry.euclidean.threed.RotationOrder)	4	2	2
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation	org.apache.commons.math3.RealFieldElement[] getAngles(org.apache.commons.math3.geometry.euclidean.threed.RotationOrder,org.apache.commons.math3.geometry.euclidean.threed.RotationConvention)	8	4	4
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation	org.apache.commons.math3.RealFieldElement[][] getMatrix()	2	2	null
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation	org.apache.commons.math3.geometry.euclidean.threed.Rotation toRotation()	4	1	1
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation	org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D applyTo(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)	151	39	32
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation	org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D applyTo(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)	2	2	null
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation	void applyTo(org.apache.commons.math3.RealFieldElement[],org.apache.commons.math3.RealFieldElement[])	4	4	null
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation	void applyTo(double[],org.apache.commons.math3.RealFieldElement[])	2	2	null
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation	org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D applyTo(org.apache.commons.math3.geometry.euclidean.threed.Rotation,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)	2	2	null
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation	org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)	38	12	10
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation	org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)	2	2	null
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation	void applyInverseTo(org.apache.commons.math3.RealFieldElement[],org.apache.commons.math3.RealFieldElement[])	4	4	null
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation	void applyInverseTo(double[],org.apache.commons.math3.RealFieldElement[])	2	2	null
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation	org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.Rotation,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)	2	2	null
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation	org.apache.commons.math3.geometry.euclidean.threed.FieldRotation applyTo(org.apache.commons.math3.geometry.euclidean.threed.FieldRotation)	6	4	2
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation	org.apache.commons.math3.geometry.euclidean.threed.FieldRotation compose(org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,org.apache.commons.math3.geometry.euclidean.threed.RotationConvention)	15	10	5
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation	org.apache.commons.math3.geometry.euclidean.threed.FieldRotation applyTo(org.apache.commons.math3.geometry.euclidean.threed.Rotation)	2	2	null
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation	org.apache.commons.math3.geometry.euclidean.threed.FieldRotation compose(org.apache.commons.math3.geometry.euclidean.threed.Rotation,org.apache.commons.math3.geometry.euclidean.threed.RotationConvention)	4	4	null
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation	org.apache.commons.math3.geometry.euclidean.threed.FieldRotation applyTo(org.apache.commons.math3.geometry.euclidean.threed.Rotation,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation)	2	2	null
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation	org.apache.commons.math3.geometry.euclidean.threed.FieldRotation applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.FieldRotation)	2	2	null
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation	org.apache.commons.math3.geometry.euclidean.threed.FieldRotation composeInverse(org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,org.apache.commons.math3.geometry.euclidean.threed.RotationConvention)	7	6	1
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation	org.apache.commons.math3.geometry.euclidean.threed.FieldRotation applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.Rotation)	2	2	null
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation	org.apache.commons.math3.geometry.euclidean.threed.FieldRotation composeInverse(org.apache.commons.math3.geometry.euclidean.threed.Rotation,org.apache.commons.math3.geometry.euclidean.threed.RotationConvention)	4	4	null
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation	org.apache.commons.math3.geometry.euclidean.threed.FieldRotation applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.Rotation,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation)	2	2	null
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation	org.apache.commons.math3.RealFieldElement distance(org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation)	2	2	null
org.apache.commons.math3.geometry.euclidean.threed.SphereGenerator	org.apache.commons.math3.geometry.enclosing.EnclosingBall ballOnSupport(java.util.List)	7	7	null
org.apache.commons.math3.geometry.euclidean.threed.Vector3D	double getX()	52	26	17
org.apache.commons.math3.geometry.euclidean.threed.Vector3D	double getY()	52	26	17
org.apache.commons.math3.geometry.euclidean.threed.Vector3D	double getZ()	54	27	18
org.apache.commons.math3.geometry.euclidean.threed.Vector3D	double[] toArray()	3	2	1
org.apache.commons.math3.geometry.euclidean.threed.Vector3D	double getNorm1()	3	2	1
org.apache.commons.math3.geometry.euclidean.threed.Vector3D	double getNorm()	15	11	4
org.apache.commons.math3.geometry.euclidean.threed.Vector3D	double getNormSq()	2	1	1
org.apache.commons.math3.geometry.euclidean.threed.Vector3D	double getNormInf()	3	2	1
org.apache.commons.math3.geometry.euclidean.threed.Vector3D	double getAlpha()	4	1	1
org.apache.commons.math3.geometry.euclidean.threed.Vector3D	double getDelta()	4	1	1
org.apache.commons.math3.geometry.euclidean.threed.Vector3D	org.apache.commons.math3.geometry.euclidean.threed.Vector3D add(org.apache.commons.math3.geometry.Vector)	14	9	4
org.apache.commons.math3.geometry.euclidean.threed.Vector3D	org.apache.commons.math3.geometry.euclidean.threed.Vector3D subtract(org.apache.commons.math3.geometry.Vector)	16	9	3
org.apache.commons.math3.geometry.euclidean.threed.Vector3D	org.apache.commons.math3.geometry.euclidean.threed.Vector3D normalize()	12	4	2
org.apache.commons.math3.geometry.euclidean.threed.Vector3D	org.apache.commons.math3.geometry.euclidean.threed.Vector3D orthogonal()	9	5	1
org.apache.commons.math3.geometry.euclidean.threed.Vector3D	double angle(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)	22	8	6
org.apache.commons.math3.geometry.euclidean.threed.Vector3D	org.apache.commons.math3.geometry.euclidean.threed.Vector3D negate()	5	4	1
org.apache.commons.math3.geometry.euclidean.threed.Vector3D	org.apache.commons.math3.geometry.euclidean.threed.Vector3D scalarMultiply(double)	10	5	5
org.apache.commons.math3.geometry.euclidean.threed.Vector3D	boolean isNaN()	5	1	1
org.apache.commons.math3.geometry.euclidean.threed.Vector3D	boolean isInfinite()	5	1	1
org.apache.commons.math3.geometry.euclidean.threed.Vector3D	double dotProduct(org.apache.commons.math3.geometry.Vector)	3	3	null
org.apache.commons.math3.geometry.euclidean.threed.Vector3D	org.apache.commons.math3.geometry.euclidean.threed.Vector3D crossProduct(org.apache.commons.math3.geometry.Vector)	2	2	null
org.apache.commons.math3.geometry.euclidean.threed.Vector3D	double distance(org.apache.commons.math3.geometry.Vector)	68	25	15
org.apache.commons.math3.geometry.euclidean.threed.Vector3D	double dotProduct(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)	15	9	3
org.apache.commons.math3.geometry.euclidean.threed.Vector3D	org.apache.commons.math3.geometry.euclidean.threed.Vector3D crossProduct(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)	13	10	3
org.apache.commons.math3.geometry.euclidean.threed.Vector3D	double distance1(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)	3	1	1
org.apache.commons.math3.geometry.euclidean.threed.Vector3D	double distance(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)	5	2	2
org.apache.commons.math3.geometry.euclidean.threed.Vector3D	double distanceInf(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)	3	1	1
org.apache.commons.math3.geometry.euclidean.threed.Vector3D	double distanceSq(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)	3	1	1
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$TranslationTransform	org.apache.commons.math3.geometry.partitioning.Hyperplane apply(org.apache.commons.math3.geometry.partitioning.Hyperplane)	4	2	2
org.apache.commons.math3.geometry.euclidean.threed.SubLine	java.util.List getSegments()	6	6	null
org.apache.commons.math3.geometry.euclidean.threed.SubLine	org.apache.commons.math3.geometry.euclidean.threed.Vector3D intersection(org.apache.commons.math3.geometry.euclidean.threed.SubLine,boolean)	14	7	7
org.apache.commons.math3.geometry.euclidean.threed.SubPlane	org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane split(org.apache.commons.math3.geometry.partitioning.Hyperplane)	3	1	1
org.apache.commons.math3.geometry.euclidean.threed.Plane	org.apache.commons.math3.geometry.euclidean.threed.Vector3D getNormal()	7	5	2
org.apache.commons.math3.geometry.euclidean.threed.Plane	boolean isSimilarTo(org.apache.commons.math3.geometry.euclidean.threed.Plane)	4	1	1
org.apache.commons.math3.geometry.euclidean.threed.Plane	org.apache.commons.math3.geometry.euclidean.threed.Plane rotate(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Rotation)	3	1	1
org.apache.commons.math3.geometry.euclidean.threed.Plane	org.apache.commons.math3.geometry.euclidean.threed.Plane translate(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)	3	1	1
org.apache.commons.math3.geometry.euclidean.threed.Plane	org.apache.commons.math3.geometry.euclidean.threed.Vector3D intersection(org.apache.commons.math3.geometry.euclidean.threed.Line)	3	2	1
org.apache.commons.math3.geometry.euclidean.threed.Plane	org.apache.commons.math3.geometry.euclidean.threed.Line intersection(org.apache.commons.math3.geometry.euclidean.threed.Plane)	2	1	1
org.apache.commons.math3.geometry.euclidean.threed.Plane	boolean contains(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)	26	6	4
org.apache.commons.math3.geometry.euclidean.threed.Plane	double getOffset(org.apache.commons.math3.geometry.Vector)	5	2	1
org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D	org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D getInstance()	3	3	null
org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D	int getDimension()	6	5	1
org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D	org.apache.commons.math3.geometry.Space getSubSpace()	3	3	null
org.apache.commons.math3.geometry.euclidean.threed.Line	org.apache.commons.math3.geometry.euclidean.threed.Vector3D getDirection()	6	3	2
org.apache.commons.math3.geometry.euclidean.threed.Line	boolean isSimilarTo(org.apache.commons.math3.geometry.euclidean.threed.Line)	2	1	1
org.apache.commons.math3.geometry.euclidean.threed.Line	boolean contains(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)	6	3	2
org.apache.commons.math3.geometry.euclidean.threed.Line	double distance(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)	2	1	1
org.apache.commons.math3.geometry.euclidean.threed.Line	double distance(org.apache.commons.math3.geometry.euclidean.threed.Line)	7	1	1
org.apache.commons.math3.geometry.euclidean.threed.Line	org.apache.commons.math3.geometry.euclidean.threed.Vector3D closestPoint(org.apache.commons.math3.geometry.euclidean.threed.Line)	7	1	1
org.apache.commons.math3.geometry.euclidean.threed.Line	org.apache.commons.math3.geometry.euclidean.threed.Vector3D intersection(org.apache.commons.math3.geometry.euclidean.threed.Line)	7	1	1
org.apache.commons.math3.geometry.euclidean.oned.SubOrientedPoint	org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane split(org.apache.commons.math3.geometry.partitioning.Hyperplane)	3	1	1
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet	double getInf()	4	3	1
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet	double getSup()	4	3	1
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet	java.util.List asList()	3	2	1
org.apache.commons.math3.geometry.euclidean.oned.Interval	double getInf()	8	4	2
org.apache.commons.math3.geometry.euclidean.oned.Interval	double getSup()	8	4	2
org.apache.commons.math3.geometry.euclidean.oned.Interval	double getSize()	3	3	null
org.apache.commons.math3.geometry.euclidean.oned.Interval	double getBarycenter()	2	2	null
org.apache.commons.math3.geometry.euclidean.oned.Interval	org.apache.commons.math3.geometry.partitioning.Region$Location checkPoint(double,double)	14	3	3
org.apache.commons.math3.geometry.euclidean.oned.Vector1D	double getX()	10	6	2
org.apache.commons.math3.geometry.euclidean.oned.Vector1D	double getNorm1()	3	2	1
org.apache.commons.math3.geometry.euclidean.oned.Vector1D	double getNorm()	5	4	1
org.apache.commons.math3.geometry.euclidean.oned.Vector1D	double getNormSq()	2	1	1
org.apache.commons.math3.geometry.euclidean.oned.Vector1D	double getNormInf()	3	2	1
org.apache.commons.math3.geometry.euclidean.oned.Vector1D	org.apache.commons.math3.geometry.euclidean.oned.Vector1D add(org.apache.commons.math3.geometry.Vector)	2	1	1
org.apache.commons.math3.geometry.euclidean.oned.Vector1D	org.apache.commons.math3.geometry.euclidean.oned.Vector1D subtract(org.apache.commons.math3.geometry.Vector)	5	4	1
org.apache.commons.math3.geometry.euclidean.oned.Vector1D	org.apache.commons.math3.geometry.euclidean.oned.Vector1D normalize()	2	1	1
org.apache.commons.math3.geometry.euclidean.oned.Vector1D	org.apache.commons.math3.geometry.euclidean.oned.Vector1D scalarMultiply(double)	2	1	1
org.apache.commons.math3.geometry.euclidean.oned.Vector1D	boolean isNaN()	3	1	1
org.apache.commons.math3.geometry.euclidean.oned.Vector1D	boolean isInfinite()	4	1	1
org.apache.commons.math3.geometry.euclidean.oned.Vector1D	double distance1(org.apache.commons.math3.geometry.Vector)	3	1	1
org.apache.commons.math3.geometry.euclidean.oned.Vector1D	double distance(org.apache.commons.math3.geometry.euclidean.oned.Vector1D,org.apache.commons.math3.geometry.euclidean.oned.Vector1D)	5	2	2
org.apache.commons.math3.geometry.euclidean.oned.Vector1D	double distanceInf(org.apache.commons.math3.geometry.euclidean.oned.Vector1D,org.apache.commons.math3.geometry.euclidean.oned.Vector1D)	3	1	1
org.apache.commons.math3.geometry.euclidean.oned.Vector1D	double distanceSq(org.apache.commons.math3.geometry.euclidean.oned.Vector1D,org.apache.commons.math3.geometry.euclidean.oned.Vector1D)	3	1	1
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator	boolean hasNext()	100	75	17
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator	void remove()	2	2	null
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator	java.lang.Object next()	104	77	16
org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D	org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D getInstance()	4	4	null
org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D	int getDimension()	6	5	1
org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D	org.apache.commons.math3.geometry.Space getSubSpace()	4	4	null
org.apache.commons.math3.geometry.partitioning.BSPTree	org.apache.commons.math3.geometry.partitioning.BSPTree split(org.apache.commons.math3.geometry.partitioning.SubHyperplane)	2	2	null
org.apache.commons.math3.geometry.partitioning.BoundaryProjection	double getOffset()	25	4	2
org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane	org.apache.commons.math3.geometry.partitioning.SubHyperplane getPlus()	6	2	1
org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane	org.apache.commons.math3.geometry.partitioning.SubHyperplane getMinus()	15	3	2
org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane	org.apache.commons.math3.geometry.partitioning.Side getSide()	8	3	2
org.apache.commons.math3.geometry.partitioning.AbstractRegion$1	int compare(java.lang.Object,java.lang.Object)	10	6	2
org.apache.commons.math3.geometry.partitioning.RegionFactory	org.apache.commons.math3.geometry.partitioning.Region buildConvex(org.apache.commons.math3.geometry.partitioning.Hyperplane[])	5	4	1
org.apache.commons.math3.geometry.partitioning.RegionFactory	org.apache.commons.math3.geometry.partitioning.Region union(org.apache.commons.math3.geometry.partitioning.Region,org.apache.commons.math3.geometry.partitioning.Region)	14	11	2
org.apache.commons.math3.geometry.partitioning.RegionFactory	org.apache.commons.math3.geometry.partitioning.Region intersection(org.apache.commons.math3.geometry.partitioning.Region,org.apache.commons.math3.geometry.partitioning.Region)	7	6	1
org.apache.commons.math3.geometry.partitioning.RegionFactory	org.apache.commons.math3.geometry.partitioning.Region difference(org.apache.commons.math3.geometry.partitioning.Region,org.apache.commons.math3.geometry.partitioning.Region)	15	12	1
org.apache.commons.math3.geometry.partitioning.RegionFactory	org.apache.commons.math3.geometry.partitioning.Region getComplement(org.apache.commons.math3.geometry.partitioning.Region)	12	11	1
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree	boolean delete(java.lang.Comparable)	2	1	1
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree	int size()	3	3	null
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree	org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node getNotSmaller(java.lang.Comparable)	6	4	2
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree	org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node getNotLarger(java.lang.Comparable)	4	2	2
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node	org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node getPrevious()	11	2	1
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node	org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node getNext()	6	2	1
org.apache.commons.math3.filter.KalmanFilterTest$Cannonball	double getY()	2	1	1
org.apache.commons.math3.filter.KalmanFilterTest	void assertVectorEquals(double[],double[])	2	2	null
org.apache.commons.math3.filter.KalmanFilterTest	void assertMatrixEquals(double[][],double[][])	2	2	null
org.apache.commons.math3.fitting.WeightedObservedPointsTest	boolean lastElementIsSame(org.apache.commons.math3.fitting.WeightedObservedPoints,org.apache.commons.math3.fitting.WeightedObservedPoint)	3	3	null
org.apache.commons.math3.fitting.PolynomialCurveFitterTest	org.apache.commons.math3.analysis.polynomials.PolynomialFunction buildRandomPolynomial(int,java.util.Random)	3	3	null
org.apache.commons.math3.fitting.PolynomialFitterTest	double[] doMath798(org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer,int,double[])	5	3	2
org.apache.commons.math3.fitting.PolynomialFitterTest	void checkUnsolvableProblem(org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer,boolean)	2	2	null
org.apache.commons.math3.fitting.PolynomialFitterTest	org.apache.commons.math3.analysis.polynomials.PolynomialFunction buildRandomPolynomial(int,java.util.Random)	3	3	null
org.apache.commons.math3.fitting.GaussianFitterTest	void addDatasetToGaussianFitter(double[][],org.apache.commons.math3.fitting.GaussianFitter)	6	6	null
org.apache.commons.math3.fitting.leastsquares.RandomCirclePointGenerator	org.apache.commons.math3.geometry.euclidean.twod.Vector2D[] generate(int)	2	2	null
org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$LinearProblem	org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder getBuilder()	5	5	null
org.apache.commons.math3.fitting.leastsquares.MinpackTest$MinpackFunction$1	double[] value(double[])	2	1	1
org.apache.commons.math3.fitting.leastsquares.StraightLineProblem	void addPoint(double,double)	2	2	null
org.apache.commons.math3.fitting.leastsquares.StraightLineProblem	double[] solve()	2	2	null
org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest	org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder builder(org.apache.commons.math3.fitting.leastsquares.CircleProblem)	3	2	1
org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest	void checkEstimate(org.apache.commons.math3.fitting.leastsquares.CircleVectorial,double,int,double,double,double,boolean)	4	1	1
org.apache.commons.math3.fitting.leastsquares.EvaluationTest	org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder builder(org.apache.commons.math3.fitting.leastsquares.StatisticalReferenceDataset)	4	4	null
org.apache.commons.math3.fitting.leastsquares.EvaluationTest	org.apache.commons.math3.analysis.MultivariateVectorFunction dummyModel()	2	2	null
org.apache.commons.math3.fitting.leastsquares.EvaluationTest	org.apache.commons.math3.analysis.MultivariateMatrixFunction dummyJacobian()	2	2	null
org.apache.commons.math3.fitting.leastsquares.EvaluationTest$6	double[] value(double[])	2	1	1
org.apache.commons.math3.fitting.leastsquares.MinpackTest	void minpackTest(org.apache.commons.math3.fitting.leastsquares.MinpackTest$MinpackFunction,boolean)	53	18	14
org.apache.commons.math3.fitting.leastsquares.CircleVectorial	void addPoint(double,double)	27	6	5
org.apache.commons.math3.fitting.leastsquares.CircleProblem$1	double[] value(double[])	2	1	1
org.apache.commons.math3.fitting.leastsquares.RandomStraightLinePointGenerator	java.awt.geom.Point2D$Double[] generate(int)	2	2	null
org.apache.commons.math3.fitting.leastsquares.StraightLineProblem$1	double[] value(double[])	2	1	1
org.apache.commons.math3.fitting.leastsquares.StraightLineProblem$Model	double value(double)	90	36	30
org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest$BevingtonProblem$1	double[] value(double[])	2	1	1
org.apache.commons.math3.fitting.leastsquares.EvaluationRmsCheckerTest$1	org.apache.commons.math3.linear.RealMatrix getCovariances(double)	2	1	1
org.apache.commons.math3.fitting.leastsquares.EvaluationRmsCheckerTest$1	org.apache.commons.math3.linear.RealVector getSigma(double)	3	3	null
org.apache.commons.math3.fitting.leastsquares.EvaluationRmsCheckerTest$1	org.apache.commons.math3.linear.RealMatrix getJacobian()	2	2	null
org.apache.commons.math3.fitting.leastsquares.EvaluationRmsCheckerTest$1	double getCost()	2	2	null
org.apache.commons.math3.fitting.leastsquares.EvaluationRmsCheckerTest$1	org.apache.commons.math3.linear.RealVector getResiduals()	3	3	null
org.apache.commons.math3.fitting.leastsquares.EvaluationRmsCheckerTest$1	org.apache.commons.math3.linear.RealVector getPoint()	3	2	1
org.apache.commons.math3.fitting.leastsquares.EvaluationTestValidation	org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder builder(org.apache.commons.math3.fitting.leastsquares.StraightLineProblem)	2	2	null
org.apache.commons.math3.fitting.leastsquares.EvaluationTestValidation	double getChi2N(org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem,org.apache.commons.math3.linear.RealVector)	2	1	1
org.apache.commons.math3.fitting.leastsquares.StatisticalReferenceDataset$LeastSquaresProblem$1	double[] value(double[])	2	1	1
org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizerAbstractTest$LinearProblem$1	double[] value(double[])	2	1	1
org.apache.commons.math3.fitting.leastsquares.EvaluationRmsCheckerTest	org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem$Evaluation mockEvaluation(double)	6	1	1
org.apache.commons.math3.fitting.leastsquares.CircleVectorial$1	double[] value(double[])	2	1	1
org.apache.commons.math3.fitting.leastsquares.CircleProblem	void addPoint(double,double)	2	2	null
org.apache.commons.math3.fitting.leastsquares.StatisticalReferenceDatasetFactory	org.apache.commons.math3.fitting.leastsquares.StatisticalReferenceDataset createKirby2()	4	4	null
org.apache.commons.math3.fitting.GaussianCurveFitterTest	org.apache.commons.math3.fitting.WeightedObservedPoints createDataset(double[][])	9	9	null
org.apache.commons.math3.ode.TestProblem1	double[] computeTheoreticalState(double)	3	3	null
org.apache.commons.math3.ode.JacobianMatricesTest$Brusselator	double dYdP0()	2	2	null
org.apache.commons.math3.ode.JacobianMatricesTest$Brusselator	double dYdP1()	2	2	null
org.apache.commons.math3.ode.sampling.StepNormalizerTest	void setLastSeen(boolean)	2	2	null
org.apache.commons.math3.ode.sampling.StepInterpolatorTestUtils	void checkDerivativesConsistency(org.apache.commons.math3.ode.FirstOrderIntegrator,org.apache.commons.math3.ode.TestProblemAbstract,double,double)	11	11	null
org.apache.commons.math3.ode.TestProblem3	double[] computeTheoreticalState(double)	10	10	null
org.apache.commons.math3.ode.nonstiff.AdamsNordsieckTransformerTest	void checkNordsieckStart(org.apache.commons.math3.analysis.polynomials.PolynomialFunction,int,double,double,double)	3	3	null
org.apache.commons.math3.ode.nonstiff.AdamsNordsieckTransformerTest	void checkTransform(org.apache.commons.math3.analysis.polynomials.PolynomialFunction,int,double)	2	2	null
org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest	double getMaxError(org.apache.commons.math3.ode.FirstOrderIntegrator,org.apache.commons.math3.ode.TestProblemAbstract)	5	1	1
org.apache.commons.math3.ode.JacobianMatricesTest$ParamBrusselator	void setParameter(java.lang.String,double)	3	3	null
org.apache.commons.math3.ode.JacobianMatricesTest$ParamBrusselator	double dYdP0()	2	2	null
org.apache.commons.math3.ode.JacobianMatricesTest$ParamBrusselator	double dYdP1()	2	2	null
org.apache.commons.math3.ode.JacobianMatricesTest$ParameterizedCircle	double[][] exactDyDy0(double)	2	1	1
org.apache.commons.math3.ode.JacobianMatricesTest$ParameterizedCircle	double[] exactDyDcx(double)	2	1	1
org.apache.commons.math3.ode.JacobianMatricesTest$ParameterizedCircle	double[] exactDyDom(double)	2	1	1
org.apache.commons.math3.ode.events.ReappearingEventTest	double test(int)	2	2	null
org.apache.commons.math3.ode.events.CloseEventsTest$TimeDetector	double getActualT()	4	2	2
org.apache.commons.math3.ode.events.EventFilterTest	void testHistory(org.apache.commons.math3.ode.events.FilterType,double,double,double,double)	12	4	4
org.apache.commons.math3.ode.events.EventFilterTest$Event	int getEventCount()	7	3	3
org.apache.commons.math3.ode.events.OverlappingEventsTest	void test(int)	2	2	null
org.apache.commons.math3.ode.TestProblem4	org.apache.commons.math3.ode.events.EventHandler[] getEventsHandlers()	10	10	null
org.apache.commons.math3.ode.TestProblemHandler	double getMaximalValueError()	47	43	4
org.apache.commons.math3.ode.TestProblemHandler	double getMaximalTimeError()	39	39	null
org.apache.commons.math3.ode.TestProblemHandler	double getLastError()	24	24	null
org.apache.commons.math3.ode.TestProblemHandler	double getLastTime()	4	4	null
org.apache.commons.math3.ode.FirstOrderConverterTest	double integrateWithSpecifiedStep(double,double,double,double)	3	3	null
org.apache.commons.math3.ode.ContinuousOutputModelTest	boolean checkAppendError(org.apache.commons.math3.ode.ContinuousOutputModel,double,double[],double)	4	1	1
org.apache.commons.math3.ode.JacobianMatricesTest$Circle	double[][] exactDyDy0(double)	2	1	1
org.apache.commons.math3.ode.JacobianMatricesTest$Circle	double[] exactDyDcx(double)	2	1	1
org.apache.commons.math3.ode.JacobianMatricesTest$Circle	double[] exactDyDcy(double)	2	1	1
org.apache.commons.math3.ode.JacobianMatricesTest$Circle	double[] exactDyDom(double)	2	1	1
org.apache.commons.math3.util.ArithmeticUtilsTest	void testAddAndCheckLongFailure(long,long)	6	1	1
org.apache.commons.math3.util.ArithmeticUtilsTest	void testMulAndCheckLongFailure(long,long)	6	1	1
org.apache.commons.math3.util.ArithmeticUtilsTest	void testSubAndCheckLongFailure(long,long)	3	1	1
org.apache.commons.math3.util.CombinatoricsUtilsTest	long binomialCoefficient(int,int)	8	2	2
org.apache.commons.math3.util.CombinatoricsUtilsTest	long factorial(int)	3	1	1
org.apache.commons.math3.util.OpenIntToDoubleHashMapTest	org.apache.commons.math3.util.OpenIntToDoubleHashMap createFromJavaMap()	10	10	null
org.apache.commons.math3.util.OpenIntToDoubleHashMapTest	void assertPutAndGet(org.apache.commons.math3.util.OpenIntToDoubleHashMap)	4	4	null
org.apache.commons.math3.util.OpenIntToDoubleHashMapTest	java.util.Map generateAbsent()	4	4	null
org.apache.commons.math3.util.FastMathTest	org.apache.commons.math3.dfp.Dfp cosh(org.apache.commons.math3.dfp.Dfp)	2	1	1
org.apache.commons.math3.util.FastMathTest	org.apache.commons.math3.dfp.Dfp sinh(org.apache.commons.math3.dfp.Dfp)	2	1	1
org.apache.commons.math3.util.FastMathTest	org.apache.commons.math3.dfp.Dfp tanh(org.apache.commons.math3.dfp.Dfp)	2	1	1
org.apache.commons.math3.util.FastMathTest	org.apache.commons.math3.dfp.Dfp cbrt(org.apache.commons.math3.dfp.Dfp)	2	1	1
org.apache.commons.math3.util.FastMathTest	boolean compareClassMethods(java.lang.Class,java.lang.Class)	2	2	null
org.apache.commons.math3.util.FastMathTest	long poorManFloorDiv(long,long)	4	4	null
org.apache.commons.math3.util.FastMathTest	long poorManFloorMod(long,long)	4	4	null
org.apache.commons.math3.util.OpenIntToFieldTest	org.apache.commons.math3.util.OpenIntToFieldHashMap createFromJavaMap(org.apache.commons.math3.Field)	10	10	null
org.apache.commons.math3.util.OpenIntToFieldTest	void assertPutAndGet(org.apache.commons.math3.util.OpenIntToFieldHashMap)	4	4	null
org.apache.commons.math3.util.OpenIntToFieldTest	java.util.Map generateAbsent()	4	4	null
org.apache.commons.math3.util.ResizableDoubleArrayTest	void verifyEquality(org.apache.commons.math3.util.ResizableDoubleArray,org.apache.commons.math3.util.ResizableDoubleArray)	11	1	1
org.apache.commons.math3.util.ResizableDoubleArrayTest	void verifyInequality(org.apache.commons.math3.util.ResizableDoubleArray,org.apache.commons.math3.util.ResizableDoubleArray)	6	1	1
org.apache.commons.math3.util.CombinationsTest	void checkLexicographicIterator(org.apache.commons.math3.util.Combinations)	10	1	1
org.apache.commons.math3.optim.linear.SimplexSolverTest	org.apache.commons.math3.optim.linear.LinearConstraint equationFromString(int,java.lang.String)	93	1	1
org.apache.commons.math3.optim.linear.SimplexSolverTest	boolean validSolution(org.apache.commons.math3.optim.PointValuePair,java.util.List,double)	4	4	null
org.apache.commons.math3.optim.linear.SimplexTableauTest	org.apache.commons.math3.optim.linear.LinearObjectiveFunction createFunction()	3	3	null
org.apache.commons.math3.optim.linear.SimplexTableauTest	java.util.Collection createConstraints()	3	3	null
org.apache.commons.math3.optim.linear.SimplexTableauTest	void assertMatrixEquals(double[][],double[][])	3	3	null
org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizerTest$LinearProblem$1	double[] value(double[])	2	1	1
org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizerTest$LinearProblem	org.apache.commons.math3.optim.nonlinear.vector.Target getTarget()	2	2	null
org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizerTest$LinearProblem	org.apache.commons.math3.optim.nonlinear.vector.ModelFunction getModelFunction()	2	2	null
org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizerTest$LinearProblem	org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian getModelFunctionJacobian()	2	2	null
org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizerTest$1	org.apache.commons.math3.optim.PointVectorValuePair optimize(org.apache.commons.math3.optim.OptimizationData[])	10	10	null
org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizerTest$2	double[] value(double[])	2	1	1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerAbstractTest$LinearProblem	org.apache.commons.math3.optim.nonlinear.vector.Target getTarget()	3	3	null
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerAbstractTest$LinearProblem	org.apache.commons.math3.optim.nonlinear.vector.ModelFunction getModelFunction()	3	3	null
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerAbstractTest$LinearProblem	org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian getModelFunctionJacobian()	3	3	null
org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest$MinpackFunction$1	double[] value(double[])	2	1	1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.StraightLineProblem	void addPoint(double,double)	2	2	null
org.apache.commons.math3.optim.nonlinear.vector.jacobian.StraightLineProblem	double[] solve()	2	2	null
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerTestValidation	double getChi2N(org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer,org.apache.commons.math3.optim.nonlinear.vector.jacobian.StraightLineProblem,double[])	2	1	1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizerTest	org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer createOptimizer()	5	5	null
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizerTest	void checkEstimate(org.apache.commons.math3.optim.nonlinear.vector.ModelFunction,org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian,double,int,double,double,double,boolean)	4	1	1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest	void minpackTest(org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest$MinpackFunction,boolean)	53	18	14
org.apache.commons.math3.optim.nonlinear.vector.jacobian.CircleVectorial	void addPoint(double,double)	12	3	2
org.apache.commons.math3.optim.nonlinear.vector.jacobian.CircleVectorial	org.apache.commons.math3.optim.nonlinear.vector.ModelFunction getModelFunction()	6	3	1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.CircleVectorial	org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian getModelFunctionJacobian()	6	3	1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.CircleProblem$1	double[] value(double[])	2	1	1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerAbstractTest$1	double[] value(double[])	2	1	1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.RandomStraightLinePointGenerator	java.awt.geom.Point2D$Double[] generate(int)	2	2	null
org.apache.commons.math3.optim.nonlinear.vector.jacobian.StraightLineProblem$1	double[] value(double[])	2	1	1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerTest	org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer createOptimizer()	3	3	null
org.apache.commons.math3.optim.nonlinear.vector.jacobian.StraightLineProblem$Model	double value(double)	90	36	30
org.apache.commons.math3.optim.nonlinear.vector.jacobian.StatisticalReferenceDataset$LeastSquaresProblem	org.apache.commons.math3.optim.nonlinear.vector.ModelFunction getModelFunction()	3	3	null
org.apache.commons.math3.optim.nonlinear.vector.jacobian.StatisticalReferenceDataset$LeastSquaresProblem	org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian getModelFunctionJacobian()	3	3	null
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizerTest$BevingtonProblem$1	double[] value(double[])	2	1	1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.StatisticalReferenceDataset$LeastSquaresProblem$1	double[] value(double[])	2	1	1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerAbstractTest$LinearProblem$1	double[] value(double[])	2	1	1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.CircleVectorial$1	double[] value(double[])	2	1	1
org.apache.commons.math3.optim.nonlinear.vector.jacobian.StatisticalReferenceDatasetFactory	org.apache.commons.math3.optim.nonlinear.vector.jacobian.StatisticalReferenceDataset createKirby2()	3	3	null
org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizerTest	org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer createOptimizer()	4	4	null
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest$SsDiffPow	double value(double[])	16	4	4
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest	void doTest(org.apache.commons.math3.analysis.MultivariateFunction,double[],double[][],org.apache.commons.math3.optim.nonlinear.scalar.GoalType,double,double,int,org.apache.commons.math3.optim.PointValuePair)	19	18	1
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest	double[] point(int,double)	35	19	15
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest	double[][] boundaries(int,double,double)	5	5	null
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerMultiDirectionalTest$1	double value(double[])	16	4	4
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest$Cigar	double value(double[])	16	4	4
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerMultiDirectionalTest$FourExtrema	double value(double[])	16	4	4
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest$DiffPow	double value(double[])	16	4	4
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest$2	double value(double[])	16	4	4
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest$Cigar	double value(double[])	16	4	4
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest$Rastrigin	double value(double[])	16	4	4
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest$MinusElli	double value(double[])	16	4	4
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizerTest$3	double value(double[])	17	5	4
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest$ElliRotated	double value(double[])	16	4	4
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest$Elli	double value(double[])	16	4	4
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest$SsDiffPow	double value(double[])	16	4	4
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest	void doTest(org.apache.commons.math3.analysis.MultivariateFunction,double[],double[],double[][],org.apache.commons.math3.optim.nonlinear.scalar.GoalType,int,boolean,int,double,double,double,int,org.apache.commons.math3.optim.PointValuePair)	38	22	15
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest	double[] point(int,double)	67	22	22
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest	double[][] boundaries(int,double,double)	7	7	null
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest$Ackley	double value(double[])	16	4	4
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest$Rosen	double value(double[])	16	4	4
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest$Sphere	double value(double[])	16	4	4
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerMultiDirectionalTest$Gaussian2D	double[] getMaximumPosition()	2	1	1
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerMultiDirectionalTest$Gaussian2D	double value(double[])	16	4	4
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest$Tablet	double value(double[])	16	4	4
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerNelderMeadTest$Powell	double value(double[])	16	4	4
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerMultiDirectionalTest$2	double value(double[])	16	4	4
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizerTest	void doTest(org.apache.commons.math3.analysis.MultivariateFunction,double[],double[],org.apache.commons.math3.optim.nonlinear.scalar.GoalType,double,double)	6	3	3
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest$Elli	double value(double[])	16	4	4
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest$ElliRotated	double value(double[])	16	4	4
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest$Ackley	double value(double[])	16	4	4
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest$MinusElli	double value(double[])	16	4	4
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest$Tablet	double value(double[])	16	4	4
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizerTest$4	double value(double[])	17	5	4
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest$CigTab	double value(double[])	16	4	4
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest$Rastrigin	double value(double[])	16	4	4
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerNelderMeadTest$Rosenbrock	double value(double[])	16	4	4
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest$Sphere	double value(double[])	16	4	4
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizerTest$1	double value(double[])	16	4	4
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerNelderMeadTest$3	double[] value(double[])	2	1	1
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest$TwoAxes	double value(double[])	16	4	4
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest$1	double value(double[])	16	4	4
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerNelderMeadTest$FourExtrema	double value(double[])	16	4	4
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest$TwoAxes	double value(double[])	16	4	4
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizerTest$2	double value(double[])	16	4	4
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerNelderMeadTest$2	double[] value(double[])	2	1	1
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest$Rosen	double value(double[])	16	4	4
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest$CigTab	double value(double[])	16	4	4
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest$DiffPow	double value(double[])	16	4	4
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerNelderMeadTest$1	double[] value(double[])	2	1	1
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapterTest$BiQuadratic	double value(double[])	16	4	4
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapterTest$BiQuadratic	double[] getLower()	5	5	null
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapterTest$BiQuadratic	double[] getUpper()	5	5	null
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapterTest$BiQuadratic	double getBoundedXOptimum()	5	5	null
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapterTest$BiQuadratic	double getBoundedYOptimum()	5	5	null
org.apache.commons.math3.optim.nonlinear.scalar.gradient.CircleScalar	void addPoint(double,double)	10	2	2
org.apache.commons.math3.optim.nonlinear.scalar.gradient.CircleScalar	double getRadius(org.apache.commons.math3.geometry.euclidean.twod.Vector2D)	3	2	1
org.apache.commons.math3.optim.nonlinear.scalar.gradient.CircleScalar	org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunction getObjectiveFunction()	2	2	null
org.apache.commons.math3.optim.nonlinear.scalar.gradient.CircleScalar	org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunctionGradient getObjectiveFunctionGradient()	2	2	null
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizerTest$LinearProblem$2	double[] value(double[])	2	1	1
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizerTest$LinearProblem$1	double value(double[])	16	4	4
org.apache.commons.math3.optim.nonlinear.scalar.gradient.CircleScalar$1	double value(double[])	16	4	4
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizerTest$LinearProblem	org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunction getObjectiveFunction()	13	12	1
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizerTest$LinearProblem	org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunctionGradient getObjectiveFunctionGradient()	13	12	1
org.apache.commons.math3.optim.nonlinear.scalar.gradient.CircleScalar$2	double[] value(double[])	2	1	1
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapterTest$BiQuadratic	double value(double[])	16	4	4
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapterTest$BiQuadratic	double[] getLower()	4	4	null
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapterTest$BiQuadratic	double[] getUpper()	4	4	null
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapterTest$BiQuadratic	double getBoundedXOptimum()	4	4	null
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapterTest$BiQuadratic	double getBoundedYOptimum()	4	4	null
org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizerTest$Rosenbrock	double value(double[])	16	4	4
org.apache.commons.math3.optim.univariate.BracketFinderTest$2	double value(double)	90	36	30
org.apache.commons.math3.optim.univariate.BracketFinderTest$1	double value(double)	90	36	30
org.apache.commons.math3.optim.univariate.BracketFinderTest$4	double value(double)	90	36	30
org.apache.commons.math3.optim.univariate.BrentOptimizerTest$1	double value(double)	90	36	30
org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizerTest$1	double value(double)	90	36	30
org.apache.commons.math3.optim.univariate.BrentOptimizerTest$2	double value(double)	90	36	30
org.apache.commons.math3.optim.univariate.BracketFinderTest$3	double value(double)	90	36	30
org.apache.commons.math3.distribution.TDistributionTest	double[] makeNistResults(double[],int)	4	1	1
org.apache.commons.math3.distribution.LaplaceDistributionTest	org.apache.commons.math3.distribution.LaplaceDistribution makeDistribution()	2	2	null
org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximizationTest	double[][] getTestSamples()	5	5	null
org.apache.commons.math3.distribution.PoissonDistributionTest	void checkProbability(org.apache.commons.math3.distribution.PoissonDistribution,int)	4	1	1
org.apache.commons.math3.distribution.AbstractRealDistributionTest$2$2	double value(double)	90	36	30
org.apache.commons.math3.distribution.NakagamiDistributionTest	org.apache.commons.math3.distribution.NakagamiDistribution makeDistribution()	2	2	null
org.apache.commons.math3.distribution.NormalDistributionTest	void verifyQuantiles()	3	1	1
org.apache.commons.math3.distribution.NormalDistributionTest	void checkDensity(double,double,double[],double[])	2	1	1
org.apache.commons.math3.distribution.GammaDistributionTest	void testProbability(double,double,double,double)	5	1	1
org.apache.commons.math3.distribution.GammaDistributionTest	void testValue(double,double,double,double)	4	1	1
org.apache.commons.math3.distribution.GammaDistributionTest	void checkDensity(double,double,double[],double[])	8	1	1
org.apache.commons.math3.distribution.GammaDistributionTest	void doTestMath753(double,double,double,double,double,java.lang.String)	6	6	null
org.apache.commons.math3.distribution.LogNormalDistributionTest	void verifyQuantiles()	3	1	1
org.apache.commons.math3.distribution.LogNormalDistributionTest	void checkDensity(double,double,double[],double[])	2	1	1
org.apache.commons.math3.distribution.TriangularDistributionTest	org.apache.commons.math3.distribution.TriangularDistribution makeDistribution()	2	2	null
org.apache.commons.math3.distribution.ZipfDistributionTest$1	double nextDouble()	37	19	17
org.apache.commons.math3.distribution.MultivariateNormalMixtureModelDistributionTest	org.apache.commons.math3.distribution.MultivariateNormalMixtureModelDistribution create(double[],double[][],double[][][])	5	5	null
org.apache.commons.math3.distribution.HypergeometricDistributionTest	void testHypergeometricDistributionProbabilities(int,int,int,double[][])	2	2	null
org.apache.commons.math3.distribution.ParetoDistributionTest	void verifyQuantiles()	3	1	1
org.apache.commons.math3.distribution.ParetoDistributionTest	void checkDensity(double,double,double[],double[])	2	1	1
org.apache.commons.math3.distribution.UniformRealDistributionTest	org.apache.commons.math3.distribution.UniformRealDistribution makeDistribution()	2	2	null
org.apache.commons.math3.distribution.ChiSquaredDistributionTest	void checkDensity(double,double[],double[])	4	1	1
org.apache.commons.math3.distribution.LogisticsDistributionTest	org.apache.commons.math3.distribution.LogisticDistribution makeDistribution()	2	2	null
org.apache.commons.math3.distribution.AbstractIntegerDistributionTest$DiceDistribution	double cumulativeProbability(int)	3	1	1
org.apache.commons.math3.distribution.AbstractRealDistributionTest$2$1	double value(double)	90	36	30
org.apache.commons.math3.distribution.BetaDistributionTest	void checkCumulative(double,double,double[],double[])	25	1	1
org.apache.commons.math3.distribution.BetaDistributionTest	void checkDensity(double,double,double[],double[])	25	1	1
org.apache.commons.math3.distribution.GumbelDistributionTest	org.apache.commons.math3.distribution.GumbelDistribution makeDistribution()	2	2	null
org.apache.commons.math3.distribution.RealDistributionAbstractTest$1	double value(double)	90	36	30
org.apache.commons.math3.distribution.LevyDistributionTest	org.apache.commons.math3.distribution.LevyDistribution makeDistribution()	2	2	null
org.apache.commons.math3.analysis.MonitoredFunction	void setCallsCount(int)	3	1	1
org.apache.commons.math3.analysis.MonitoredFunction	int getCallsCount()	4	1	1
org.apache.commons.math3.analysis.MonitoredFunction	double value(double)	90	36	30
org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest	void checkPolynomial(org.apache.commons.math3.analysis.polynomials.PolynomialFunction,long,java.lang.String)	16	2	2
org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest	void checkPolynomial(org.apache.commons.math3.analysis.polynomials.PolynomialFunction,java.lang.String)	21	3	3
org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest	void checkNullPolynomial(org.apache.commons.math3.analysis.polynomials.PolynomialFunction)	5	5	null
org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest	void checkOrthogonality(org.apache.commons.math3.analysis.polynomials.PolynomialFunction,org.apache.commons.math3.analysis.polynomials.PolynomialFunction,org.apache.commons.math3.analysis.UnivariateFunction,double,double,double,double)	5	5	null
org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest$3	double value(double)	90	36	30
org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest$1	double value(double)	90	36	30
org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest$2	double value(double)	90	36	30
org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest$6	double value(double)	90	36	30
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionTest	void checkPolynomial(org.apache.commons.math3.analysis.polynomials.PolynomialFunction,java.lang.String)	13	4	4
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionTest	void checkNullPolynomial(org.apache.commons.math3.analysis.polynomials.PolynomialFunction)	2	2	null
org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest$4	double value(double)	90	36	30
org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest$5	double value(double)	90	36	30
org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolverTest	void check(org.apache.commons.math3.analysis.RealFieldUnivariateFunction,int,double,double,org.apache.commons.math3.analysis.solvers.AllowedSolution)	6	1	1
org.apache.commons.math3.analysis.solvers.RegulaFalsiSolverTest$1	double value(double)	90	36	30
org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest$6	org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)	41	14	9
org.apache.commons.math3.analysis.solvers.BrentSolverTest$1	double value(double)	90	36	30
org.apache.commons.math3.analysis.solvers.NewtonSolverTest$1$1	double value(double)	90	36	30
org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest$2	org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)	41	14	9
org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest$2	double value(double)	90	36	30
org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest$7	org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)	41	14	9
org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest	void compare(org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest$TestFunction)	6	1	1
org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest$1	double value(double)	92	37	31
org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest$1	double value(double)	90	36	30
org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest$5	org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)	41	14	9
org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest$3	org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)	41	14	9
org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest$4	org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)	41	14	9
org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolverTest$1	org.apache.commons.math3.RealFieldElement value(org.apache.commons.math3.RealFieldElement)	4	1	1
org.apache.commons.math3.analysis.solvers.NewtonSolverTest$1	double value(double)	92	36	31
org.apache.commons.math3.analysis.QuinticFunction	double value(double)	97	40	31
org.apache.commons.math3.analysis.QuinticFunction	org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)	42	14	9
org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatorTest$1	double value(double,double)	17	7	4
org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest$13	double value(double,double)	17	8	4
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatorTest$2	double value(double[])	19	4	4
org.apache.commons.math3.analysis.interpolation.TricubicInterpolatingFunctionTest$18	double value(double,double,double)	6	2	2
org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest	void generateSineData(double[],double[],double,double)	3	3	null
org.apache.commons.math3.analysis.interpolation.BicubicInterpolatorTest	void testInterpolation(int,double,org.apache.commons.math3.analysis.BivariateFunction,boolean)	2	2	null
org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolatorTest	org.apache.commons.math3.analysis.polynomials.PolynomialFunction randomPolynomial(int,java.util.Random)	2	2	null
org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest$8	double value(double,double)	16	7	3
org.apache.commons.math3.analysis.interpolation.BicubicInterpolatingFunctionTest$6	double value(double,double)	15	7	3
org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunctionTest$9	double value(double,double,double)	7	3	2
org.apache.commons.math3.analysis.interpolation.TricubicInterpolatingFunctionTest$20	double value(double,double,double)	6	2	2
org.apache.commons.math3.analysis.interpolation.AkimaSplineInterpolatorTest	void testInterpolation(double,double,int,int,org.apache.commons.math3.analysis.UnivariateFunction,double,double)	3	3	null
org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest$6	double value(double,double)	16	7	3
org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest$2	double value(double,double)	19	8	4
org.apache.commons.math3.analysis.interpolation.BicubicInterpolatingFunctionTest	void testInterpolation(double,double,double,double,int,int,org.apache.commons.math3.analysis.BivariateFunction,org.apache.commons.math3.analysis.BivariateFunction,org.apache.commons.math3.analysis.BivariateFunction,org.apache.commons.math3.analysis.BivariateFunction,double,double,boolean)	2	2	null
org.apache.commons.math3.analysis.interpolation.SplineInterpolatorTest	void verifyInterpolation(org.apache.commons.math3.analysis.UnivariateFunction,double[],double[])	4	4	null
org.apache.commons.math3.analysis.interpolation.SplineInterpolatorTest	void verifyConsistency(org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction,double[])	3	3	null
org.apache.commons.math3.analysis.interpolation.TricubicInterpolatorTest$1	double value(double,double,double)	9	3	3
org.apache.commons.math3.analysis.interpolation.TricubicInterpolatingFunctionTest$6	double value(double,double,double)	6	2	2
org.apache.commons.math3.analysis.interpolation.TricubicInterpolatingFunctionTest$1	double value(double,double,double)	6	2	2
org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatorTest$2	double value(double,double,double)	10	2	2
org.apache.commons.math3.analysis.interpolation.TricubicInterpolatingFunctionTest$16	double value(double,double,double)	6	2	2
org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest$10	double value(double,double)	16	8	3
org.apache.commons.math3.analysis.interpolation.TricubicInterpolatingFunctionTest$3	double value(double,double,double)	6	2	2
org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunctionTest$7	double value(double,double,double)	7	3	2
org.apache.commons.math3.analysis.interpolation.TricubicInterpolatingFunctionTest$5	double value(double,double,double)	6	2	2
org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunctionTest$5	double value(double,double,double)	7	3	2
org.apache.commons.math3.analysis.interpolation.LinearInterpolatorTest	void verifyInterpolation(org.apache.commons.math3.analysis.UnivariateFunction,double[],double[])	3	3	null
org.apache.commons.math3.analysis.interpolation.BicubicInterpolatorTest$1	double value(double,double)	15	7	3
org.apache.commons.math3.analysis.interpolation.TricubicInterpolatingFunctionTest$4	double value(double,double,double)	6	2	2
org.apache.commons.math3.analysis.interpolation.TricubicInterpolatingFunctionTest$12	double value(double,double,double)	6	2	2
org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest$3	double value(double,double)	16	8	3
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatorTest$1	double value(double[])	19	4	4
org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest$12	double value(double,double)	17	8	4
org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest$16	double value(double,double)	16	8	3
org.apache.commons.math3.analysis.interpolation.BicubicInterpolatorTest$2	double value(double,double)	15	7	3
org.apache.commons.math3.analysis.interpolation.TricubicInterpolatingFunctionTest$7	double value(double,double,double)	6	2	2
org.apache.commons.math3.analysis.interpolation.AkimaSplineInterpolatorTest$2	double value(double)	90	36	30
org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest$7	double value(double,double)	16	7	3
org.apache.commons.math3.analysis.interpolation.BicubicInterpolatingFunctionTest$5	double value(double,double)	15	7	3
org.apache.commons.math3.analysis.interpolation.NevilleInterpolatorTest	double partialerror(double[],double)	5	2	2
org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunctionTest$3	double value(double,double,double)	7	3	2
org.apache.commons.math3.analysis.interpolation.TricubicInterpolatingFunctionTest$17	double value(double,double,double)	6	2	2
org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatorTest$2	double value(double,double)	17	7	4
org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest$9	double value(double,double)	16	7	3
org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest$1	double value(double,double)	19	7	3
org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest$17	double value(double,double)	16	8	3
org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest$5	double value(double,double)	16	7	3
org.apache.commons.math3.analysis.interpolation.BicubicInterpolatingFunctionTest$7	double value(double,double)	15	7	3
org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatorTest$1	double value(double,double,double)	10	2	2
org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest$1	double value(double,double)	19	8	4
org.apache.commons.math3.analysis.interpolation.PiecewiseBicubicSplineInterpolatingFunctionTest$1	double value(double,double)	15	7	3
org.apache.commons.math3.analysis.interpolation.DividedDifferenceInterpolatorTest	double partialerror(double[],double)	5	2	2
org.apache.commons.math3.analysis.interpolation.BicubicInterpolatingFunctionTest$4	double value(double,double)	15	7	3
org.apache.commons.math3.analysis.interpolation.TricubicInterpolatingFunctionTest	void testInterpolation(double,double,double,double,double,double,int,int,org.apache.commons.math3.analysis.TrivariateFunction,org.apache.commons.math3.analysis.TrivariateFunction,org.apache.commons.math3.analysis.TrivariateFunction,org.apache.commons.math3.analysis.TrivariateFunction,org.apache.commons.math3.analysis.TrivariateFunction,org.apache.commons.math3.analysis.TrivariateFunction,org.apache.commons.math3.analysis.TrivariateFunction,org.apache.commons.math3.analysis.TrivariateFunction,double,double,double,boolean)	3	3	null
org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest$2	double value(double,double)	19	7	3
org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunctionTest$4	double value(double,double,double)	7	3	2
org.apache.commons.math3.analysis.interpolation.BicubicInterpolatingFunctionTest$2	double value(double,double)	15	7	3
org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest$11	double value(double,double)	17	8	4
org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunctionTest$8	double value(double,double,double)	7	3	2
org.apache.commons.math3.analysis.interpolation.TricubicInterpolatingFunctionTest$21	double value(double,double,double)	6	2	2
org.apache.commons.math3.analysis.interpolation.HermiteInterpolatorTest	org.apache.commons.math3.analysis.polynomials.PolynomialFunction randomPolynomial(int,java.util.Random)	2	2	null
org.apache.commons.math3.analysis.interpolation.HermiteInterpolatorTest	void checkPolynomial(org.apache.commons.math3.analysis.polynomials.PolynomialFunction,org.apache.commons.math3.analysis.polynomials.PolynomialFunction)	7	7	null
org.apache.commons.math3.analysis.interpolation.PiecewiseBicubicSplineInterpolatingFunctionTest	void testInterpolation(double,double,double,double,int,int,org.apache.commons.math3.analysis.BivariateFunction,double,double)	2	2	null
org.apache.commons.math3.analysis.interpolation.TricubicInterpolatingFunctionTest$10	double value(double,double,double)	6	2	2
org.apache.commons.math3.analysis.interpolation.TricubicInterpolatingFunctionTest$19	double value(double,double,double)	6	2	2
org.apache.commons.math3.analysis.interpolation.BicubicInterpolatingFunctionTest$8	double value(double,double)	15	7	3
org.apache.commons.math3.analysis.interpolation.AkimaSplineInterpolatorTest$1	double value(double)	90	36	30
org.apache.commons.math3.analysis.interpolation.TricubicInterpolatingFunctionTest$14	double value(double,double,double)	6	2	2
org.apache.commons.math3.analysis.interpolation.PiecewiseBicubicSplineInterpolatingFunctionTest$2	double value(double,double)	15	7	3
org.apache.commons.math3.analysis.interpolation.TricubicInterpolatingFunctionTest$8	double value(double,double,double)	6	2	2
org.apache.commons.math3.analysis.interpolation.TricubicInterpolatingFunctionTest$15	double value(double,double,double)	6	2	2
org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunctionTest$6	double value(double,double,double)	7	3	2
org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest$15	double value(double,double)	17	8	4
org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest$4	double value(double,double)	16	8	3
org.apache.commons.math3.analysis.interpolation.AkimaSplineInterpolatorTest$3	double value(double)	90	36	30
org.apache.commons.math3.analysis.interpolation.TricubicInterpolatingFunctionTest$13	double value(double,double,double)	6	2	2
org.apache.commons.math3.analysis.interpolation.TricubicInterpolatingFunctionTest$9	double value(double,double,double)	6	2	2
org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunctionTest$1	double value(double,double,double)	10	3	3
org.apache.commons.math3.analysis.interpolation.BicubicInterpolatingFunctionTest$1	double value(double,double)	15	7	3
org.apache.commons.math3.analysis.interpolation.TricubicInterpolatingFunctionTest$2	double value(double,double,double)	6	2	2
org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunctionTest$2	double value(double,double,double)	10	3	3
org.apache.commons.math3.analysis.interpolation.PiecewiseBicubicSplineInterpolatorTest$2	double value(double,double)	17	7	4
org.apache.commons.math3.analysis.interpolation.TricubicInterpolatorTest$2	double value(double,double,double)	9	3	3
org.apache.commons.math3.analysis.interpolation.MicrosphereProjectionInterpolatorTest$1	double value(double[])	20	4	4
org.apache.commons.math3.analysis.interpolation.BicubicInterpolatingFunctionTest$3	double value(double,double)	15	7	3
org.apache.commons.math3.analysis.interpolation.TricubicInterpolatingFunctionTest$22	double value(double,double,double)	6	2	2
org.apache.commons.math3.analysis.interpolation.TricubicInterpolatingFunctionTest$11	double value(double,double,double)	6	2	2
org.apache.commons.math3.analysis.interpolation.PiecewiseBicubicSplineInterpolatorTest$1	double value(double,double)	17	7	4
org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest$14	double value(double,double)	17	8	4
org.apache.commons.math3.analysis.interpolation.MicrosphereProjectionInterpolatorTest	double toCoordinate(double,double,int,int)	2	1	1
org.apache.commons.math3.analysis.function.SqrtTest$1	double value(double)	91	37	30
org.apache.commons.math3.analysis.function.SincTest$1	double value(double)	91	37	30
org.apache.commons.math3.analysis.function.SincTest$2	double value(double)	91	37	30
org.apache.commons.math3.analysis.function.SqrtTest$2	double value(double)	91	37	30
org.apache.commons.math3.analysis.XMinus5Function	double value(double)	91	37	30
org.apache.commons.math3.analysis.XMinus5Function	org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)	41	14	9
org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegratorTest$1	double value(double)	90	36	30
org.apache.commons.math3.analysis.integration.gauss.HermiteTest$1	double value(double)	90	36	30
org.apache.commons.math3.analysis.integration.gauss.HermiteTest$2	double value(double)	90	36	30
org.apache.commons.math3.analysis.integration.gauss.HermiteTest$3	double value(double)	90	36	30
org.apache.commons.math3.analysis.integration.LegendreGaussIntegratorTest$1	double value(double)	90	36	30
org.apache.commons.math3.analysis.FunctionUtilsTest$2	double value(double[])	17	5	4
org.apache.commons.math3.analysis.FunctionUtilsTest$2	org.apache.commons.math3.analysis.MultivariateVectorFunction gradient()	2	1	1
org.apache.commons.math3.analysis.FunctionUtilsTest$2$2	double[] value(double[])	2	1	1
org.apache.commons.math3.analysis.FunctionUtilsTest$1	double value(double[])	19	5	5
org.apache.commons.math3.analysis.FunctionUtilsTest$1	org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure[])	4	1	1
org.apache.commons.math3.analysis.FunctionUtilsTest$2$1	double value(double[])	16	4	4
org.apache.commons.math3.analysis.SumSincFunction	double value(double[])	16	4	4
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiatorTest$7	double value(double)	90	36	30
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest	void checkF0F1(org.apache.commons.math3.analysis.differentiation.DerivativeStructure,double,double[])	20	9	6
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest	void checkEquals(org.apache.commons.math3.analysis.differentiation.DerivativeStructure,org.apache.commons.math3.analysis.differentiation.DerivativeStructure,double)	8	6	1
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiatorTest$6	double value(double)	90	36	30
org.apache.commons.math3.analysis.differentiation.DSCompilerTest	void checkIndices(int[],int[])	55	1	1
org.apache.commons.math3.analysis.differentiation.DSCompilerTest	java.lang.String ordersToString(int[],java.lang.String,java.lang.String[])	5	2	2
org.apache.commons.math3.analysis.differentiation.JacobianFunctionTest$SphereMapping	double[] value(double[])	2	1	1
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiatorTest$2	double value(double)	90	36	30
org.apache.commons.math3.analysis.differentiation.SparseGradientTest	void checkF0F1(org.apache.commons.math3.analysis.differentiation.SparseGradient,double,double[])	49	39	6
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiatorTest$1	double value(double)	90	36	30
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiatorTest$3	double value(double)	90	36	30
org.apache.commons.math3.analysis.differentiation.GradientFunctionTest$EuclideanDistance	double value(double[])	16	4	4
org.apache.commons.math3.analysis.differentiation.GradientFunctionTest$EuclideanDistance	org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure[])	4	1	1
org.apache.commons.math3.analysis.differentiation.GradientFunctionTest$EuclideanDistance	double[] gradient(double[])	2	2	null
org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest	void composeAndTest(org.apache.commons.math3.linear.RealMatrix,int)	3	1	1
org.apache.commons.math3.linear.FieldLUSolverTest	org.apache.commons.math3.linear.FieldMatrix createFractionMatrix(int[][])	14	5	5
org.apache.commons.math3.linear.FieldLUSolverTest	double getDeterminant(org.apache.commons.math3.linear.FieldMatrix)	4	1	1
org.apache.commons.math3.linear.SingularValueDecompositionTest	void checkAEqualUSVt(org.apache.commons.math3.linear.RealMatrix)	3	1	1
org.apache.commons.math3.linear.SingularValueDecompositionTest	void checkOrthogonal(org.apache.commons.math3.linear.RealMatrix)	6	2	2
org.apache.commons.math3.linear.SingularValueDecompositionTest	void loadRealMatrix(org.apache.commons.math3.linear.RealMatrix,java.lang.String)	2	2	null
org.apache.commons.math3.linear.SingularValueDecompositionTest	org.apache.commons.math3.linear.RealMatrix createTestMatrix(java.util.Random,int,int,double[])	2	2	null
org.apache.commons.math3.linear.BlockFieldMatrixTest$GetVisitor	int getCount()	8	1	1
org.apache.commons.math3.linear.HilbertMatrix	org.apache.commons.math3.linear.RealVector operate(org.apache.commons.math3.linear.RealVector)	2	2	null
org.apache.commons.math3.linear.SymmLQTest	void saundersTest(int,boolean,boolean,double,double)	20	20	null
org.apache.commons.math3.linear.TriDiagonalTransformerTest	void checkAEqualQTQt(org.apache.commons.math3.linear.RealMatrix)	2	1	1
org.apache.commons.math3.linear.TriDiagonalTransformerTest	void checkNoAccessBelowDiagonal(double[][])	2	1	1
org.apache.commons.math3.linear.TriDiagonalTransformerTest	void checkOrthogonal(org.apache.commons.math3.linear.RealMatrix)	4	2	2
org.apache.commons.math3.linear.TriDiagonalTransformerTest	void checkTriDiagonal(org.apache.commons.math3.linear.RealMatrix)	2	1	1
org.apache.commons.math3.linear.TriDiagonalTransformerTest	void checkMatricesValues(double[][],double[][],double[],double[])	2	2	null
org.apache.commons.math3.linear.FieldMatrixImplTest	void checkGetSubMatrix(org.apache.commons.math3.linear.FieldMatrix,org.apache.commons.math3.fraction.Fraction[][],int,int,int,int)	7	1	1
org.apache.commons.math3.linear.FieldMatrixImplTest	void checkGetSubMatrix(org.apache.commons.math3.linear.FieldMatrix,org.apache.commons.math3.fraction.Fraction[][],int[],int[])	8	1	1
org.apache.commons.math3.linear.FieldMatrixImplTest	void checkCopy(org.apache.commons.math3.linear.FieldMatrix,org.apache.commons.math3.fraction.Fraction[][],int,int,int,int)	7	1	1
org.apache.commons.math3.linear.FieldMatrixImplTest	void checkCopy(org.apache.commons.math3.linear.FieldMatrix,org.apache.commons.math3.fraction.Fraction[][],int[],int[])	8	1	1
org.apache.commons.math3.linear.FieldMatrixImplTest	org.apache.commons.math3.linear.FieldVector columnToVector(org.apache.commons.math3.fraction.Fraction[][])	3	2	1
org.apache.commons.math3.linear.FieldMatrixImplTest	org.apache.commons.math3.fraction.Fraction[] columnToArray(org.apache.commons.math3.fraction.Fraction[][])	3	2	1
org.apache.commons.math3.linear.FieldMatrixImplTest	void checkArrays(org.apache.commons.math3.fraction.Fraction[],org.apache.commons.math3.fraction.Fraction[])	6	4	2
org.apache.commons.math3.linear.ArrayRealVectorTest	org.apache.commons.math3.linear.RealVector create(double[])	4	1	1
org.apache.commons.math3.linear.BiDiagonalTransformerTest	void checkdimensions(org.apache.commons.math3.linear.RealMatrix)	3	1	1
org.apache.commons.math3.linear.BiDiagonalTransformerTest	void checkAEqualUSVt(org.apache.commons.math3.linear.RealMatrix)	3	1	1
org.apache.commons.math3.linear.BiDiagonalTransformerTest	void checkOrthogonal(org.apache.commons.math3.linear.RealMatrix)	6	2	2
org.apache.commons.math3.linear.BiDiagonalTransformerTest	void checkBiDiagonal(org.apache.commons.math3.linear.RealMatrix)	3	1	1
org.apache.commons.math3.linear.SparseRealMatrixTest	org.apache.commons.math3.linear.RealVector columnToVector(double[][])	2	1	1
org.apache.commons.math3.linear.SparseRealMatrixTest	void assertClose(java.lang.String,org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealMatrix,double)	16	6	3
org.apache.commons.math3.linear.SparseRealMatrixTest	void assertClose(java.lang.String,double[],double[],double)	6	3	3
org.apache.commons.math3.linear.SparseRealMatrixTest	org.apache.commons.math3.linear.OpenMapRealMatrix createSparseMatrix(double[][])	73	27	20
org.apache.commons.math3.linear.SparseFieldVectorTest	void assertClose(java.lang.String,org.apache.commons.math3.fraction.Fraction[],org.apache.commons.math3.fraction.Fraction[],double)	6	1	1
org.apache.commons.math3.linear.SparseFieldVectorTest	org.apache.commons.math3.linear.SparseFieldVector create(int)	4	4	null
org.apache.commons.math3.linear.MatrixUtilsTest	void checkIdentityMatrix(org.apache.commons.math3.linear.RealMatrix)	3	1	1
org.apache.commons.math3.linear.MatrixUtilsTest	void checkIdentityFieldMatrix(org.apache.commons.math3.linear.FieldMatrix)	3	1	1
org.apache.commons.math3.linear.MatrixUtilsTest	org.apache.commons.math3.fraction.Fraction[][] asFraction(double[][])	6	3	1
org.apache.commons.math3.linear.MatrixUtilsTest	org.apache.commons.math3.fraction.Fraction[] asFraction(double[])	2	2	null
org.apache.commons.math3.linear.HessenbergTransformerTest	org.apache.commons.math3.linear.RealMatrix checkAEqualPHPt(org.apache.commons.math3.linear.RealMatrix)	5	3	1
org.apache.commons.math3.linear.HessenbergTransformerTest	void checkOrthogonal(org.apache.commons.math3.linear.RealMatrix)	4	2	2
org.apache.commons.math3.linear.HessenbergTransformerTest	void checkHessenbergForm(org.apache.commons.math3.linear.RealMatrix)	4	3	1
org.apache.commons.math3.linear.HessenbergTransformerTest	void checkMatricesValues(double[][],double[][],double[][])	2	2	null
org.apache.commons.math3.linear.SparseFieldMatrixTest	org.apache.commons.math3.linear.FieldVector columnToVector(org.apache.commons.math3.fraction.Fraction[][])	2	1	1
org.apache.commons.math3.linear.SparseFieldMatrixTest	void assertClose(java.lang.String,org.apache.commons.math3.linear.FieldMatrix,org.apache.commons.math3.linear.FieldMatrix,double)	16	6	3
org.apache.commons.math3.linear.SparseFieldMatrixTest	void assertClose(java.lang.String,org.apache.commons.math3.fraction.Fraction[],org.apache.commons.math3.fraction.Fraction[],double)	6	3	3
org.apache.commons.math3.linear.SparseFieldMatrixTest	org.apache.commons.math3.linear.SparseFieldMatrix createSparseMatrix(org.apache.commons.math3.fraction.Fraction[][])	69	24	19
org.apache.commons.math3.linear.FieldMatrixImplTest$GetVisitor	int getCount()	8	1	1
org.apache.commons.math3.linear.LUSolverTest	double getDeterminant(org.apache.commons.math3.linear.RealMatrix)	4	1	1
org.apache.commons.math3.linear.QRDecompositionTest	void checkDimension(org.apache.commons.math3.linear.RealMatrix)	5	1	1
org.apache.commons.math3.linear.QRDecompositionTest	void checkAEqualQR(org.apache.commons.math3.linear.RealMatrix)	6	1	1
org.apache.commons.math3.linear.QRDecompositionTest	void checkQOrthogonal(org.apache.commons.math3.linear.RealMatrix)	6	1	1
org.apache.commons.math3.linear.QRDecompositionTest	void checkUpperTriangular(org.apache.commons.math3.linear.RealMatrix)	6	1	1
org.apache.commons.math3.linear.QRDecompositionTest	void checkTrapezoidal(org.apache.commons.math3.linear.RealMatrix)	6	1	1
org.apache.commons.math3.linear.QRDecompositionTest	org.apache.commons.math3.linear.RealMatrix createTestMatrix(java.util.Random,int,int)	10	5	5
org.apache.commons.math3.linear.QRSolverTest	org.apache.commons.math3.linear.RealMatrix createTestMatrix(java.util.Random,int,int)	4	2	2
org.apache.commons.math3.linear.RRQRDecompositionTest	void checkDimension(org.apache.commons.math3.linear.RealMatrix)	5	1	1
org.apache.commons.math3.linear.RRQRDecompositionTest	void checkAPEqualQR(org.apache.commons.math3.linear.RealMatrix)	6	1	1
org.apache.commons.math3.linear.RRQRDecompositionTest	void checkQOrthogonal(org.apache.commons.math3.linear.RealMatrix)	6	1	1
org.apache.commons.math3.linear.RRQRDecompositionTest	void checkUpperTriangular(org.apache.commons.math3.linear.RealMatrix)	6	1	1
org.apache.commons.math3.linear.RRQRDecompositionTest	void checkTrapezoidal(org.apache.commons.math3.linear.RealMatrix)	6	1	1
org.apache.commons.math3.linear.RRQRDecompositionTest	org.apache.commons.math3.linear.RealMatrix createTestMatrix(java.util.Random,int,int)	10	5	5
org.apache.commons.math3.linear.BlockRealMatrixTest	void checkGetSubMatrix(org.apache.commons.math3.linear.RealMatrix,double[][],int,int,int,int)	7	1	1
org.apache.commons.math3.linear.BlockRealMatrixTest	void checkGetSubMatrix(org.apache.commons.math3.linear.RealMatrix,double[][],int[],int[])	8	1	1
org.apache.commons.math3.linear.BlockRealMatrixTest	void checkCopy(org.apache.commons.math3.linear.RealMatrix,double[][],int,int,int,int)	7	1	1
org.apache.commons.math3.linear.BlockRealMatrixTest	void checkCopy(org.apache.commons.math3.linear.RealMatrix,double[][],int[],int[])	8	1	1
org.apache.commons.math3.linear.BlockRealMatrixTest	org.apache.commons.math3.linear.RealVector columnToVector(double[][])	3	2	1
org.apache.commons.math3.linear.BlockRealMatrixTest	double[] columnToArray(double[][])	3	2	1
org.apache.commons.math3.linear.BlockRealMatrixTest	void checkArrays(double[],double[])	10	8	2
org.apache.commons.math3.linear.BlockRealMatrixTest	void assertClose(org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealMatrix,double)	15	6	3
org.apache.commons.math3.linear.BlockRealMatrixTest	void assertClose(double[],double[],double)	6	3	3
org.apache.commons.math3.linear.BlockRealMatrixTest	org.apache.commons.math3.linear.BlockRealMatrix createRandomMatrix(java.util.Random,int,int)	5	3	2
org.apache.commons.math3.linear.RealVectorTest	org.apache.commons.math3.linear.RealVector create(double[])	2	1	1
org.apache.commons.math3.linear.InverseHilbertMatrix	long getEntry(int,int)	8	8	null
org.apache.commons.math3.linear.BlockFieldMatrixTest	void checkGetSubMatrix(org.apache.commons.math3.linear.FieldMatrix,org.apache.commons.math3.fraction.Fraction[][],int,int,int,int)	7	1	1
org.apache.commons.math3.linear.BlockFieldMatrixTest	void checkGetSubMatrix(org.apache.commons.math3.linear.FieldMatrix,org.apache.commons.math3.fraction.Fraction[][],int[],int[])	8	1	1
org.apache.commons.math3.linear.BlockFieldMatrixTest	void checkCopy(org.apache.commons.math3.linear.FieldMatrix,org.apache.commons.math3.fraction.Fraction[][],int,int,int,int)	7	1	1
org.apache.commons.math3.linear.BlockFieldMatrixTest	void checkCopy(org.apache.commons.math3.linear.FieldMatrix,org.apache.commons.math3.fraction.Fraction[][],int[],int[])	8	1	1
org.apache.commons.math3.linear.BlockFieldMatrixTest	org.apache.commons.math3.linear.FieldVector columnToVector(org.apache.commons.math3.fraction.Fraction[][])	3	2	1
org.apache.commons.math3.linear.BlockFieldMatrixTest	org.apache.commons.math3.fraction.Fraction[] columnToArray(org.apache.commons.math3.fraction.Fraction[][])	3	2	1
org.apache.commons.math3.linear.BlockFieldMatrixTest	void checkArrays(org.apache.commons.math3.fraction.Fraction[],org.apache.commons.math3.fraction.Fraction[])	8	6	2
org.apache.commons.math3.linear.BlockFieldMatrixTest	org.apache.commons.math3.linear.BlockFieldMatrix createRandomMatrix(java.util.Random,int,int)	5	3	2
org.apache.commons.math3.linear.SchurTransformerTest	org.apache.commons.math3.linear.RealMatrix checkAEqualPTPt(org.apache.commons.math3.linear.RealMatrix)	6	4	1
org.apache.commons.math3.linear.SchurTransformerTest	void checkOrthogonal(org.apache.commons.math3.linear.RealMatrix)	6	2	2
org.apache.commons.math3.linear.SchurTransformerTest	void checkSchurForm(org.apache.commons.math3.linear.RealMatrix)	6	4	1
org.apache.commons.math3.linear.Array2DRowRealMatrixTest$GetVisitor	int getCount()	8	1	1
org.apache.commons.math3.linear.ArrayFieldVectorTest$FieldVectorTestImpl	org.apache.commons.math3.linear.FieldVector mapAddToSelf(org.apache.commons.math3.FieldElement)	2	2	null
org.apache.commons.math3.linear.ArrayFieldVectorTest$FieldVectorTestImpl	org.apache.commons.math3.linear.FieldVector mapSubtractToSelf(org.apache.commons.math3.FieldElement)	2	2	null
org.apache.commons.math3.linear.ArrayFieldVectorTest$FieldVectorTestImpl	org.apache.commons.math3.linear.FieldVector mapMultiplyToSelf(org.apache.commons.math3.FieldElement)	2	2	null
org.apache.commons.math3.linear.ArrayFieldVectorTest$FieldVectorTestImpl	org.apache.commons.math3.linear.FieldVector mapDivideToSelf(org.apache.commons.math3.FieldElement)	2	2	null
org.apache.commons.math3.linear.ArrayFieldVectorTest$FieldVectorTestImpl	org.apache.commons.math3.linear.FieldVector mapInvToSelf()	2	2	null
org.apache.commons.math3.linear.ArrayFieldVectorTest$FieldVectorTestImpl	org.apache.commons.math3.FieldElement getEntry(int)	5	2	2
org.apache.commons.math3.linear.ArrayFieldVectorTest$FieldVectorTestImpl	int getDimension()	6	2	2
org.apache.commons.math3.linear.ArrayFieldVectorTest$FieldVectorTestImpl	org.apache.commons.math3.FieldElement[] toArray()	39	11	4
org.apache.commons.math3.linear.RealVectorAbstractTest$RealVectorTestImpl	org.apache.commons.math3.linear.RealVector copy()	4	3	1
org.apache.commons.math3.linear.RealVectorAbstractTest$RealVectorTestImpl	double getEntry(int)	39	25	9
org.apache.commons.math3.linear.ArrayFieldVectorTest	void checkArray(java.lang.String,org.apache.commons.math3.fraction.Fraction[],org.apache.commons.math3.fraction.Fraction[])	20	2	2
org.apache.commons.math3.linear.ArrayFieldVectorTest	org.apache.commons.math3.linear.ArrayFieldVector create(int)	4	4	null
org.apache.commons.math3.linear.EigenDecompositionTest	void checkUnsymmetricMatrix(org.apache.commons.math3.linear.RealMatrix)	7	5	1
org.apache.commons.math3.linear.EigenDecompositionTest	void checkEigenValues(double[],org.apache.commons.math3.linear.EigenDecomposition,double)	4	4	null
org.apache.commons.math3.linear.EigenDecompositionTest	void checkEigenVector(double[],org.apache.commons.math3.linear.EigenDecomposition,double)	10	4	3
org.apache.commons.math3.linear.EigenDecompositionTest	org.apache.commons.math3.linear.RealMatrix createTestMatrix(java.util.Random,double[])	5	5	null
org.apache.commons.math3.linear.BlockRealMatrixTest$GetVisitor	int getCount()	8	1	1
org.apache.commons.math3.linear.Array2DRowRealMatrixTest	void checkGetSubMatrix(org.apache.commons.math3.linear.RealMatrix,double[][],int,int,int,int,boolean)	7	1	1
org.apache.commons.math3.linear.Array2DRowRealMatrixTest	void checkGetSubMatrix(org.apache.commons.math3.linear.RealMatrix,double[][],int[],int[],boolean)	8	1	1
org.apache.commons.math3.linear.Array2DRowRealMatrixTest	void checkCopy(org.apache.commons.math3.linear.RealMatrix,double[][],int,int,int,int,boolean)	8	1	1
org.apache.commons.math3.linear.Array2DRowRealMatrixTest	void checkCopy(org.apache.commons.math3.linear.RealMatrix,double[][],int[],int[],boolean)	9	1	1
org.apache.commons.math3.linear.Array2DRowRealMatrixTest	org.apache.commons.math3.linear.RealVector columnToVector(double[][])	3	2	1
org.apache.commons.math3.linear.Array2DRowRealMatrixTest	double[] columnToArray(double[][])	3	2	1
org.apache.commons.math3.linear.Array2DRowRealMatrixTest	void checkArrays(double[],double[])	6	4	2
org.apache.commons.math3.linear.RRQRSolverTest	org.apache.commons.math3.linear.RealMatrix createTestMatrix(java.util.Random,int,int)	4	2	2
org.apache.commons.math3.fraction.FractionTest	void assertFraction(int,int,org.apache.commons.math3.fraction.Fraction)	95	10	10
org.apache.commons.math3.fraction.FractionTest	void checkIntegerOverflow(double)	4	1	1
org.apache.commons.math3.fraction.BigFractionTest	void assertFraction(int,int,org.apache.commons.math3.fraction.BigFraction)	92	10	10
org.apache.commons.math3.fraction.BigFractionTest	void assertFraction(long,long,org.apache.commons.math3.fraction.BigFraction)	10	4	2
org.apache.commons.math3.special.GammaTest	void testRegularizedGamma(double,double,double)	7	7	null
org.apache.commons.math3.special.GammaTest	void testLogGamma(double,double)	4	4	null
org.apache.commons.math3.special.BetaTest	void testRegularizedBeta(double,double,double,double)	10	10	null
org.apache.commons.math3.special.BetaTest	void testLogBeta(double,double,double)	7	7	null
org.apache.commons.math3.special.BetaTest	double logGammaSum(double,double)	5	5	null
org.apache.commons.math3.special.BetaTest	double logGammaMinusLogGammaSum(double,double)	3	3	null
org.apache.commons.math3.special.BetaTest	double sumDeltaMinusDeltaSum(double,double)	3	3	null
org.apache.commons.math3.random.EmpiricalDistributionTest$1	double value(double)	90	36	30
org.apache.commons.math3.random.TestRandomGenerator	double nextDouble()	37	19	17
org.apache.commons.math3.random.EmpiricalDistributionTest	void checkDistribution()	2	1	1
org.apache.commons.math3.random.EmpiricalDistributionTest	void verifySame(org.apache.commons.math3.random.EmpiricalDistribution,org.apache.commons.math3.random.EmpiricalDistribution)	2	1	1
org.apache.commons.math3.random.EmpiricalDistributionTest	void tstGen(double)	3	3	null
org.apache.commons.math3.random.EmpiricalDistributionTest	void tstDoubleGen(double)	3	3	null
org.apache.commons.math3.random.RandomAdaptorTest	void checkConstant(java.util.Random)	2	1	1
org.apache.commons.math3.random.ValueServerTest	void checkFixedSeed(org.apache.commons.math3.random.ValueServer,int)	4	1	1
org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest	void testSampler(double[][],int,double)	3	1	1
org.apache.commons.math3.random.ISAACTest	int[] getActualSequence(org.apache.commons.math3.random.ISAACRandom)	2	1	1
org.apache.commons.math3.random.RandomDataGeneratorTest	void checkNextIntUniform(int,int)	9	3	3
org.apache.commons.math3.random.RandomDataGeneratorTest	void checkNextLongUniform(long,long)	8	3	3
org.apache.commons.math3.random.RandomDataGeneratorTest	void checkNextSecureLongUniform(int,int)	6	3	3
org.apache.commons.math3.random.RandomDataGeneratorTest	void checkNextSecureIntUniform(int,int)	6	3	3
org.apache.commons.math3.random.RandomDataGeneratorTest	void checkNextPoissonConsistency(double)	3	1	1
org.apache.commons.math3.random.RandomDataGeneratorTest	void checkNextUniformUniform(double,double)	4	4	null
org.apache.commons.math3.random.RandomAdaptorTest$ConstantGenerator	double nextDouble()	37	19	17
org.apache.commons.math3.transform.FastFourierTransformerTest	void doTestTransformComplex(int,double,org.apache.commons.math3.transform.DftNormalization,org.apache.commons.math3.transform.TransformType)	7	1	1
org.apache.commons.math3.transform.FastFourierTransformerTest	void doTestTransformReal(int,double,org.apache.commons.math3.transform.DftNormalization,org.apache.commons.math3.transform.TransformType)	7	1	1
org.apache.commons.math3.transform.FastFourierTransformerTest	void doTestTransformFunction(org.apache.commons.math3.analysis.UnivariateFunction,double,double,int,double,org.apache.commons.math3.transform.DftNormalization,org.apache.commons.math3.transform.TransformType)	7	1	1
org.apache.commons.math3.transform.FastHadamardTransformerTest	void checkAllTransforms(int[],int[])	2	2	null
org.apache.commons.math3.ml.clustering.KMeansPlusPlusClustererTest$CloseDistance	double compute(double[],double[])	21	13	6
org.apache.commons.math3.ml.neuralnet.sofm.KohonenTrainingTaskTest	java.util.Collection uniqueCities(org.apache.commons.math3.ml.neuralnet.sofm.City[])	2	2	null
org.apache.commons.math3.ml.neuralnet.sofm.KohonenTrainingTaskTest	double computeTravelDistance(org.apache.commons.math3.ml.neuralnet.sofm.City[])	4	2	2
org.apache.commons.math3.ml.neuralnet.sofm.TravellingSalesmanSolver$1	boolean hasNext()	100	75	17
org.apache.commons.math3.ml.neuralnet.sofm.TravellingSalesmanSolver$1	void remove()	2	2	null
org.apache.commons.math3.ml.neuralnet.sofm.TravellingSalesmanSolver$1	java.lang.Object next()	104	77	16
org.apache.commons.math3.ml.neuralnet.sofm.TravellingSalesmanSolver	double getUpdateRatio()	2	2	null
org.apache.commons.math3.ml.neuralnet.sofm.TravellingSalesmanSolver	org.apache.commons.math3.ml.neuralnet.sofm.City[] getCityList()	2	2	null
org.apache.commons.math3.exception.util.ArgUtilsTest	java.lang.Object create(java.util.List)	9	1	1
org.apache.commons.math3.stat.descriptive.summary.SumTest	org.apache.commons.math3.stat.descriptive.UnivariateStatistic getUnivariateStatistic()	4	3	1
org.apache.commons.math3.stat.descriptive.summary.SumLogTest	org.apache.commons.math3.stat.descriptive.UnivariateStatistic getUnivariateStatistic()	4	3	1
org.apache.commons.math3.stat.descriptive.summary.ProductTest	org.apache.commons.math3.stat.descriptive.UnivariateStatistic getUnivariateStatistic()	4	3	1
org.apache.commons.math3.stat.descriptive.summary.ProductTest	double getTolerance()	2	1	1
org.apache.commons.math3.stat.descriptive.summary.SumSqTest	org.apache.commons.math3.stat.descriptive.UnivariateStatistic getUnivariateStatistic()	4	3	1
org.apache.commons.math3.stat.descriptive.rank.MaxTest	org.apache.commons.math3.stat.descriptive.UnivariateStatistic getUnivariateStatistic()	4	3	1
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentileTest	double getTolerance()	2	2	null
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentileTest	org.apache.commons.math3.stat.descriptive.UnivariateStatistic getUnivariateStatistic()	6	5	1
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentileTest	double expectedValue()	2	2	null
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentileTest	java.lang.Double[] randomTestData(int,int)	9	9	null
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentileTest	void doCalculatePercentile(java.lang.Double,java.lang.Number[])	10	9	1
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentileTest	void doDistributionTest(org.apache.commons.math3.distribution.RealDistribution)	2	1	1
org.apache.commons.math3.stat.descriptive.rank.MinTest	org.apache.commons.math3.stat.descriptive.UnivariateStatistic getUnivariateStatistic()	4	3	1
org.apache.commons.math3.stat.descriptive.rank.MedianTest	org.apache.commons.math3.stat.descriptive.UnivariateStatistic getUnivariateStatistic()	4	3	1
org.apache.commons.math3.stat.descriptive.rank.PercentileTest	void reset(double,org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType)	19	17	2
org.apache.commons.math3.stat.descriptive.rank.PercentileTest	org.apache.commons.math3.stat.descriptive.rank.Percentile getUnivariateStatistic()	25	18	3
org.apache.commons.math3.stat.descriptive.rank.PercentileTest	void checkAllTechniquesPercentile()	3	3	null
org.apache.commons.math3.stat.descriptive.rank.PercentileTest	void testAssertMappedValues(double[],java.lang.Object[][],java.lang.Double,java.lang.Double)	13	8	2
org.apache.commons.math3.stat.descriptive.rank.PercentileTest	void testAssertMappedValues(double[],java.lang.Object[][],java.lang.Double,java.lang.Double,org.apache.commons.math3.stat.ranking.NaNStrategy)	3	1	1
org.apache.commons.math3.stat.descriptive.rank.PercentileTest	org.apache.commons.math3.stat.descriptive.UnivariateStatistic getUnivariateStatistic()	4	3	1
org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest$badPercentile	double evaluate(double[],int,int)	3	1	1
org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest$badPercentile	double evaluate(double[])	4	2	1
org.apache.commons.math3.stat.descriptive.AggregateSummaryStatisticsTest	void assertEquals(org.apache.commons.math3.stat.descriptive.StatisticalSummary,org.apache.commons.math3.stat.descriptive.StatisticalSummary,double)	4	4	null
org.apache.commons.math3.stat.descriptive.AggregateSummaryStatisticsTest	double[] generateSample()	3	3	null
org.apache.commons.math3.stat.descriptive.AggregateSummaryStatisticsTest	double[][] generatePartition(double[])	3	3	null
org.apache.commons.math3.stat.descriptive.moment.ThirdMomentTest	org.apache.commons.math3.stat.descriptive.UnivariateStatistic getUnivariateStatistic()	4	3	1
org.apache.commons.math3.stat.descriptive.moment.FirstMomentTest	org.apache.commons.math3.stat.descriptive.UnivariateStatistic getUnivariateStatistic()	4	3	1
org.apache.commons.math3.stat.descriptive.moment.MeanTest	org.apache.commons.math3.stat.descriptive.UnivariateStatistic getUnivariateStatistic()	4	3	1
org.apache.commons.math3.stat.descriptive.moment.SkewnessTest	org.apache.commons.math3.stat.descriptive.UnivariateStatistic getUnivariateStatistic()	4	3	1
org.apache.commons.math3.stat.descriptive.moment.KurtosisTest	org.apache.commons.math3.stat.descriptive.UnivariateStatistic getUnivariateStatistic()	4	3	1
org.apache.commons.math3.stat.descriptive.moment.SecondMomentTest	org.apache.commons.math3.stat.descriptive.UnivariateStatistic getUnivariateStatistic()	4	3	1
org.apache.commons.math3.stat.descriptive.moment.StandardDeviationTest	org.apache.commons.math3.stat.descriptive.UnivariateStatistic getUnivariateStatistic()	4	3	1
org.apache.commons.math3.stat.descriptive.moment.FourthMomentTest	org.apache.commons.math3.stat.descriptive.UnivariateStatistic getUnivariateStatistic()	4	3	1
org.apache.commons.math3.stat.descriptive.moment.VarianceTest	org.apache.commons.math3.stat.descriptive.UnivariateStatistic getUnivariateStatistic()	4	3	1
org.apache.commons.math3.stat.descriptive.moment.VarianceTest	double expectedValue()	2	1	1
org.apache.commons.math3.stat.descriptive.moment.VarianceTest	double populationVariance(double[])	5	1	1
org.apache.commons.math3.stat.descriptive.moment.GeometricMeanTest	org.apache.commons.math3.stat.descriptive.UnivariateStatistic getUnivariateStatistic()	4	3	1
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest	org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics createMultivariateSummaryStatistics(int,boolean)	12	10	2
org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest$subPercentile	double evaluate(double[],int,int)	23	6	6
org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest$subPercentile	double evaluate(double[])	41	21	9
org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest$goodPercentile	double evaluate(double[],int,int)	3	1	1
org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest$goodPercentile	double evaluate(double[])	4	2	1
org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest	org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics createMultivariateSummaryStatistics(int,boolean)	12	10	2
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatisticsTest	org.apache.commons.math3.stat.descriptive.SummaryStatistics createSummaryStatistics()	13	12	1
org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest	org.apache.commons.math3.stat.descriptive.DescriptiveStatistics createDescriptiveStatistics()	9	8	1
org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest	void checkremoval(org.apache.commons.math3.stat.descriptive.DescriptiveStatistics,int,double,double,double)	5	1	1
org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest$deepMean	double evaluate(double[],int,int)	3	1	1
org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest$deepMean	double evaluate(double[])	4	2	1
org.apache.commons.math3.stat.descriptive.SummaryStatisticsTest	org.apache.commons.math3.stat.descriptive.SummaryStatistics createSummaryStatistics()	13	12	1
org.apache.commons.math3.stat.descriptive.SummaryStatisticsTest	void verifySummary(org.apache.commons.math3.stat.descriptive.SummaryStatistics,org.apache.commons.math3.stat.descriptive.StatisticalSummary)	6	2	2
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest$sumMean	double evaluate(double[],int,int)	3	1	1
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest$sumMean	double evaluate(double[])	4	2	1
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest$sumMean	void incrementAll(double[],int,int)	6	2	2
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest$sumMean	org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic copy()	2	2	null
org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatisticsTest	org.apache.commons.math3.stat.descriptive.DescriptiveStatistics createDescriptiveStatistics()	9	8	1
org.apache.commons.math3.stat.descriptive.ListUnivariateImpl	double[] getValues()	2	2	null
org.apache.commons.math3.stat.descriptive.ListUnivariateImpl	long getN()	11	5	3
org.apache.commons.math3.stat.descriptive.ListUnivariateImpl	void addValue(double)	49	21	14
org.apache.commons.math3.stat.descriptive.ListUnivariateImpl	void addObject(java.lang.Object)	22	1	1
org.apache.commons.math3.stat.descriptive.ListUnivariateImpl	void clear()	4	4	null
org.apache.commons.math3.stat.descriptive.ListUnivariateImpl	void setWindowSize(int)	6	4	1
org.apache.commons.math3.stat.CertifiedDataTest	void loadStats(java.lang.String,java.lang.Object)	10	2	2
org.apache.commons.math3.stat.interval.IntervalUtilsTest	void checkConfidenceIntervals(org.apache.commons.math3.stat.interval.ConfidenceInterval,org.apache.commons.math3.stat.interval.ConfidenceInterval)	4	4	null
org.apache.commons.math3.stat.regression.GLSMultipleLinearRegressionTest	org.apache.commons.math3.stat.regression.GLSMultipleLinearRegression createRegression()	7	7	null
org.apache.commons.math3.stat.regression.SimpleRegressionTest	void check(boolean)	2	1	1
org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest	org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression createRegression()	3	3	null
org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest	void checkVarianceConsistency(org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression)	2	2	null
org.apache.commons.math3.stat.inference.KolmogorovSmirnovTestTest	void checkFixTies(double[],double[])	6	2	2
org.apache.commons.math3.stat.inference.KolmogorovSmirnovTestTest	void checkExactTable(int,int,double,double)	7	1	1
org.apache.commons.math3.stat.correlation.PearsonsCorrelationTest	org.apache.commons.math3.linear.RealMatrix createRealMatrix(double[],int,int)	16	10	6
org.apache.commons.math3.stat.correlation.PearsonsCorrelationTest	org.apache.commons.math3.linear.RealMatrix createLowerTriangularRealMatrix(double[],int)	2	2	null
org.apache.commons.math3.stat.correlation.PearsonsCorrelationTest	void fillUpper(org.apache.commons.math3.linear.RealMatrix,double)	2	2	null
org.apache.commons.math3.stat.correlation.CovarianceTest	org.apache.commons.math3.linear.RealMatrix createRealMatrix(double[],int,int)	5	3	2
org.apache.commons.math3.stat.correlation.StorelessCovarianceTest	org.apache.commons.math3.linear.RealMatrix createRealMatrix(double[],int,int)	5	3	2
org.apache.commons.math3.TestUtils	void assertEquals(double,double,double)	117	32	24
org.apache.commons.math3.TestUtils	void assertEquals(java.lang.String,double,double,double)	3	3	null
org.apache.commons.math3.TestUtils	void assertSame(double,double)	2	2	null
org.apache.commons.math3.TestUtils	void assertSame(org.apache.commons.math3.complex.Complex,org.apache.commons.math3.complex.Complex)	145	27	17
org.apache.commons.math3.TestUtils	void assertEquals(org.apache.commons.math3.complex.Complex,org.apache.commons.math3.complex.Complex,double)	51	25	9
org.apache.commons.math3.TestUtils	void assertEquals(double[],double[],double)	127	45	34
org.apache.commons.math3.TestUtils	java.lang.Object serializeAndRecover(java.lang.Object)	50	42	4
org.apache.commons.math3.TestUtils	void checkSerializedEquality(java.lang.Object)	5	3	2
org.apache.commons.math3.TestUtils	void assertRelativelyEquals(double,double,double)	5	5	null
org.apache.commons.math3.TestUtils	void assertContains(org.apache.commons.math3.complex.Complex[],org.apache.commons.math3.complex.Complex,double)	2	2	null
org.apache.commons.math3.TestUtils	void assertEquals(java.lang.String,org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealMatrix,double)	51	26	8
org.apache.commons.math3.TestUtils	void assertEquals(org.apache.commons.math3.linear.FieldMatrix,org.apache.commons.math3.linear.FieldMatrix)	49	17	10
org.apache.commons.math3.TestUtils	void assertEquals(java.lang.String,double[],double[],double)	10	7	3
org.apache.commons.math3.TestUtils	void assertEquals(org.apache.commons.math3.FieldElement[],org.apache.commons.math3.FieldElement[])	14	8	6
org.apache.commons.math3.TestUtils	double sumSquareDev(double[],double)	5	3	2
org.apache.commons.math3.TestUtils	void assertChiSquareAccept(int[],double[],long[],double)	4	4	null
org.apache.commons.math3.TestUtils	void assertChiSquareAccept(double[],long[],double)	16	14	2
org.apache.commons.math3.TestUtils	double[] getDistributionQuartiles(org.apache.commons.math3.distribution.RealDistribution)	11	9	2
org.apache.commons.math3.TestUtils	void updateCounts(double,long[],double[])	11	9	2
org.apache.commons.math3.TestUtils	int eliminateZeroMassPoints(int[],double[])	4	4	null
org.apache.commons.math3.genetics.FixedGenerationCountTest$1	org.apache.commons.math3.genetics.Chromosome getFittestChromosome()	2	2	null
org.apache.commons.math3.genetics.RandomKeyTest$1	int compare(java.lang.Object,java.lang.Object)	10	6	2
org.apache.commons.math3.genetics.RandomKeyTest$2	int compare(java.lang.Object,java.lang.Object)	10	6	2
org.apache.commons.math3.genetics.NPointCrossoverTest	int detectCrossoverPoints(org.apache.commons.math3.genetics.BinaryChromosome,org.apache.commons.math3.genetics.BinaryChromosome,org.apache.commons.math3.genetics.BinaryChromosome)	2	1	1
org.apache.commons.math3.genetics.FixedElapsedTimeTest$1	org.apache.commons.math3.genetics.Chromosome getFittestChromosome()	2	2	null
org.apache.commons.math3.genetics.UniformCrossoverTest	void performCrossover(double)	3	1	1
org.apache.commons.math3.primes.PrimesTest	void assertNextPrimeException(int,java.lang.Throwable)	3	1	1
org.apache.commons.math3.complex.ComplexUtilsTest	org.apache.commons.math3.complex.Complex altPolar(double,double)	2	1	1
org.apache.commons.math3.complex.RootsOfUnityTest	void doTestComputeRoots(org.apache.commons.math3.complex.RootsOfUnity)	2	1	1
org.apache.commons.math3.dfp.DfpTest	void test(org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp,int,java.lang.String)	243	15	13
org.apache.commons.math3.dfp.DfpTest	void cmptst(org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp,java.lang.String,boolean,double)	220	1	1
org.apache.commons.math3.dfp.DfpMathTest	void test(org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp,int,java.lang.String)	117	2	2
org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFPTest	void check(org.apache.commons.math3.dfp.UnivariateDfpFunction,int,double,double,org.apache.commons.math3.analysis.solvers.AllowedSolution)	6	1	1
org.apache.commons.math3.dfp.DfpDecTest	void test(org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp,int,java.lang.String)	109	3	3
org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFPTest$1	org.apache.commons.math3.dfp.Dfp value(org.apache.commons.math3.dfp.Dfp)	4	1	1
org.apache.commons.math3.optimization.MultivariateDifferentiableVectorMultiStartOptimizerTest$LinearProblem	double[] value(double[])	2	1	1
org.apache.commons.math3.optimization.fitting.PolynomialFitterTest	double[] doMath798(org.apache.commons.math3.optimization.DifferentiableMultivariateVectorOptimizer,int,double[])	5	3	2
org.apache.commons.math3.optimization.fitting.PolynomialFitterTest	void checkUnsolvableProblem(org.apache.commons.math3.optimization.DifferentiableMultivariateVectorOptimizer,boolean)	2	2	null
org.apache.commons.math3.optimization.fitting.PolynomialFitterTest	org.apache.commons.math3.analysis.polynomials.PolynomialFunction buildRandomPolynomial(int,java.util.Random)	3	3	null
org.apache.commons.math3.optimization.fitting.GaussianFitterTest	void addDatasetToGaussianFitter(double[][],org.apache.commons.math3.optimization.fitting.GaussianFitter)	6	6	null
org.apache.commons.math3.optimization.MultivariateDifferentiableVectorMultiStartOptimizerTest$3	double[] value(double[])	2	1	1
org.apache.commons.math3.optimization.linear.SimplexSolverTest	org.apache.commons.math3.optimization.linear.LinearConstraint equationFromString(int,java.lang.String)	93	1	1
org.apache.commons.math3.optimization.linear.SimplexSolverTest	boolean validSolution(org.apache.commons.math3.optimization.PointValuePair,java.util.List,double)	2	2	null
org.apache.commons.math3.optimization.linear.SimplexTableauTest	org.apache.commons.math3.optimization.linear.LinearObjectiveFunction createFunction()	3	3	null
org.apache.commons.math3.optimization.linear.SimplexTableauTest	java.util.Collection createConstraints()	3	3	null
org.apache.commons.math3.optimization.linear.SimplexTableauTest	void assertMatrixEquals(double[][],double[][])	3	3	null
org.apache.commons.math3.optimization.MultivariateMultiStartOptimizerTest$Rosenbrock	double value(double[])	16	4	4
org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerAbstractTest$LinearProblem	double[] value(double[])	2	1	1
org.apache.commons.math3.optimization.general.CircleScalar	void addPoint(double,double)	10	2	2
org.apache.commons.math3.optimization.general.CircleScalar	double getRadius(org.apache.commons.math3.geometry.euclidean.twod.Vector2D)	2	2	null
org.apache.commons.math3.optimization.general.CircleScalar	double value(double[])	16	4	4
org.apache.commons.math3.optimization.general.CircleScalar	org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure[])	4	1	1
org.apache.commons.math3.optimization.general.StraightLineProblem	void addPoint(double,double)	2	2	null
org.apache.commons.math3.optimization.general.StraightLineProblem	double[] value(double[])	2	1	1
org.apache.commons.math3.optimization.general.StraightLineProblem	double[] solve()	2	2	null
org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTestValidation	double getChi2N(org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer,org.apache.commons.math3.optimization.general.StraightLineProblem,double[])	2	1	1
org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest	org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer createOptimizer()	4	4	null
org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest	void checkEstimate(org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableVectorFunction,double,int,double,double,double,boolean)	4	1	1
org.apache.commons.math3.optimization.general.StatisticalReferenceDataset$1	double[] value(double[])	2	1	1
org.apache.commons.math3.optimization.general.MinpackTest	void minpackTest(org.apache.commons.math3.optimization.general.MinpackTest$MinpackFunction,boolean)	53	18	14
org.apache.commons.math3.optimization.general.CircleVectorial	void addPoint(double,double)	12	3	2
org.apache.commons.math3.optimization.general.CircleVectorial	double[] value(double[])	2	1	1
org.apache.commons.math3.optimization.general.RandomStraightLinePointGenerator	java.awt.geom.Point2D$Double[] generate(int)	2	2	null
org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTest	org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer createOptimizer()	3	3	null
org.apache.commons.math3.optimization.general.StraightLineProblem$Model	double value(double)	91	37	30
org.apache.commons.math3.optimization.general.StraightLineProblem$Model	org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)	41	14	9
org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest$BevingtonProblem	double[] value(double[])	2	1	1
org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest$QuadraticProblem	void addPoint(double,double)	5	1	1
org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest$QuadraticProblem	double[] value(double[])	2	1	1
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizerTest$LinearProblem	double value(double[])	16	4	4
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizerTest$LinearProblem	org.apache.commons.math3.analysis.differentiation.DerivativeStructure value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure[])	4	1	1
org.apache.commons.math3.optimization.general.CircleProblem	double[] value(double[])	2	1	1
org.apache.commons.math3.optimization.general.StatisticalReferenceDatasetFactory	org.apache.commons.math3.optimization.general.StatisticalReferenceDataset createKirby2()	3	3	null
org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest	org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer createOptimizer()	3	3	null
org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapterTest$BiQuadratic	double value(double[])	16	4	4
org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapterTest$BiQuadratic	double[] getLower()	5	5	null
org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapterTest$BiQuadratic	double[] getUpper()	5	5	null
org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapterTest$BiQuadratic	double getBoundedXOptimum()	5	5	null
org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapterTest$BiQuadratic	double getBoundedYOptimum()	5	5	null
org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest$SsDiffPow	double value(double[])	16	4	4
org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest	void doTest(org.apache.commons.math3.analysis.MultivariateFunction,double[],double[][],org.apache.commons.math3.optimization.GoalType,double,double,int,org.apache.commons.math3.optimization.PointValuePair)	19	18	1
org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest	double[] point(int,double)	35	19	15
org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest	double[][] boundaries(int,double,double)	5	5	null
org.apache.commons.math3.optimization.direct.SimplexOptimizerMultiDirectionalTest$1	double value(double[])	16	4	4
org.apache.commons.math3.optimization.direct.CMAESOptimizerTest$Cigar	double value(double[])	16	4	4
org.apache.commons.math3.optimization.direct.SimplexOptimizerMultiDirectionalTest$FourExtrema	double value(double[])	16	4	4
org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest$DiffPow	double value(double[])	16	4	4
org.apache.commons.math3.optimization.direct.CMAESOptimizerTest$2	double value(double[])	16	4	4
org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest$Cigar	double value(double[])	16	4	4
org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest$Rastrigin	double value(double[])	16	4	4
org.apache.commons.math3.optimization.direct.CMAESOptimizerTest$MinusElli	double value(double[])	16	4	4
org.apache.commons.math3.optimization.direct.PowellOptimizerTest$3	double value(double[])	17	5	4
org.apache.commons.math3.optimization.direct.CMAESOptimizerTest$ElliRotated	double value(double[])	16	4	4
org.apache.commons.math3.optimization.direct.CMAESOptimizerTest$Elli	double value(double[])	16	4	4
org.apache.commons.math3.optimization.direct.CMAESOptimizerTest$SsDiffPow	double value(double[])	16	4	4
org.apache.commons.math3.optimization.direct.CMAESOptimizerTest	void doTest(org.apache.commons.math3.analysis.MultivariateFunction,double[],double[],double[][],org.apache.commons.math3.optimization.GoalType,int,boolean,int,double,double,double,int,org.apache.commons.math3.optimization.PointValuePair)	38	22	15
org.apache.commons.math3.optimization.direct.CMAESOptimizerTest	double[] point(int,double)	67	22	22
org.apache.commons.math3.optimization.direct.CMAESOptimizerTest	double[][] boundaries(int,double,double)	7	7	null
org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest$Ackley	double value(double[])	16	4	4
org.apache.commons.math3.optimization.direct.CMAESOptimizerTest$Rosen	double value(double[])	16	4	4
org.apache.commons.math3.optimization.direct.CMAESOptimizerTest$Sphere	double value(double[])	16	4	4
org.apache.commons.math3.optimization.direct.SimplexOptimizerMultiDirectionalTest$Gaussian2D	double[] getMaximumPosition()	2	1	1
org.apache.commons.math3.optimization.direct.SimplexOptimizerMultiDirectionalTest$Gaussian2D	double value(double[])	16	4	4
org.apache.commons.math3.optimization.direct.CMAESOptimizerTest$Tablet	double value(double[])	16	4	4
org.apache.commons.math3.optimization.direct.SimplexOptimizerNelderMeadTest$Powell	double value(double[])	16	4	4
org.apache.commons.math3.optimization.direct.SimplexOptimizerMultiDirectionalTest$2	double value(double[])	16	4	4
org.apache.commons.math3.optimization.direct.PowellOptimizerTest	void doTest(org.apache.commons.math3.analysis.MultivariateFunction,double[],double[],org.apache.commons.math3.optimization.GoalType,double,double)	6	3	3
org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest$Elli	double value(double[])	16	4	4
org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest$ElliRotated	double value(double[])	16	4	4
org.apache.commons.math3.optimization.direct.CMAESOptimizerTest$Ackley	double value(double[])	16	4	4
org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest$MinusElli	double value(double[])	16	4	4
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapterTest$BiQuadratic	double value(double[])	16	4	4
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapterTest$BiQuadratic	double[] getLower()	4	4	null
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapterTest$BiQuadratic	double[] getUpper()	4	4	null
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapterTest$BiQuadratic	double getBoundedXOptimum()	4	4	null
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapterTest$BiQuadratic	double getBoundedYOptimum()	4	4	null
org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest$Tablet	double value(double[])	16	4	4
org.apache.commons.math3.optimization.direct.PowellOptimizerTest$4	double value(double[])	17	5	4
org.apache.commons.math3.optimization.direct.CMAESOptimizerTest$CigTab	double value(double[])	16	4	4
org.apache.commons.math3.optimization.direct.CMAESOptimizerTest$Rastrigin	double value(double[])	16	4	4
org.apache.commons.math3.optimization.direct.SimplexOptimizerNelderMeadTest$Rosenbrock	double value(double[])	16	4	4
org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest$Sphere	double value(double[])	16	4	4
org.apache.commons.math3.optimization.direct.PowellOptimizerTest$1	double value(double[])	16	4	4
org.apache.commons.math3.optimization.direct.SimplexOptimizerNelderMeadTest$3	double[] value(double[])	2	1	1
org.apache.commons.math3.optimization.direct.CMAESOptimizerTest$TwoAxes	double value(double[])	16	4	4
org.apache.commons.math3.optimization.direct.CMAESOptimizerTest$1	double value(double[])	16	4	4
org.apache.commons.math3.optimization.direct.SimplexOptimizerNelderMeadTest$FourExtrema	double value(double[])	16	4	4
org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest$TwoAxes	double value(double[])	16	4	4
org.apache.commons.math3.optimization.direct.PowellOptimizerTest$2	double value(double[])	16	4	4
org.apache.commons.math3.optimization.direct.SimplexOptimizerNelderMeadTest$2	double[] value(double[])	2	1	1
org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest$Rosen	double value(double[])	16	4	4
org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest$CigTab	double value(double[])	16	4	4
org.apache.commons.math3.optimization.direct.CMAESOptimizerTest$DiffPow	double value(double[])	16	4	4
org.apache.commons.math3.optimization.direct.SimplexOptimizerNelderMeadTest$1	double[] value(double[])	2	1	1
org.apache.commons.math3.optimization.univariate.BracketFinderTest$2	double value(double)	90	36	30
org.apache.commons.math3.optimization.univariate.BracketFinderTest$1	double value(double)	90	36	30
org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizerTest$1	double value(double)	90	36	30
org.apache.commons.math3.optimization.univariate.BracketFinderTest$4	double value(double)	90	36	30
org.apache.commons.math3.optimization.univariate.BrentOptimizerTest$1	double value(double)	90	36	30
org.apache.commons.math3.optimization.univariate.BrentOptimizerTest$2	double value(double)	90	36	30
org.apache.commons.math3.optimization.univariate.BracketFinderTest$3	double value(double)	90	36	30
org.apache.commons.math3.geometry.enclosing.WelzlEncloser2DTest	java.util.List buildList(double[])	4	4	null
org.apache.commons.math3.geometry.enclosing.WelzlEncloser2DTest	void checkDisk(java.util.List,java.util.List)	4	4	null
org.apache.commons.math3.geometry.spherical.twod.CircleTest	void checkArcIsInside(org.apache.commons.math3.geometry.spherical.twod.Circle,org.apache.commons.math3.geometry.spherical.twod.Circle)	2	1	1
org.apache.commons.math3.geometry.spherical.twod.SphericalPolygonsSetTest	org.apache.commons.math3.geometry.spherical.twod.SubCircle create(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,double,double[])	12	2	2
org.apache.commons.math3.geometry.spherical.twod.SphericalPolygonsSetTest	org.apache.commons.math3.geometry.spherical.twod.SphericalPolygonsSet buildSimpleZone(double[][])	2	1	1
org.apache.commons.math3.geometry.spherical.twod.SphericalPolygonsSetTest	org.apache.commons.math3.geometry.spherical.twod.S2Point s2Point(double,double)	2	1	1
org.apache.commons.math3.geometry.spherical.twod.SubCircleTest	org.apache.commons.math3.geometry.spherical.twod.SubCircle create(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,double,double[])	10	2	2
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest	org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet buildSet(org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][])	21	14	7
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest	org.apache.commons.math3.geometry.partitioning.SubHyperplane buildLine(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D)	3	1	1
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest	double intersectionAbscissa(org.apache.commons.math3.geometry.euclidean.twod.Line,org.apache.commons.math3.geometry.euclidean.twod.Line)	5	1	1
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest	org.apache.commons.math3.geometry.partitioning.SubHyperplane buildHalfLine(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,boolean)	5	1	1
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest	org.apache.commons.math3.geometry.partitioning.SubHyperplane buildSegment(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D)	9	1	1
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest	void checkPoints(org.apache.commons.math3.geometry.partitioning.Region$Location,org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet,org.apache.commons.math3.geometry.euclidean.twod.Vector2D[])	23	8	8
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest	void checkVertices(org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][],org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][])	22	12	5
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest$Counter	void count(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet)	2	1	1
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest$Counter	int getInternalNodes()	3	1	1
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest$Counter	int getLeafNodes()	3	1	1
org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest	void checkAngle(org.apache.commons.math3.analysis.differentiation.DerivativeStructure,double)	27	9	6
org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest	void checkRotationDS(org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,double,double,double,double)	14	6	5
org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest	org.apache.commons.math3.geometry.euclidean.threed.FieldRotation createRotation(double,double,double,double,boolean)	13	9	3
org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest	org.apache.commons.math3.geometry.euclidean.threed.FieldRotation createRotation(double[][],double)	11	1	1
org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest	org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D createVector(double,double,double)	123	21	19
org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest	org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D createAxis(double,double,double)	14	5	3
org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest	org.apache.commons.math3.analysis.differentiation.DerivativeStructure createAngle(double)	31	15	10
org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest	void checkVector(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)	78	17	15
org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDfpTest	void checkAngle(org.apache.commons.math3.dfp.Dfp,double)	27	9	6
org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDfpTest	void checkRotationDS(org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,double,double,double,double)	14	6	5
org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDfpTest	org.apache.commons.math3.geometry.euclidean.threed.FieldRotation createRotation(double,double,double,double,boolean)	13	9	3
org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDfpTest	org.apache.commons.math3.geometry.euclidean.threed.FieldRotation createRotation(double[][],double)	11	1	1
org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDfpTest	org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D createVector(double,double,double)	122	20	19
org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDfpTest	org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D createAxis(double,double,double)	13	4	3
org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDfpTest	org.apache.commons.math3.dfp.Dfp createAngle(double)	30	14	10
org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDfpTest	void checkVector(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D)	78	17	15
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest	void checkError(java.lang.String,org.apache.commons.math3.exception.util.LocalizedFormats)	4	4	null
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest	void checkPoints(org.apache.commons.math3.geometry.partitioning.Region$Location,org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet,org.apache.commons.math3.geometry.euclidean.threed.Vector3D[])	4	2	2
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest	org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D createVector(double,double,double,int)	160	30	26
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest	void checkVector(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,double,double,double)	8	4	3
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest	void checkVector(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,double,double,double,double,double,double,double,double,double,double,double,double)	20	5	4
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest	void checkVector(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,double,double,double,double,double,double,double,double,double,double,double,double,double,double,double)	10	3	1
org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest	void checkVector(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,double,double,double)	17	7	5
org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinatesTest	org.apache.commons.math3.analysis.differentiation.DerivativeStructure valueCartesian(org.apache.commons.math3.analysis.differentiation.DerivativeStructure,org.apache.commons.math3.analysis.differentiation.DerivativeStructure,org.apache.commons.math3.analysis.differentiation.DerivativeStructure)	2	2	null
org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinatesTest	org.apache.commons.math3.analysis.differentiation.DerivativeStructure valueSpherical(org.apache.commons.math3.analysis.differentiation.DerivativeStructure,org.apache.commons.math3.analysis.differentiation.DerivativeStructure,org.apache.commons.math3.analysis.differentiation.DerivativeStructure)	2	2	null
org.apache.commons.math3.geometry.euclidean.threed.RotationTest	void checkVector(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)	62	15	7
org.apache.commons.math3.geometry.euclidean.threed.RotationTest	void checkAngle(double,double)	27	9	6
org.apache.commons.math3.geometry.euclidean.threed.RotationTest	void checkRotation(org.apache.commons.math3.geometry.euclidean.threed.Rotation,double,double,double,double)	14	6	5
org.apache.commons.math3.geometry.euclidean.oned.Vector1DTest	void checkVector(org.apache.commons.math3.geometry.euclidean.oned.Vector1D,double)	13	5	4
org.apache.commons.math3.geometry.partitioning.RegionParser	org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet parsePolyhedronsSet(java.lang.String)	2	2	null
org.apache.commons.math3.geometry.partitioning.utilities.AVLTreeTest	org.apache.commons.math3.geometry.partitioning.utilities.AVLTree buildTree(int[])	5	5	null
org.apache.commons.math3.geometry.partitioning.utilities.AVLTreeTest	int value(org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node)	21	4	3
org.apache.commons.math3.geometry.partitioning.utilities.AVLTreeTest	void checkOrder(org.apache.commons.math3.geometry.partitioning.utilities.AVLTree)	4	4	null
